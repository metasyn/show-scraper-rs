{
  "version": 3,
  "sources": ["../node_modules/maplibre-gl/rollup/maplibregl.js", "../node_modules/xtend/immutable.js", "../node_modules/fuzzy/lib/fuzzy.js", "../node_modules/suggestions/src/list.js", "../node_modules/suggestions/src/suggestions.js", "../node_modules/suggestions/index.js", "../node_modules/lodash.debounce/index.js", "../node_modules/events/events.js", "../node_modules/@mapbox/mapbox-gl-geocoder/lib/exceptions.js", "../node_modules/@mapbox/mapbox-sdk/lib/helpers/parse-link-header.js", "../node_modules/@mapbox/mapbox-sdk/lib/classes/mapi-response.js", "../node_modules/@mapbox/mapbox-sdk/lib/constants.js", "../node_modules/@mapbox/mapbox-sdk/lib/classes/mapi-error.js", "../node_modules/@mapbox/mapbox-sdk/lib/helpers/parse-headers.js", "../node_modules/@mapbox/mapbox-sdk/lib/browser/browser-layer.js", "../node_modules/base-64/base64.js", "../node_modules/@mapbox/parse-mapbox-token/index.js", "../node_modules/eventemitter3/index.js", "../node_modules/@mapbox/mapbox-sdk/lib/helpers/url-utils.js", "../node_modules/@mapbox/mapbox-sdk/lib/classes/mapi-request.js", "../node_modules/@mapbox/mapbox-sdk/lib/classes/mapi-client.js", "../node_modules/@mapbox/mapbox-sdk/lib/browser/browser-client.js", "../node_modules/@mapbox/mapbox-sdk/index.js", "../node_modules/is-plain-obj/index.js", "../node_modules/@mapbox/fusspot/lib/index.js", "../node_modules/@mapbox/mapbox-sdk/services/service-helpers/validator.js", "../node_modules/@mapbox/mapbox-sdk/services/service-helpers/pick.js", "../node_modules/@mapbox/mapbox-sdk/services/service-helpers/object-map.js", "../node_modules/@mapbox/mapbox-sdk/services/service-helpers/stringify-booleans.js", "../node_modules/@mapbox/mapbox-sdk/services/service-helpers/create-service-factory.js", "../node_modules/@mapbox/mapbox-sdk/services/geocoding.js", "../node_modules/nanoid/url-alphabet/index.js", "../node_modules/nanoid/index.browser.js", "../node_modules/@mapbox/mapbox-gl-geocoder/lib/events.js", "../node_modules/@mapbox/mapbox-gl-geocoder/lib/localization.js", "../node_modules/subtag/subtag.js", "../node_modules/@mapbox/mapbox-gl-geocoder/lib/geolocation.js", "../node_modules/@mapbox/mapbox-gl-geocoder/lib/utils.js", "../node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js", "../src/app.ts", "../src/geocoded.json", "../node_modules/luxon/src/errors.js", "../node_modules/luxon/src/impl/formats.js", "../node_modules/luxon/src/zone.js", "../node_modules/luxon/src/zones/systemZone.js", "../node_modules/luxon/src/zones/IANAZone.js", "../node_modules/luxon/src/impl/locale.js", "../node_modules/luxon/src/zones/fixedOffsetZone.js", "../node_modules/luxon/src/zones/invalidZone.js", "../node_modules/luxon/src/impl/zoneUtil.js", "../node_modules/luxon/src/settings.js", "../node_modules/luxon/src/impl/util.js", "../node_modules/luxon/src/impl/english.js", "../node_modules/luxon/src/impl/formatter.js", "../node_modules/luxon/src/impl/invalid.js", "../node_modules/luxon/src/impl/regexParser.js", "../node_modules/luxon/src/duration.js", "../node_modules/luxon/src/interval.js", "../node_modules/luxon/src/info.js", "../node_modules/luxon/src/impl/diff.js", "../node_modules/luxon/src/impl/digits.js", "../node_modules/luxon/src/impl/tokenParser.js", "../node_modules/luxon/src/impl/conversions.js", "../node_modules/luxon/src/datetime.js", "../src/parser.ts"],
  "sourcesContent": ["//\n// Our custom intro provides a specialized \"define()\" function, called by the\n// AMD modules below, that sets up the worker blob URL and then executes the\n// main module, storing its exported value as 'maplibregl'\n\n// The three \"chunks\" imported here are produced by a first Rollup pass,\n// which outputs them as AMD modules.\n\n// Shared dependencies, i.e.:\n/*\ndefine(['exports'], function (exports) {\n    // Code for all common dependencies\n    // Each module's exports are attached attached to 'exports' (with\n    // names rewritten to avoid collisions, etc.)\n})\n*/\nimport './build/maplibregl/shared';\n\n// Worker and its unique dependencies, i.e.:\n/*\ndefine(['./shared.js'], function (__shared__js) {\n    //  Code for worker script and its unique dependencies.\n    //  Expects the output of 'shared' module to be passed in as an argument,\n    //  since all references to common deps look like, e.g.,\n    //  __shared__js.shapeText().\n});\n*/\n// When this wrapper function is passed to our custom define() above,\n// it gets stringified, together with the shared wrapper (using\n// Function.toString()), and the resulting string of code is made into a\n// Blob URL that gets used by the main module to create the web workers.\nimport './build/maplibregl/worker';\n\n// Main module and its unique dependencies\n/*\ndefine(['./shared.js'], function (__shared__js) {\n    //  Code for main GL JS module and its unique dependencies.\n    //  Expects the output of 'shared' module to be passed in as an argument,\n    //  since all references to common deps look like, e.g.,\n    //  __shared__js.shapeText().\n    //\n    //  Returns the actual maplibregl (i.e. src/index.js)\n});\n*/\nimport './build/maplibregl/index';\n\nexport default maplibregl;\n", "module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n", "/*\n * Fuzzy\n * https://github.com/myork/fuzzy\n *\n * Copyright (c) 2012 Matt York\n * Licensed under the MIT license.\n */\n\n(function() {\n\nvar root = this;\n\nvar fuzzy = {};\n\n// Use in node or in browser\nif (typeof exports !== 'undefined') {\n  module.exports = fuzzy;\n} else {\n  root.fuzzy = fuzzy;\n}\n\n// Return all elements of `array` that have a fuzzy\n// match against `pattern`.\nfuzzy.simpleFilter = function(pattern, array) {\n  return array.filter(function(str) {\n    return fuzzy.test(pattern, str);\n  });\n};\n\n// Does `pattern` fuzzy match `str`?\nfuzzy.test = function(pattern, str) {\n  return fuzzy.match(pattern, str) !== null;\n};\n\n// If `pattern` matches `str`, wrap each matching character\n// in `opts.pre` and `opts.post`. If no match, return null\nfuzzy.match = function(pattern, str, opts) {\n  opts = opts || {};\n  var patternIdx = 0\n    , result = []\n    , len = str.length\n    , totalScore = 0\n    , currScore = 0\n    // prefix\n    , pre = opts.pre || ''\n    // suffix\n    , post = opts.post || ''\n    // String to compare against. This might be a lowercase version of the\n    // raw string\n    , compareString =  opts.caseSensitive && str || str.toLowerCase()\n    , ch;\n\n  pattern = opts.caseSensitive && pattern || pattern.toLowerCase();\n\n  // For each character in the string, either add it to the result\n  // or wrap in template if it's the next string in the pattern\n  for(var idx = 0; idx < len; idx++) {\n    ch = str[idx];\n    if(compareString[idx] === pattern[patternIdx]) {\n      ch = pre + ch + post;\n      patternIdx += 1;\n\n      // consecutive characters should increase the score more than linearly\n      currScore += 1 + currScore;\n    } else {\n      currScore = 0;\n    }\n    totalScore += currScore;\n    result[result.length] = ch;\n  }\n\n  // return rendered string if we have a match for every char\n  if(patternIdx === pattern.length) {\n    // if the string is an exact match with pattern, totalScore should be maxed\n    totalScore = (compareString === pattern) ? Infinity : totalScore;\n    return {rendered: result.join(''), score: totalScore};\n  }\n\n  return null;\n};\n\n// The normal entry point. Filters `arr` for matches against `pattern`.\n// It returns an array with matching values of the type:\n//\n//     [{\n//         string:   '<b>lah' // The rendered string\n//       , index:    2        // The index of the element in `arr`\n//       , original: 'blah'   // The original element in `arr`\n//     }]\n//\n// `opts` is an optional argument bag. Details:\n//\n//    opts = {\n//        // string to put before a matching character\n//        pre:     '<b>'\n//\n//        // string to put after matching character\n//      , post:    '</b>'\n//\n//        // Optional function. Input is an entry in the given arr`,\n//        // output should be the string to test `pattern` against.\n//        // In this example, if `arr = [{crying: 'koala'}]` we would return\n//        // 'koala'.\n//      , extract: function(arg) { return arg.crying; }\n//    }\nfuzzy.filter = function(pattern, arr, opts) {\n  if(!arr || arr.length === 0) {\n    return [];\n  }\n  if (typeof pattern !== 'string') {\n    return arr;\n  }\n  opts = opts || {};\n  return arr\n    .reduce(function(prev, element, idx, arr) {\n      var str = element;\n      if(opts.extract) {\n        str = opts.extract(element);\n      }\n      var rendered = fuzzy.match(pattern, str, opts);\n      if(rendered != null) {\n        prev[prev.length] = {\n            string: rendered.rendered\n          , score: rendered.score\n          , index: idx\n          , original: element\n        };\n      }\n      return prev;\n    }, [])\n\n    // Sort by score. Browsers are inconsistent wrt stable/unstable\n    // sorting, so force stable by using the index in the case of tie.\n    // See http://ofb.net/~sethml/is-sort-stable.html\n    .sort(function(a,b) {\n      var compare = b.score - a.score;\n      if(compare) return compare;\n      return a.index - b.index;\n    });\n};\n\n\n}());\n\n", "'use strict';\n\nvar List = function(component) {\n  this.component = component;\n  this.items = [];\n  this.active = 0;\n  this.wrapper = document.createElement('div');\n  this.wrapper.className = 'suggestions-wrapper';\n  this.element = document.createElement('ul');\n  this.element.className = 'suggestions';\n  this.wrapper.appendChild(this.element);\n\n  // selectingListItem is set to true in the time between the mousedown and mouseup when clicking an item in the list\n  // mousedown on a list item will cause the input to blur which normally hides the list, so this flag is used to keep\n  // the list open until the mouseup\n  this.selectingListItem = false;\n\n  component.el.parentNode.insertBefore(this.wrapper, component.el.nextSibling);\n  return this;\n};\n\nList.prototype.show = function() {\n  this.element.style.display = 'block';\n};\n\nList.prototype.hide = function() {\n  this.element.style.display = 'none';\n};\n\nList.prototype.add = function(item) {\n  this.items.push(item);\n};\n\nList.prototype.clear = function() {\n  this.items = [];\n  this.active = 0;\n};\n\nList.prototype.isEmpty = function() {\n  return !this.items.length;\n};\n\nList.prototype.isVisible = function() {\n  return this.element.style.display === 'block';\n};\n\nList.prototype.draw = function() {\n  this.element.innerHTML = '';\n\n  if (this.items.length === 0) {\n    this.hide();\n    return;\n  }\n\n  for (var i = 0; i < this.items.length; i++) {\n    this.drawItem(this.items[i], this.active === i);\n  }\n\n  this.show();\n};\n\nList.prototype.drawItem = function(item, active) {\n  var li = document.createElement('li'),\n    a = document.createElement('a');\n\n  if (active) li.className += ' active';\n\n  a.innerHTML = item.string;\n\n  li.appendChild(a);\n  this.element.appendChild(li);\n\n  li.addEventListener('mousedown', function() {\n    this.selectingListItem = true;\n  }.bind(this));\n\n  li.addEventListener('mouseup', function() {\n    this.handleMouseUp.call(this, item);\n  }.bind(this));\n};\n\nList.prototype.handleMouseUp = function(item) {\n  this.selectingListItem = false;\n  this.component.value(item.original);\n  this.clear();\n  this.draw();\n};\n\nList.prototype.move = function(index) {\n  this.active = index;\n  this.draw();\n};\n\nList.prototype.previous = function() {\n  this.move(this.active === 0 ? this.items.length - 1 : this.active - 1);\n};\n\nList.prototype.next = function() {\n  this.move(this.active === this.items.length - 1 ? 0 : this.active + 1);\n};\n\nList.prototype.drawError = function(msg){\n  var li = document.createElement('li');\n\n  li.innerHTML = msg;\n\n  this.element.appendChild(li);\n  this.show();\n}\n\nmodule.exports = List;\n", "'use strict';\n\nvar extend = require('xtend');\nvar fuzzy = require('fuzzy');\nvar List = require('./list');\n\nvar Suggestions = function(el, data, options) {\n  options = options || {};\n\n  this.options = extend({\n    minLength: 2,\n    limit: 5,\n    filter: true,\n    hideOnBlur: true\n  }, options);\n\n  this.el = el;\n  this.data = data || [];\n  this.list = new List(this);\n\n  this.query = '';\n  this.selected = null;\n\n  this.list.draw();\n\n  this.el.addEventListener('keyup', function(e) {\n    this.handleKeyUp(e.keyCode);\n  }.bind(this), false);\n\n  this.el.addEventListener('keydown', function(e) {\n    this.handleKeyDown(e);\n  }.bind(this));\n\n  this.el.addEventListener('focus', function() {\n    this.handleFocus();\n  }.bind(this));\n\n  this.el.addEventListener('blur', function() {\n    this.handleBlur();\n  }.bind(this));\n\n  this.el.addEventListener('paste', function(e) {\n    this.handlePaste(e);\n  }.bind(this));\n\n  // use user-provided render function if given, otherwise just use the default\n  this.render = (this.options.render) ? this.options.render.bind(this) : this.render.bind(this)\n\n  this.getItemValue = (this.options.getItemValue) ? this.options.getItemValue.bind(this) : this.getItemValue.bind(this);\n\n  return this;\n};\n\nSuggestions.prototype.handleKeyUp = function(keyCode) {\n  // 40 - DOWN\n  // 38 - UP\n  // 27 - ESC\n  // 13 - ENTER\n  // 9 - TAB\n\n  if (keyCode === 40 ||\n      keyCode === 38 ||\n      keyCode === 27 ||\n      keyCode === 13 ||\n      keyCode === 9) return;\n\n  this.handleInputChange(this.el.value);\n};\n\nSuggestions.prototype.handleKeyDown = function(e) {\n  switch (e.keyCode) {\n    case 13: // ENTER\n    case 9: // TAB\n      if (!this.list.isEmpty()) {\n        if (this.list.isVisible()) {\n          e.preventDefault();\n        }\n        this.value(this.list.items[this.list.active].original);\n        this.list.hide();\n      }\n    break;\n    case 27: // ESC\n      if (!this.list.isEmpty()) this.list.hide();\n    break;\n    case 38: // UP\n      this.list.previous();\n    break;\n    case 40: // DOWN\n      this.list.next();\n    break;\n  }\n};\n\nSuggestions.prototype.handleBlur = function() {\n  if (!this.list.selectingListItem && this.options.hideOnBlur) {\n    this.list.hide();\n  }\n};\n\nSuggestions.prototype.handlePaste = function(e) {\n  if (e.clipboardData) {\n    this.handleInputChange(e.clipboardData.getData('Text'));\n  } else {\n    var self = this;\n    setTimeout(function () {\n      self.handleInputChange(e.target.value);\n    }, 100);\n  }\n};\n\nSuggestions.prototype.handleInputChange = function(query) {\n  this.query = this.normalize(query);\n\n  this.list.clear();\n\n  if (this.query.length < this.options.minLength) {\n    this.list.draw();\n    return;\n  }\n\n  this.getCandidates(function(data) {\n    for (var i = 0; i < data.length; i++) {\n      this.list.add(data[i]);\n      if (i === (this.options.limit - 1)) break;\n    }\n    this.list.draw();\n  }.bind(this));\n};\n\nSuggestions.prototype.handleFocus = function() {\n  if (!this.list.isEmpty()) this.list.show();\n  this.list.selectingListItem = false;\n};\n\n/**\n * Update data previously passed\n *\n * @param {Array} revisedData\n */\nSuggestions.prototype.update = function(revisedData) {\n  this.data = revisedData;\n  this.handleKeyUp();\n};\n\n/**\n * Clears data\n */\nSuggestions.prototype.clear = function() {\n  this.data = [];\n  this.list.clear();\n};\n\n/**\n * Normalize the results list and input value for matching\n *\n * @param {String} value\n * @return {String}\n */\nSuggestions.prototype.normalize = function(value) {\n  value = value.toLowerCase();\n  return value;\n};\n\n/**\n * Evaluates whether an array item qualifies as a match with the current query\n *\n * @param {String} candidate a possible item from the array passed\n * @param {String} query the current query\n * @return {Boolean}\n */\nSuggestions.prototype.match = function(candidate, query) {\n  return candidate.indexOf(query) > -1;\n};\n\nSuggestions.prototype.value = function(value) {\n  this.selected = value;\n  this.el.value = this.getItemValue(value);\n\n  if (document.createEvent) {\n    var e = document.createEvent('HTMLEvents');\n    e.initEvent('change', true, false);\n    this.el.dispatchEvent(e);\n  } else {\n    this.el.fireEvent('onchange');\n  }\n};\n\nSuggestions.prototype.getCandidates = function(callback) {\n  var options = {\n    pre: '<strong>',\n    post: '</strong>',\n    extract: function(d) { return this.getItemValue(d); }.bind(this)\n  };\n  var results;\n  if(this.options.filter){\n    results = fuzzy.filter(this.query, this.data, options);\n\n    results = results.map(function(item){\n      return {\n        original: item.original,\n        string: this.render(item.original, item.string)\n      };\n    }.bind(this))\n  }else{\n    results = this.data.map(function(d) {\n      var renderedString = this.render(d);\n      return {\n        original: d,\n        string: renderedString\n      };\n    }.bind(this));\n  }\n  callback(results);\n};\n\n/**\n * For a given item in the data array, return what should be used as the candidate string\n *\n * @param {Object|String} item an item from the data array\n * @return {String} item\n */\nSuggestions.prototype.getItemValue = function(item) {\n  return item;\n};\n\n/**\n * For a given item in the data array, return a string of html that should be rendered in the dropdown\n * @param {Object|String} item an item from the data array\n * @param {String} sourceFormatting a string that has pre-formatted html that should be passed directly through the render function \n * @return {String} html\n */\nSuggestions.prototype.render = function(item, sourceFormatting) {\n  if (sourceFormatting){\n    // use existing formatting on the source string\n    return sourceFormatting;\n  }\n  var boldString = (item.original) ? this.getItemValue(item.original) : this.getItemValue(item);\n  var indexString = this.normalize(boldString);\n  var indexOfQuery = indexString.lastIndexOf(this.query);\n  while (indexOfQuery > -1) {\n    var endIndexOfQuery = indexOfQuery + this.query.length;\n    boldString = boldString.slice(0, indexOfQuery) + '<strong>' + boldString.slice(indexOfQuery, endIndexOfQuery) + '</strong>' + boldString.slice(endIndexOfQuery);\n    indexOfQuery = indexString.slice(0, indexOfQuery).lastIndexOf(this.query);\n  }\n  return boldString\n}\n\n/**\n * Render an custom error message in the suggestions list\n * @param {String} msg An html string to render as an error message\n */\nSuggestions.prototype.renderError = function(msg){\n  this.list.drawError(msg);\n}\n\nmodule.exports = Suggestions;\n", "'use strict';\n\n/**\n * A typeahead component for inputs\n * @class Suggestions\n *\n * @param {HTMLInputElement} el A valid HTML input element\n * @param {Array} data An array of data used for results\n * @param {Object} options\n * @param {Number} [options.limit=5] Max number of results to display in the auto suggest list.\n * @param {Number} [options.minLength=2] Number of characters typed into an input to trigger suggestions.\n * @param {Boolean} [options.hideOnBlur=true] If `true`, hides the suggestions when focus is lost.\n * @return {Suggestions} `this`\n * @example\n * // in the browser\n * var input = document.querySelector('input');\n * var data = [\n *   'Roy Eldridge',\n *   'Roy Hargrove',\n *   'Rex Stewart'\n * ];\n *\n * new Suggestions(input, data);\n *\n * // with options\n * var input = document.querySelector('input');\n * var data = [{\n *   name: 'Roy Eldridge',\n *   year: 1911\n * }, {\n *   name: 'Roy Hargrove',\n *   year: 1969\n * }, {\n *   name: 'Rex Stewart',\n *   year: 1907\n * }];\n *\n * var typeahead = new Suggestions(input, data, {\n *   filter: false, // Disable filtering\n *   minLength: 3, // Number of characters typed into an input to trigger suggestions.\n *   limit: 3, //  Max number of results to display.\n *   hideOnBlur: false // Don't hide results when input loses focus\n * });\n *\n * // As we're passing an object of an arrays as data, override\n * // `getItemValue` by specifying the specific property to search on.\n * typeahead.getItemValue = function(item) { return item.name };\n *\n * input.addEventListener('change', function() {\n *   console.log(typeahead.selected); // Current selected item.\n * });\n *\n * // With browserify\n * var Suggestions = require('suggestions');\n *\n * new Suggestions(input, data);\n */\nvar Suggestions = require('./src/suggestions');\nmodule.exports = Suggestions;\n\nif (typeof window !== 'undefined') {\n  window.Suggestions = Suggestions;\n}\n", "/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = debounce;\n", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n", "module.exports = {\n  'fr': {\n    'name': 'France',\n    'bbox': [[-4.59235, 41.380007], [9.560016, 51.148506]]\n  },\n  'us': {\n    'name': 'United States',\n    'bbox': [[-171.791111, 18.91619], [-66.96466, 71.357764]]\n  },\n  'ru': {\n    'name': 'Russia',\n    'bbox': [[19.66064, 41.151416], [190.10042, 81.2504]]\n  },\n  'ca': {\n    'name': 'Canada',\n    'bbox': [[-140.99778, 41.675105], [-52.648099, 83.23324]]\n  }\n};\n", "'use strict';\n\n// Like https://github.com/thlorenz/lib/parse-link-header but without any\n// additional dependencies.\n\nfunction parseParam(param) {\n  var parts = param.match(/\\s*(.+)\\s*=\\s*\"?([^\"]+)\"?/);\n  if (!parts) return null;\n\n  return {\n    key: parts[1],\n    value: parts[2]\n  };\n}\n\nfunction parseLink(link) {\n  var parts = link.match(/<?([^>]*)>(.*)/);\n  if (!parts) return null;\n\n  var linkUrl = parts[1];\n  var linkParams = parts[2].split(';');\n  var rel = null;\n  var parsedLinkParams = linkParams.reduce(function(result, param) {\n    var parsed = parseParam(param);\n    if (!parsed) return result;\n    if (parsed.key === 'rel') {\n      if (!rel) {\n        rel = parsed.value;\n      }\n      return result;\n    }\n    result[parsed.key] = parsed.value;\n    return result;\n  }, {});\n  if (!rel) return null;\n\n  return {\n    url: linkUrl,\n    rel: rel,\n    params: parsedLinkParams\n  };\n}\n\n/**\n * Parse a Link header.\n *\n * @param {string} linkHeader\n * @returns {{\n *   [string]: {\n *     url: string,\n *     params: { [string]: string }\n *   }\n * }}\n */\nfunction parseLinkHeader(linkHeader) {\n  if (!linkHeader) return {};\n\n  return linkHeader.split(/,\\s*</).reduce(function(result, link) {\n    var parsed = parseLink(link);\n    if (!parsed) return result;\n    // rel value can be multiple whitespace-separated rels.\n    var splitRel = parsed.rel.split(/\\s+/);\n    splitRel.forEach(function(rel) {\n      if (!result[rel]) {\n        result[rel] = {\n          url: parsed.url,\n          params: parsed.params\n        };\n      }\n    });\n    return result;\n  }, {});\n}\n\nmodule.exports = parseLinkHeader;\n", "'use strict';\n\nvar parseLinkHeader = require('../helpers/parse-link-header');\n\n/**\n * A Mapbox API response.\n *\n * @class MapiResponse\n * @property {Object} body - The response body, parsed as JSON.\n * @property {string} rawBody - The raw response body.\n * @property {number} statusCode - The response's status code.\n * @property {Object} headers - The parsed response headers.\n * @property {Object} links - The parsed response links.\n * @property {MapiRequest} request - The response's originating `MapiRequest`.\n */\n\n/**\n * @ignore\n * @param {MapiRequest} request\n * @param {Object} responseData\n * @param {Object} responseData.headers\n * @param {string} responseData.body\n * @param {number} responseData.statusCode\n */\nfunction MapiResponse(request, responseData) {\n  this.request = request;\n  this.headers = responseData.headers;\n  this.rawBody = responseData.body;\n  this.statusCode = responseData.statusCode;\n  try {\n    this.body = JSON.parse(responseData.body || '{}');\n  } catch (parseError) {\n    this.body = responseData.body;\n  }\n  this.links = parseLinkHeader(this.headers.link);\n}\n\n/**\n * Check if there is a next page that you can fetch.\n *\n * @returns {boolean}\n */\nMapiResponse.prototype.hasNextPage = function hasNextPage() {\n  return !!this.links.next;\n};\n\n/**\n * Create a request for the next page, if there is one.\n * If there is no next page, returns `null`.\n *\n * @returns {MapiRequest | null}\n */\nMapiResponse.prototype.nextPage = function nextPage() {\n  if (!this.hasNextPage()) return null;\n  return this.request._extend({\n    path: this.links.next.url\n  });\n};\n\nmodule.exports = MapiResponse;\n", "'use strict';\n\nmodule.exports = {\n  API_ORIGIN: 'https://api.mapbox.com',\n  EVENT_PROGRESS_DOWNLOAD: 'downloadProgress',\n  EVENT_PROGRESS_UPLOAD: 'uploadProgress',\n  EVENT_ERROR: 'error',\n  EVENT_RESPONSE: 'response',\n  ERROR_HTTP: 'HttpError',\n  ERROR_REQUEST_ABORTED: 'RequestAbortedError'\n};\n", "'use strict';\n\nvar constants = require('../constants');\n\n/**\n * A Mapbox API error.\n *\n * If there's an error during the API transaction,\n * the Promise returned by `MapiRequest`'s [`send`](#send)\n * method should reject with a `MapiError`.\n *\n * @class MapiError\n * @hideconstructor\n * @property {MapiRequest} request - The errored request.\n * @property {string} type - The type of error. Usually this is `'HttpError'`.\n *   If the request was aborted, so the error was\n *   not sent from the server, the type will be\n *   `'RequestAbortedError'`.\n * @property {number} [statusCode] - The numeric status code of\n *   the HTTP response.\n * @property {Object | string} [body] - If the server sent a response body,\n *   this property exposes that response, parsed as JSON if possible.\n * @property {string} [message] - Whatever message could be derived from the\n *   call site and HTTP response.\n *\n * @param {MapiRequest} options.request\n * @param {number} [options.statusCode]\n * @param {string} [options.body]\n * @param {string} [options.message]\n * @param {string} [options.type]\n */\nfunction MapiError(options) {\n  var errorType = options.type || constants.ERROR_HTTP;\n\n  var body;\n  if (options.body) {\n    try {\n      body = JSON.parse(options.body);\n    } catch (e) {\n      body = options.body;\n    }\n  } else {\n    body = null;\n  }\n\n  var message = options.message || null;\n  if (!message) {\n    if (typeof body === 'string') {\n      message = body;\n    } else if (body && typeof body.message === 'string') {\n      message = body.message;\n    } else if (errorType === constants.ERROR_REQUEST_ABORTED) {\n      message = 'Request aborted';\n    }\n  }\n\n  this.message = message;\n  this.type = errorType;\n  this.statusCode = options.statusCode || null;\n  this.request = options.request;\n  this.body = body;\n}\n\nmodule.exports = MapiError;\n", "'use strict';\n\nfunction parseSingleHeader(raw) {\n  var boundary = raw.indexOf(':');\n  var name = raw\n    .substring(0, boundary)\n    .trim()\n    .toLowerCase();\n  var value = raw.substring(boundary + 1).trim();\n  return {\n    name: name,\n    value: value\n  };\n}\n\n/**\n * Parse raw headers into an object with lowercase properties.\n * Does not fully parse headings into more complete data structure,\n * as larger libraries might do. Also does not deal with duplicate\n * headers because Node doesn't seem to deal with those well, so\n * we shouldn't let the browser either, for consistency.\n *\n * @param {string} raw\n * @returns {Object}\n */\nfunction parseHeaders(raw) {\n  var headers = {};\n  if (!raw) {\n    return headers;\n  }\n\n  raw\n    .trim()\n    .split(/[\\r|\\n]+/)\n    .forEach(function(rawHeader) {\n      var parsed = parseSingleHeader(rawHeader);\n      headers[parsed.name] = parsed.value;\n    });\n\n  return headers;\n}\n\nmodule.exports = parseHeaders;\n", "'use strict';\n\nvar MapiResponse = require('../classes/mapi-response');\nvar MapiError = require('../classes/mapi-error');\nvar constants = require('../constants');\nvar parseHeaders = require('../helpers/parse-headers');\n\n// Keys are request IDs, values are XHRs.\nvar requestsUnderway = {};\n\nfunction browserAbort(request) {\n  var xhr = requestsUnderway[request.id];\n  if (!xhr) return;\n  xhr.abort();\n  delete requestsUnderway[request.id];\n}\n\nfunction createResponse(request, xhr) {\n  return new MapiResponse(request, {\n    body: xhr.response,\n    headers: parseHeaders(xhr.getAllResponseHeaders()),\n    statusCode: xhr.status\n  });\n}\n\nfunction normalizeBrowserProgressEvent(event) {\n  var total = event.total;\n  var transferred = event.loaded;\n  var percent = (100 * transferred) / total;\n  return {\n    total: total,\n    transferred: transferred,\n    percent: percent\n  };\n}\n\nfunction sendRequestXhr(request, xhr) {\n  return new Promise(function(resolve, reject) {\n    xhr.onprogress = function(event) {\n      request.emitter.emit(\n        constants.EVENT_PROGRESS_DOWNLOAD,\n        normalizeBrowserProgressEvent(event)\n      );\n    };\n\n    var file = request.file;\n    if (file) {\n      xhr.upload.onprogress = function(event) {\n        request.emitter.emit(\n          constants.EVENT_PROGRESS_UPLOAD,\n          normalizeBrowserProgressEvent(event)\n        );\n      };\n    }\n\n    xhr.onerror = function(error) {\n      reject(error);\n    };\n\n    xhr.onabort = function() {\n      var mapiError = new MapiError({\n        request: request,\n        type: constants.ERROR_REQUEST_ABORTED\n      });\n      reject(mapiError);\n    };\n\n    xhr.onload = function() {\n      delete requestsUnderway[request.id];\n      if (xhr.status < 200 || xhr.status >= 400) {\n        var mapiError = new MapiError({\n          request: request,\n          body: xhr.response,\n          statusCode: xhr.status\n        });\n        reject(mapiError);\n        return;\n      }\n      resolve(xhr);\n    };\n\n    var body = request.body;\n\n    // matching service needs to send a www-form-urlencoded request\n    if (typeof body === 'string') {\n      xhr.send(body);\n    } else if (body) {\n      xhr.send(JSON.stringify(body));\n    } else if (file) {\n      xhr.send(file);\n    } else {\n      xhr.send();\n    }\n\n    requestsUnderway[request.id] = xhr;\n  }).then(function(xhr) {\n    return createResponse(request, xhr);\n  });\n}\n\n// The accessToken argument gives this function flexibility\n// for Mapbox's internal client.\nfunction createRequestXhr(request, accessToken) {\n  var url = request.url(accessToken);\n  var xhr = new window.XMLHttpRequest();\n  xhr.open(request.method, url);\n  Object.keys(request.headers).forEach(function(key) {\n    xhr.setRequestHeader(key, request.headers[key]);\n  });\n  return xhr;\n}\n\nfunction browserSend(request) {\n  return Promise.resolve().then(function() {\n    var xhr = createRequestXhr(request, request.client.accessToken);\n    return sendRequestXhr(request, xhr);\n  });\n}\n\nmodule.exports = {\n  browserAbort: browserAbort,\n  sendRequestXhr: sendRequestXhr,\n  browserSend: browserSend,\n  createRequestXhr: createRequestXhr\n};\n", "/*! http://mths.be/base64 v0.1.0 by @mathias | MIT license */\n;(function(root) {\n\n\t// Detect free variables `exports`.\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`.\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code, and use\n\t// it as `root`.\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar InvalidCharacterError = function(message) {\n\t\tthis.message = message;\n\t};\n\tInvalidCharacterError.prototype = new Error;\n\tInvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\n\tvar error = function(message) {\n\t\t// Note: the error messages used throughout this file match those used by\n\t\t// the native `atob`/`btoa` implementation in Chromium.\n\t\tthrow new InvalidCharacterError(message);\n\t};\n\n\tvar TABLE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\t// http://whatwg.org/html/common-microsyntaxes.html#space-character\n\tvar REGEX_SPACE_CHARACTERS = /[\\t\\n\\f\\r ]/g;\n\n\t// `decode` is designed to be fully compatible with `atob` as described in the\n\t// HTML Standard. http://whatwg.org/html/webappapis.html#dom-windowbase64-atob\n\t// The optimized base64-decoding algorithm used is based on @atk\u2019s excellent\n\t// implementation. https://gist.github.com/atk/1020396\n\tvar decode = function(input) {\n\t\tinput = String(input)\n\t\t\t.replace(REGEX_SPACE_CHARACTERS, '');\n\t\tvar length = input.length;\n\t\tif (length % 4 == 0) {\n\t\t\tinput = input.replace(/==?$/, '');\n\t\t\tlength = input.length;\n\t\t}\n\t\tif (\n\t\t\tlength % 4 == 1 ||\n\t\t\t// http://whatwg.org/C#alphanumeric-ascii-characters\n\t\t\t/[^+a-zA-Z0-9/]/.test(input)\n\t\t) {\n\t\t\terror(\n\t\t\t\t'Invalid character: the string to be decoded is not correctly encoded.'\n\t\t\t);\n\t\t}\n\t\tvar bitCounter = 0;\n\t\tvar bitStorage;\n\t\tvar buffer;\n\t\tvar output = '';\n\t\tvar position = -1;\n\t\twhile (++position < length) {\n\t\t\tbuffer = TABLE.indexOf(input.charAt(position));\n\t\t\tbitStorage = bitCounter % 4 ? bitStorage * 64 + buffer : buffer;\n\t\t\t// Unless this is the first of a group of 4 characters\u2026\n\t\t\tif (bitCounter++ % 4) {\n\t\t\t\t// \u2026convert the first 8 bits to a single ASCII character.\n\t\t\t\toutput += String.fromCharCode(\n\t\t\t\t\t0xFF & bitStorage >> (-2 * bitCounter & 6)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t};\n\n\t// `encode` is designed to be fully compatible with `btoa` as described in the\n\t// HTML Standard: http://whatwg.org/html/webappapis.html#dom-windowbase64-btoa\n\tvar encode = function(input) {\n\t\tinput = String(input);\n\t\tif (/[^\\0-\\xFF]/.test(input)) {\n\t\t\t// Note: no need to special-case astral symbols here, as surrogates are\n\t\t\t// matched, and the input is supposed to only contain ASCII anyway.\n\t\t\terror(\n\t\t\t\t'The string to be encoded contains characters outside of the ' +\n\t\t\t\t'Latin1 range.'\n\t\t\t);\n\t\t}\n\t\tvar padding = input.length % 3;\n\t\tvar output = '';\n\t\tvar position = -1;\n\t\tvar a;\n\t\tvar b;\n\t\tvar c;\n\t\tvar d;\n\t\tvar buffer;\n\t\t// Make sure any padding is handled outside of the loop.\n\t\tvar length = input.length - padding;\n\n\t\twhile (++position < length) {\n\t\t\t// Read three bytes, i.e. 24 bits.\n\t\t\ta = input.charCodeAt(position) << 16;\n\t\t\tb = input.charCodeAt(++position) << 8;\n\t\t\tc = input.charCodeAt(++position);\n\t\t\tbuffer = a + b + c;\n\t\t\t// Turn the 24 bits into four chunks of 6 bits each, and append the\n\t\t\t// matching character for each of them to the output.\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 18 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer >> 12 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer >> 6 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer & 0x3F)\n\t\t\t);\n\t\t}\n\n\t\tif (padding == 2) {\n\t\t\ta = input.charCodeAt(position) << 8;\n\t\t\tb = input.charCodeAt(++position);\n\t\t\tbuffer = a + b;\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 10) +\n\t\t\t\tTABLE.charAt((buffer >> 4) & 0x3F) +\n\t\t\t\tTABLE.charAt((buffer << 2) & 0x3F) +\n\t\t\t\t'='\n\t\t\t);\n\t\t} else if (padding == 1) {\n\t\t\tbuffer = input.charCodeAt(position);\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 2) +\n\t\t\t\tTABLE.charAt((buffer << 4) & 0x3F) +\n\t\t\t\t'=='\n\t\t\t);\n\t\t}\n\n\t\treturn output;\n\t};\n\n\tvar base64 = {\n\t\t'encode': encode,\n\t\t'decode': decode,\n\t\t'version': '0.1.0'\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn base64;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = base64;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (var key in base64) {\n\t\t\t\tbase64.hasOwnProperty(key) && (freeExports[key] = base64[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.base64 = base64;\n\t}\n\n}(this));\n", "'use strict';\n\nvar base64 = require('base-64');\n\nvar tokenCache = {};\n\nfunction parseToken(token) {\n  if (tokenCache[token]) {\n    return tokenCache[token];\n  }\n\n  var parts = token.split('.');\n  var usage = parts[0];\n  var rawPayload = parts[1];\n  if (!rawPayload) {\n    throw new Error('Invalid token');\n  }\n\n  var parsedPayload = parsePaylod(rawPayload);\n\n  var result = {\n    usage: usage,\n    user: parsedPayload.u\n  };\n  if (has(parsedPayload, 'a')) result.authorization = parsedPayload.a;\n  if (has(parsedPayload, 'exp')) result.expires = parsedPayload.exp * 1000;\n  if (has(parsedPayload, 'iat')) result.created = parsedPayload.iat * 1000;\n  if (has(parsedPayload, 'scopes')) result.scopes = parsedPayload.scopes;\n  if (has(parsedPayload, 'client')) result.client = parsedPayload.client;\n  if (has(parsedPayload, 'll')) result.lastLogin = parsedPayload.ll;\n  if (has(parsedPayload, 'iu')) result.impersonator = parsedPayload.iu;\n\n  tokenCache[token] = result;\n  return result;\n}\n\nfunction parsePaylod(rawPayload) {\n  try {\n    return JSON.parse(base64.decode(rawPayload));\n  } catch (parseError) {\n    throw new Error('Invalid token');\n  }\n}\n\nfunction has(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nmodule.exports = parseToken;\n", "'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n", "'use strict';\n\n// Encode each item of an array individually. The comma\n// delimiters should not themselves be encoded.\nfunction encodeArray(arrayValue) {\n  return arrayValue.map(encodeURIComponent).join(',');\n}\n\nfunction encodeValue(value) {\n  if (Array.isArray(value)) {\n    return encodeArray(value);\n  }\n  return encodeURIComponent(String(value));\n}\n\n/**\n * Append a query parameter to a URL.\n *\n * @param {string} url\n * @param {string} key\n * @param {string|number|boolean|Array<*>>} [value] - Provide an array\n *   if the value is a list and commas between values need to be\n *   preserved, unencoded.\n * @returns {string} - Modified URL.\n */\nfunction appendQueryParam(url, key, value) {\n  if (value === false || value === null) {\n    return url;\n  }\n  var punctuation = /\\?/.test(url) ? '&' : '?';\n  var query = encodeURIComponent(key);\n  if (value !== undefined && value !== '' && value !== true) {\n    query += '=' + encodeValue(value);\n  }\n  return '' + url + punctuation + query;\n}\n\n/**\n * Derive a query string from an object and append it\n * to a URL.\n *\n * @param {string} url\n * @param {Object} [queryObject] - Values should be primitives.\n * @returns {string} - Modified URL.\n */\nfunction appendQueryObject(url, queryObject) {\n  if (!queryObject) {\n    return url;\n  }\n\n  var result = url;\n  Object.keys(queryObject).forEach(function(key) {\n    var value = queryObject[key];\n    if (value === undefined) {\n      return;\n    }\n    if (Array.isArray(value)) {\n      value = value\n        .filter(function(v) {\n          return v !== null && v !== undefined;\n        })\n        .join(',');\n    }\n    result = appendQueryParam(result, key, value);\n  });\n  return result;\n}\n\n/**\n * Prepend an origin to a URL. If the URL already has an\n * origin, do nothing.\n *\n * @param {string} url\n * @param {string} origin\n * @returns {string} - Modified URL.\n */\nfunction prependOrigin(url, origin) {\n  if (!origin) {\n    return url;\n  }\n\n  if (url.slice(0, 4) === 'http') {\n    return url;\n  }\n\n  var delimiter = url[0] === '/' ? '' : '/';\n  return '' + origin.replace(/\\/$/, '') + delimiter + url;\n}\n\n/**\n * Interpolate values into a route with express-style,\n * colon-prefixed route parameters.\n *\n * @param {string} route\n * @param {Object} [params] - Values should be primitives\n *   or arrays of primitives. Provide an array if the value\n *   is a list and commas between values need to be\n *   preserved, unencoded.\n * @returns {string} - Modified URL.\n */\nfunction interpolateRouteParams(route, params) {\n  if (!params) {\n    return route;\n  }\n  return route.replace(/\\/:([a-zA-Z0-9]+)/g, function(_, paramId) {\n    var value = params[paramId];\n    if (value === undefined) {\n      throw new Error('Unspecified route parameter ' + paramId);\n    }\n    var preppedValue = encodeValue(value);\n    return '/' + preppedValue;\n  });\n}\n\nmodule.exports = {\n  appendQueryObject: appendQueryObject,\n  appendQueryParam: appendQueryParam,\n  prependOrigin: prependOrigin,\n  interpolateRouteParams: interpolateRouteParams\n};\n", "'use strict';\n\nvar parseToken = require('@mapbox/parse-mapbox-token');\nvar xtend = require('xtend');\nvar EventEmitter = require('eventemitter3');\nvar urlUtils = require('../helpers/url-utils');\nvar constants = require('../constants');\n\nvar requestId = 1;\n\n/**\n * A Mapbox API request.\n *\n * Note that creating a `MapiRequest` does *not* send the request automatically.\n * Use the request's `send` method to send it off and get a `Promise`.\n *\n * The `emitter` property is an `EventEmitter` that emits the following events:\n *\n * - `'response'` - Listeners will be called with a `MapiResponse`.\n * - `'error'` - Listeners will be called with a `MapiError`.\n * - `'downloadProgress'` - Listeners will be called with `ProgressEvents`.\n * - `'uploadProgress'` - Listeners will be called with `ProgressEvents`.\n *   Upload events are only available when the request includes a file.\n *\n * @class MapiRequest\n * @property {EventEmitter} emitter - An event emitter. See above.\n * @property {MapiClient} client - This request's `MapiClient`.\n * @property {MapiResponse|null} response - If this request has been sent and received\n *   a response, the response is available on this property.\n * @property {MapiError|Error|null} error - If this request has been sent and\n *   received an error in response, the error is available on this property.\n * @property {boolean} aborted - If the request has been aborted\n *   (via [`abort`](#abort)), this property will be `true`.\n * @property {boolean} sent - If the request has been sent, this property will\n *   be `true`. You cannot send the same request twice, so if you need to create\n *   a new request that is the equivalent of an existing one, use\n *   [`clone`](#clone).\n * @property {string} path - The request's path, including colon-prefixed route\n *   parameters.\n * @property {string} origin - The request's origin.\n * @property {string} method - The request's HTTP method.\n * @property {Object} query - A query object, which will be transformed into\n *   a URL query string.\n * @property {Object} params - A route parameters object, whose values will\n *   be interpolated the path.\n * @property {Object} headers - The request's headers.\n * @property {Object|string|null} body - Data to send with the request.\n *   If the request has a body, it will also be sent with the header\n *   `'Content-Type: application/json'`.\n * @property {Blob|ArrayBuffer|string|ReadStream} file - A file to\n *   send with the request. The browser client accepts Blobs and ArrayBuffers;\n *   the Node client accepts strings (filepaths) and ReadStreams.\n * @property {string} encoding - The encoding of the response.\n * @property {string} sendFileAs - The method to send the `file`. Options are\n *   `data` (x-www-form-urlencoded) or `form` (multipart/form-data).\n */\n\n/**\n * @ignore\n * @param {MapiClient} client\n * @param {Object} options\n * @param {string} options.method\n * @param {string} options.path\n * @param {Object} [options.query={}]\n * @param {Object} [options.params={}]\n * @param {string} [options.origin]\n * @param {Object} [options.headers]\n * @param {Object} [options.body=null]\n * @param {Blob|ArrayBuffer|string|ReadStream} [options.file=null]\n * @param {string} [options.encoding=utf8]\n */\nfunction MapiRequest(client, options) {\n  if (!client) {\n    throw new Error('MapiRequest requires a client');\n  }\n  if (!options || !options.path || !options.method) {\n    throw new Error(\n      'MapiRequest requires an options object with path and method properties'\n    );\n  }\n\n  var defaultHeaders = {};\n  if (options.body) {\n    defaultHeaders['content-type'] = 'application/json';\n  }\n\n  var headersWithDefaults = xtend(defaultHeaders, options.headers);\n\n  // Disallows duplicate header names of mixed case,\n  // e.g. Content-Type and content-type.\n  var headers = Object.keys(headersWithDefaults).reduce(function(memo, name) {\n    memo[name.toLowerCase()] = headersWithDefaults[name];\n    return memo;\n  }, {});\n\n  this.id = requestId++;\n  this._options = options;\n\n  this.emitter = new EventEmitter();\n  this.client = client;\n  this.response = null;\n  this.error = null;\n  this.sent = false;\n  this.aborted = false;\n  this.path = options.path;\n  this.method = options.method;\n  this.origin = options.origin || client.origin;\n  this.query = options.query || {};\n  this.params = options.params || {};\n  this.body = options.body || null;\n  this.file = options.file || null;\n  this.encoding = options.encoding || 'utf8';\n  this.sendFileAs = options.sendFileAs || null;\n  this.headers = headers;\n}\n\n/**\n * Get the URL of the request.\n *\n * @param {string} [accessToken] - By default, the access token of the request's\n *   client is used.\n * @return {string}\n */\nMapiRequest.prototype.url = function url(accessToken) {\n  var url = urlUtils.prependOrigin(this.path, this.origin);\n  url = urlUtils.appendQueryObject(url, this.query);\n  var routeParams = this.params;\n  var actualAccessToken =\n    accessToken == null ? this.client.accessToken : accessToken;\n  if (actualAccessToken) {\n    url = urlUtils.appendQueryParam(url, 'access_token', actualAccessToken);\n    var accessTokenOwnerId = parseToken(actualAccessToken).user;\n    routeParams = xtend({ ownerId: accessTokenOwnerId }, routeParams);\n  }\n  url = urlUtils.interpolateRouteParams(url, routeParams);\n  return url;\n};\n\n/**\n * Send the request. Returns a Promise that resolves with a `MapiResponse`.\n * You probably want to use `response.body`.\n *\n * `send` only retrieves the first page of paginated results. You can get\n * the next page by using the `MapiResponse`'s [`nextPage`](#nextpage)\n * function, or iterate through all pages using [`eachPage`](#eachpage)\n * instead of `send`.\n *\n * @returns {Promise<MapiResponse>}\n */\nMapiRequest.prototype.send = function send() {\n  var self = this;\n\n  if (self.sent) {\n    throw new Error(\n      'This request has already been sent. Check the response and error properties. Create a new request with clone().'\n    );\n  }\n  self.sent = true;\n\n  return self.client.sendRequest(self).then(\n    function(response) {\n      self.response = response;\n      self.emitter.emit(constants.EVENT_RESPONSE, response);\n      return response;\n    },\n    function(error) {\n      self.error = error;\n      self.emitter.emit(constants.EVENT_ERROR, error);\n      throw error;\n    }\n  );\n};\n\n/**\n * Abort the request.\n *\n * Any pending `Promise` returned by [`send`](#send) will be rejected with\n * an error with `type: 'RequestAbortedError'`. If you've created a request\n * that might be aborted, you need to catch and handle such errors.\n *\n * This method will also abort any requests created while fetching subsequent\n * pages via [`eachPage`](#eachpage).\n *\n * If the request has not been sent or has already been aborted, nothing\n * will happen.\n */\nMapiRequest.prototype.abort = function abort() {\n  if (this._nextPageRequest) {\n    this._nextPageRequest.abort();\n    delete this._nextPageRequest;\n  }\n\n  if (this.response || this.error || this.aborted) return;\n\n  this.aborted = true;\n  this.client.abortRequest(this);\n};\n\n/**\n * Invoke a callback for each page of a paginated API response.\n *\n * The callback should have the following signature:\n *\n * ```js\n * (\n *   error: MapiError,\n *   response: MapiResponse,\n *   next: () => void\n * ) => void\n * ```\n *\n * **The next page will not be fetched until you've invoked the\n * `next` callback**, indicating that you're ready for it.\n *\n * @param {Function} callback\n */\nMapiRequest.prototype.eachPage = function eachPage(callback) {\n  var self = this;\n\n  function handleResponse(response) {\n    function getNextPage() {\n      delete self._nextPageRequest;\n      var nextPageRequest = response.nextPage();\n      if (nextPageRequest) {\n        self._nextPageRequest = nextPageRequest;\n        getPage(nextPageRequest);\n      }\n    }\n    callback(null, response, getNextPage);\n  }\n\n  function handleError(error) {\n    callback(error, null, function() {});\n  }\n\n  function getPage(request) {\n    request.send().then(handleResponse, handleError);\n  }\n  getPage(this);\n};\n\n/**\n * Clone this request.\n *\n * Each request can only be sent *once*. So if you'd like to send the\n * same request again, clone it and send away.\n *\n * @returns {MapiRequest} - A new `MapiRequest` configured just like this one.\n */\nMapiRequest.prototype.clone = function clone() {\n  return this._extend();\n};\n\n/**\n * @ignore\n */\nMapiRequest.prototype._extend = function _extend(options) {\n  var extendedOptions = xtend(this._options, options);\n  return new MapiRequest(this.client, extendedOptions);\n};\n\nmodule.exports = MapiRequest;\n", "'use strict';\n\nvar parseToken = require('@mapbox/parse-mapbox-token');\nvar MapiRequest = require('./mapi-request');\nvar constants = require('../constants');\n\n/**\n * A low-level Mapbox API client. Use it to create service clients\n * that share the same configuration.\n *\n * Services and `MapiRequest`s use the underlying `MapiClient` to\n * determine how to create, send, and abort requests in a way\n * that is appropriate to the configuration and environment\n * (Node or the browser).\n *\n * @class MapiClient\n * @property {string} accessToken - The Mapbox access token assigned\n *   to this client.\n * @property {string} [origin] - The origin\n *   to use for API requests. Defaults to https://api.mapbox.com.\n */\n\nfunction MapiClient(options) {\n  if (!options || !options.accessToken) {\n    throw new Error('Cannot create a client without an access token');\n  }\n  // Try parsing the access token to determine right away if it's valid.\n  parseToken(options.accessToken);\n\n  this.accessToken = options.accessToken;\n  this.origin = options.origin || constants.API_ORIGIN;\n}\n\nMapiClient.prototype.createRequest = function createRequest(requestOptions) {\n  return new MapiRequest(this, requestOptions);\n};\n\nmodule.exports = MapiClient;\n", "'use strict';\n\nvar browser = require('./browser-layer');\nvar MapiClient = require('../classes/mapi-client');\n\nfunction BrowserClient(options) {\n  MapiClient.call(this, options);\n}\nBrowserClient.prototype = Object.create(MapiClient.prototype);\nBrowserClient.prototype.constructor = BrowserClient;\n\nBrowserClient.prototype.sendRequest = browser.browserSend;\nBrowserClient.prototype.abortRequest = browser.browserAbort;\n\n/**\n * Create a client for the browser.\n *\n * @param {Object} options\n * @param {string} options.accessToken\n * @param {string} [options.origin]\n * @returns {MapiClient}\n */\nfunction createBrowserClient(options) {\n  return new BrowserClient(options);\n}\n\nmodule.exports = createBrowserClient;\n", "'use strict';\n\nvar client = require('./lib/client');\n\nmodule.exports = client;\n", "'use strict';\nvar toString = Object.prototype.toString;\n\nmodule.exports = function (x) {\n\tvar prototype;\n\treturn toString.call(x) === '[object Object]' && (prototype = Object.getPrototypeOf(x), prototype === null || prototype === Object.getPrototypeOf({}));\n};\n", "'use strict';\n/**\n * Validators are functions which assert certain type.\n * They can return a string which can then be used\n * to display a helpful error message.\n * They can also return a function for a custom error message.\n */\nvar isPlainObject = require('is-plain-obj');\nvar xtend = require('xtend');\n\nvar DEFAULT_ERROR_PATH = 'value';\nvar NEWLINE_INDENT = '\\n  ';\n\nvar v = {};\n\n/**\n * Runners\n *\n * Take root validators and run assertion\n */\nv.assert = function(rootValidator, options) {\n  options = options || {};\n  return function(value) {\n    var message = validate(rootValidator, value);\n    // all good\n    if (!message) {\n      return;\n    }\n\n    var errorMessage = processMessage(message, options);\n\n    if (options.apiName) {\n      errorMessage = options.apiName + ': ' + errorMessage;\n    }\n\n    throw new Error(errorMessage);\n  };\n};\n\n/**\n * Higher Order Validators\n *\n * validators which take other validators as input\n * and output a new validator\n */\nv.shape = function shape(validatorObj) {\n  var validators = objectEntries(validatorObj);\n  return function shapeValidator(value) {\n    var validationResult = validate(v.plainObject, value);\n\n    if (validationResult) {\n      return validationResult;\n    }\n\n    var key, validator;\n    var errorMessages = [];\n\n    for (var i = 0; i < validators.length; i++) {\n      key = validators[i].key;\n      validator = validators[i].value;\n      validationResult = validate(validator, value[key]);\n\n      if (validationResult) {\n        // return [key].concat(validationResult);\n        errorMessages.push([key].concat(validationResult));\n      }\n    }\n\n    if (errorMessages.length < 2) {\n      return errorMessages[0];\n    }\n\n    // enumerate all the error messages\n    return function(options) {\n      errorMessages = errorMessages.map(function(message) {\n        var key = message[0];\n        var renderedMessage = processMessage(message, options)\n          .split('\\n')\n          .join(NEWLINE_INDENT); // indents any inner nesting\n        return '- ' + key + ': ' + renderedMessage;\n      });\n\n      var objectId = options.path.join('.');\n      var ofPhrase = objectId === DEFAULT_ERROR_PATH ? '' : ' of ' + objectId;\n\n      return (\n        'The following properties' +\n        ofPhrase +\n        ' have invalid values:' +\n        NEWLINE_INDENT +\n        errorMessages.join(NEWLINE_INDENT)\n      );\n    };\n  };\n};\n\nv.strictShape = function strictShape(validatorObj) {\n  var shapeValidator = v.shape(validatorObj);\n  return function strictShapeValidator(value) {\n    var shapeResult = shapeValidator(value);\n    if (shapeResult) {\n      return shapeResult;\n    }\n\n    var invalidKeys = Object.keys(value).reduce(function(memo, valueKey) {\n      if (validatorObj[valueKey] === undefined) {\n        memo.push(valueKey);\n      }\n      return memo;\n    }, []);\n\n    if (invalidKeys.length !== 0) {\n      return function() {\n        return 'The following keys are invalid: ' + invalidKeys.join(', ');\n      };\n    }\n  };\n};\n\nv.arrayOf = function arrayOf(validator) {\n  return createArrayValidator(validator);\n};\n\nv.tuple = function tuple() {\n  var validators = Array.isArray(arguments[0])\n    ? arguments[0]\n    : Array.prototype.slice.call(arguments);\n  return createArrayValidator(validators);\n};\n\n// Currently array validation fails when the first invalid item is found.\nfunction createArrayValidator(validators) {\n  var validatingTuple = Array.isArray(validators);\n  var getValidator = function(index) {\n    if (validatingTuple) {\n      return validators[index];\n    }\n    return validators;\n  };\n\n  return function arrayValidator(value) {\n    var validationResult = validate(v.plainArray, value);\n    if (validationResult) {\n      return validationResult;\n    }\n\n    if (validatingTuple && value.length !== validators.length) {\n      return 'an array with ' + validators.length + ' items';\n    }\n\n    for (var i = 0; i < value.length; i++) {\n      validationResult = validate(getValidator(i), value[i]);\n      if (validationResult) {\n        return [i].concat(validationResult);\n      }\n    }\n  };\n}\n\nv.required = function required(validator) {\n  function requiredValidator(value) {\n    if (value == null) {\n      return function(options) {\n        return formatErrorMessage(\n          options,\n          isArrayCulprit(options.path)\n            ? 'cannot be undefined/null.'\n            : 'is required.'\n        );\n      };\n    }\n    return validator.apply(this, arguments);\n  }\n  requiredValidator.__required = true;\n\n  return requiredValidator;\n};\n\nv.oneOfType = function oneOfType() {\n  var validators = Array.isArray(arguments[0])\n    ? arguments[0]\n    : Array.prototype.slice.call(arguments);\n  return function oneOfTypeValidator(value) {\n    var messages = validators\n      .map(function(validator) {\n        return validate(validator, value);\n      })\n      .filter(Boolean);\n\n    // If we don't have as many messages as no. of validators,\n    // then at least one validator was ok with the value.\n    if (messages.length !== validators.length) {\n      return;\n    }\n\n    // check primitive type\n    if (\n      messages.every(function(message) {\n        return message.length === 1 && typeof message[0] === 'string';\n      })\n    ) {\n      return orList(\n        messages.map(function(m) {\n          return m[0];\n        })\n      );\n    }\n\n    // Complex oneOfTypes like\n    // `v.oneOftypes(v.shape({name: v.string})`, `v.shape({name: v.number}))`\n    // are complex \u00AF\\_(\u30C4)_/\u00AF. For the current scope only returning the longest message.\n    return messages.reduce(function(max, arr) {\n      return arr.length > max.length ? arr : max;\n    });\n  };\n};\n\n/**\n * Meta Validators\n * which take options as argument (not validators)\n * and return a new primitive validator\n */\nv.equal = function equal(compareWith) {\n  return function equalValidator(value) {\n    if (value !== compareWith) {\n      return JSON.stringify(compareWith);\n    }\n  };\n};\n\nv.oneOf = function oneOf() {\n  var options = Array.isArray(arguments[0])\n    ? arguments[0]\n    : Array.prototype.slice.call(arguments);\n  var validators = options.map(function(value) {\n    return v.equal(value);\n  });\n\n  return v.oneOfType.apply(this, validators);\n};\n\nv.range = function range(compareWith) {\n  var min = compareWith[0];\n  var max = compareWith[1];\n  return function rangeValidator(value) {\n    var validationResult = validate(v.number, value);\n\n    if (validationResult || value < min || value > max) {\n      return 'number between ' + min + ' & ' + max + ' (inclusive)';\n    }\n  };\n};\n\n/**\n * Primitive validators\n *\n * simple validators which return a string or undefined\n */\nv.any = function any() {\n  return;\n};\n\nv.boolean = function boolean(value) {\n  if (typeof value !== 'boolean') {\n    return 'boolean';\n  }\n};\n\nv.number = function number(value) {\n  if (typeof value !== 'number') {\n    return 'number';\n  }\n};\n\nv.plainArray = function plainArray(value) {\n  if (!Array.isArray(value)) {\n    return 'array';\n  }\n};\n\nv.plainObject = function plainObject(value) {\n  if (!isPlainObject(value)) {\n    return 'object';\n  }\n};\n\nv.string = function string(value) {\n  if (typeof value !== 'string') {\n    return 'string';\n  }\n};\n\nv.func = function func(value) {\n  if (typeof value !== 'function') {\n    return 'function';\n  }\n};\n\nfunction validate(validator, value) {\n  // assertions are optional by default unless wrapped in v.require\n  if (value == null && !validator.hasOwnProperty('__required')) {\n    return;\n  }\n\n  var result = validator(value);\n\n  if (result) {\n    return Array.isArray(result) ? result : [result];\n  }\n}\n\nfunction processMessage(message, options) {\n  // message array follows the convention\n  // [...path, result]\n  // path is an array of object keys / array indices\n  // result is output of the validator\n  var len = message.length;\n\n  var result = message[len - 1];\n  var path = message.slice(0, len - 1);\n\n  if (path.length === 0) {\n    path = [DEFAULT_ERROR_PATH];\n  }\n  options = xtend(options, { path: path });\n\n  return typeof result === 'function'\n    ? result(options) // allows customization of result\n    : formatErrorMessage(options, prettifyResult(result));\n}\n\nfunction orList(list) {\n  if (list.length < 2) {\n    return list[0];\n  }\n  if (list.length === 2) {\n    return list.join(' or ');\n  }\n  return list.slice(0, -1).join(', ') + ', or ' + list.slice(-1);\n}\n\nfunction prettifyResult(result) {\n  return 'must be ' + addArticle(result) + '.';\n}\n\nfunction addArticle(nounPhrase) {\n  if (/^an? /.test(nounPhrase)) {\n    return nounPhrase;\n  }\n  if (/^[aeiou]/i.test(nounPhrase)) {\n    return 'an ' + nounPhrase;\n  }\n  if (/^[a-z]/i.test(nounPhrase)) {\n    return 'a ' + nounPhrase;\n  }\n  return nounPhrase;\n}\n\nfunction formatErrorMessage(options, prettyResult) {\n  var arrayCulprit = isArrayCulprit(options.path);\n  var output = options.path.join('.') + ' ' + prettyResult;\n  var prepend = arrayCulprit ? 'Item at position ' : '';\n\n  return prepend + output;\n}\n\nfunction isArrayCulprit(path) {\n  return typeof path[path.length - 1] == 'number' || typeof path[0] == 'number';\n}\n\nfunction objectEntries(obj) {\n  return Object.keys(obj || {}).map(function(key) {\n    return { key: key, value: obj[key] };\n  });\n}\n\nv.validate = validate;\nv.processMessage = processMessage;\n\nmodule.exports = v;\n", "'use strict';\n\nvar xtend = require('xtend');\nvar v = require('@mapbox/fusspot');\n\nfunction file(value) {\n  // If we're in a browser so Blob is available, the file must be that.\n  // In Node, however, it could be a filepath or a pipeable (Readable) stream.\n  if (typeof window !== 'undefined') {\n    if (value instanceof global.Blob || value instanceof global.ArrayBuffer) {\n      return;\n    }\n    return 'Blob or ArrayBuffer';\n  }\n  if (typeof value === 'string' || value.pipe !== undefined) {\n    return;\n  }\n  return 'Filename or Readable stream';\n}\n\nfunction assertShape(validatorObj, apiName) {\n  return v.assert(v.strictShape(validatorObj), apiName);\n}\n\nfunction date(value) {\n  var msg = 'date';\n  if (typeof value === 'boolean') {\n    return msg;\n  }\n  try {\n    var date = new Date(value);\n    if (date.getTime && isNaN(date.getTime())) {\n      return msg;\n    }\n  } catch (e) {\n    return msg;\n  }\n}\n\nfunction coordinates(value) {\n  return v.tuple(v.number, v.number)(value);\n}\n\nmodule.exports = xtend(v, {\n  file: file,\n  date: date,\n  coordinates: coordinates,\n  assertShape: assertShape\n});\n", "'use strict';\n\n/**\n * Create a new object by picking properties off an existing object.\n * The second param can be overloaded as a callback for\n * more fine grained picking of properties.\n * @param {Object} source\n * @param {Array<string>|function(string, Object):boolean} keys\n * @returns {Object}\n */\nfunction pick(source, keys) {\n  var filter = function(key, val) {\n    return keys.indexOf(key) !== -1 && val !== undefined;\n  };\n\n  if (typeof keys === 'function') {\n    filter = keys;\n  }\n\n  return Object.keys(source)\n    .filter(function(key) {\n      return filter(key, source[key]);\n    })\n    .reduce(function(result, key) {\n      result[key] = source[key];\n      return result;\n    }, {});\n}\n\nmodule.exports = pick;\n", "'use strict';\n\nfunction objectMap(obj, cb) {\n  return Object.keys(obj).reduce(function(result, key) {\n    result[key] = cb(key, obj[key]);\n    return result;\n  }, {});\n}\n\nmodule.exports = objectMap;\n", "'use strict';\n\nvar objectMap = require('./object-map');\n\n/**\n * Stringify all the boolean values in an object, so true becomes \"true\".\n *\n * @param {Object} obj\n * @returns {Object}\n */\nfunction stringifyBoolean(obj) {\n  return objectMap(obj, function(_, value) {\n    return typeof value === 'boolean' ? JSON.stringify(value) : value;\n  });\n}\n\nmodule.exports = stringifyBoolean;\n", "'use strict';\n\nvar MapiClient = require('../../lib/classes/mapi-client');\n// This will create the environment-appropriate client.\nvar createClient = require('../../lib/client');\n\nfunction createServiceFactory(ServicePrototype) {\n  return function(clientOrConfig) {\n    var client;\n    if (MapiClient.prototype.isPrototypeOf(clientOrConfig)) {\n      client = clientOrConfig;\n    } else {\n      client = createClient(clientOrConfig);\n    }\n    var service = Object.create(ServicePrototype);\n    service.client = client;\n    return service;\n  };\n}\n\nmodule.exports = createServiceFactory;\n", "'use strict';\n\nvar xtend = require('xtend');\nvar v = require('./service-helpers/validator');\nvar pick = require('./service-helpers/pick');\nvar stringifyBooleans = require('./service-helpers/stringify-booleans');\nvar createServiceFactory = require('./service-helpers/create-service-factory');\n\n/**\n * Geocoding API service.\n *\n * Learn more about this service and its responses in\n * [the HTTP service documentation](https://docs.mapbox.com/api/search/#geocoding).\n */\nvar Geocoding = {};\n\nvar featureTypes = [\n  'country',\n  'region',\n  'postcode',\n  'district',\n  'place',\n  'locality',\n  'neighborhood',\n  'address',\n  'poi',\n  'poi.landmark'\n];\n\n/**\n * Search for a place.\n *\n * See the [public documentation](https://docs.mapbox.com/api/search/#forward-geocoding).\n *\n * @param {Object} config\n * @param {string} config.query - A place name.\n * @param {'mapbox.places'|'mapbox.places-permanent'} [config.mode=\"mapbox.places\"] - Either `mapbox.places` for ephemeral geocoding, or `mapbox.places-permanent` for storing results and batch geocoding.\n * @param {Array<string>} [config.countries] - Limits results to the specified countries.\n *   Each item in the array should be an [ISO 3166 alpha 2 country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).\n * @param {Coordinates|'ip'} [config.proximity] - Bias local results based on a provided coordinate location or a user's IP address.\n * @param {Array<'country'|'region'|'postcode'|'district'|'place'|'locality'|'neighborhood'|'address'|'poi'|'poi.landmark'>} [config.types] - Filter results by feature types.\n * @param {boolean} [config.autocomplete=true] - Return autocomplete results or not.\n * @param {BoundingBox} [config.bbox] - Limit results to a bounding box.\n * @param {number} [config.limit=5] - Limit the number of results returned.\n * @param {Array<string>} [config.language] - Specify the language to use for response text and, for forward geocoding, query result weighting.\n *  Options are [IETF language tags](https://en.wikipedia.org/wiki/IETF_language_tag) comprised of a mandatory\n *  [ISO 639-1 language code](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) and optionally one or more IETF subtags for country or script.\n * @param {boolean} [config.routing=false] - Specify whether to request additional metadata about the recommended navigation destination. Only applicable for address features.\n * @param {boolean} [config.fuzzyMatch=true] - Specify whether the Geocoding API should attempt approximate, as well as exact, matching.\n * @param {String} [config.worldview=\"us\"] - Filter results to geographic features whose characteristics are defined differently by audiences belonging to various regional, cultural, or political groups.\n * @return {MapiRequest}\n *\n * @example\n * geocodingClient.forwardGeocode({\n *   query: 'Paris, France',\n *   limit: 2\n * })\n *   .send()\n *   .then(response => {\n *     const match = response.body;\n *   });\n *\n * @example\n * // geocoding with proximity\n * geocodingClient.forwardGeocode({\n *   query: 'Paris, France',\n *   proximity: [-95.4431142, 33.6875431]\n * })\n *   .send()\n *   .then(response => {\n *     const match = response.body;\n *   });\n *\n * // geocoding with countries\n * geocodingClient.forwardGeocode({\n *   query: 'Paris, France',\n *   countries: ['fr']\n * })\n *   .send()\n *   .then(response => {\n *     const match = response.body;\n *   });\n *\n * // geocoding with bounding box\n * geocodingClient.forwardGeocode({\n *   query: 'Paris, France',\n *   bbox: [2.14, 48.72, 2.55, 48.96]\n * })\n *   .send()\n *   .then(response => {\n *     const match = response.body;\n *   });\n */\nGeocoding.forwardGeocode = function(config) {\n  v.assertShape({\n    query: v.required(v.string),\n    mode: v.oneOf('mapbox.places', 'mapbox.places-permanent'),\n    countries: v.arrayOf(v.string),\n    proximity: v.oneOf(v.coordinates, 'ip'),\n    types: v.arrayOf(v.oneOf(featureTypes)),\n    autocomplete: v.boolean,\n    bbox: v.arrayOf(v.number),\n    limit: v.number,\n    language: v.arrayOf(v.string),\n    routing: v.boolean,\n    fuzzyMatch: v.boolean,\n    worldview: v.string\n  })(config);\n\n  config.mode = config.mode || 'mapbox.places';\n\n  var query = stringifyBooleans(\n    xtend(\n      { country: config.countries },\n      pick(config, [\n        'proximity',\n        'types',\n        'autocomplete',\n        'bbox',\n        'limit',\n        'language',\n        'routing',\n        'fuzzyMatch',\n        'worldview'\n      ])\n    )\n  );\n\n  return this.client.createRequest({\n    method: 'GET',\n    path: '/geocoding/v5/:mode/:query.json',\n    params: pick(config, ['mode', 'query']),\n    query: query\n  });\n};\n\n/**\n * Search for places near coordinates.\n *\n * See the [public documentation](https://docs.mapbox.com/api/search/#reverse-geocoding).\n *\n * @param {Object} config\n * @param {Coordinates} config.query - Coordinates at which features will be searched.\n * @param {'mapbox.places'|'mapbox.places-permanent'} [config.mode=\"mapbox.places\"] - Either `mapbox.places` for ephemeral geocoding, or `mapbox.places-permanent` for storing results and batch geocoding.\n * @param {Array<string>} [config.countries] - Limits results to the specified countries.\n *   Each item in the array should be an [ISO 3166 alpha 2 country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).\n * @param {Array<'country'|'region'|'postcode'|'district'|'place'|'locality'|'neighborhood'|'address'|'poi'|'poi.landmark'>} [config.types] - Filter results by feature types.\n * @param {BoundingBox} [config.bbox] - Limit results to a bounding box.\n * @param {number} [config.limit=1] - Limit the number of results returned. If using this option, you must provide a single item for `types`.\n * @param {Array<string>} [config.language] - Specify the language to use for response text and, for forward geocoding, query result weighting.\n *  Options are [IETF language tags](https://en.wikipedia.org/wiki/IETF_language_tag) comprised of a mandatory\n *  [ISO 639-1 language code](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) and optionally one or more IETF subtags for country or script.\n * @param {'distance'|'score'} [config.reverseMode='distance'] - Set the factors that are used to sort nearby results.\n * @param {boolean} [config.routing=false] - Specify whether to request additional metadata about the recommended navigation destination. Only applicable for address features.\n * @param {String} [config.worldview=\"us\"] - Filter results to geographic features whose characteristics are defined differently by audiences belonging to various regional, cultural, or political groups.\n * @return {MapiRequest}\n *\n * @example\n * geocodingClient.reverseGeocode({\n *   query: [-95.4431142, 33.6875431]\n * })\n *   .send()\n *   .then(response => {\n *     // GeoJSON document with geocoding matches\n *     const match = response.body;\n *   });\n */\nGeocoding.reverseGeocode = function(config) {\n  v.assertShape({\n    query: v.required(v.coordinates),\n    mode: v.oneOf('mapbox.places', 'mapbox.places-permanent'),\n    countries: v.arrayOf(v.string),\n    types: v.arrayOf(v.oneOf(featureTypes)),\n    bbox: v.arrayOf(v.number),\n    limit: v.number,\n    language: v.arrayOf(v.string),\n    reverseMode: v.oneOf('distance', 'score'),\n    routing: v.boolean,\n    worldview: v.string\n  })(config);\n\n  config.mode = config.mode || 'mapbox.places';\n\n  var query = stringifyBooleans(\n    xtend(\n      { country: config.countries },\n      pick(config, [\n        'country',\n        'types',\n        'bbox',\n        'limit',\n        'language',\n        'reverseMode',\n        'routing',\n        'worldview'\n      ])\n    )\n  );\n\n  return this.client.createRequest({\n    method: 'GET',\n    path: '/geocoding/v5/:mode/:query.json',\n    params: pick(config, ['mode', 'query']),\n    query: query\n  });\n};\n\nmodule.exports = createServiceFactory(Geocoding);\n", "let urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\nexport { urlAlphabet }\n", "import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n", "'use strict';\nvar nanoid = require('nanoid').nanoid;\n\n/**\n * Construct a new mapbox event client to send interaction events to the mapbox event service\n * @param {Object} options options with which to create the service\n * @param {String} options.accessToken the mapbox access token to make requests\n * @param {Number} [options.flushInterval=1000] the number of ms after which to flush the event queue\n * @param {Number} [options.maxQueueSize=100] the number of events to queue before flushing\n * @private\n */\nfunction MapboxEventManager(options) {\n  this.origin = options.origin || 'https://api.mapbox.com';\n  this.endpoint = 'events/v2';\n  this.access_token = options.accessToken;\n  this.version = '0.2.0'\n  this.sessionID = this.generateSessionID();\n  this.userAgent = this.getUserAgent();\n\n  this.options = options;\n  this.send = this.send.bind(this);\n\n\n  // parse global options to be sent with each request\n  this.countries = (options.countries) ? options.countries.split(\",\") : null;\n  this.types = (options.types) ? options.types.split(\",\") : null;\n  this.bbox = (options.bbox) ? options.bbox : null;\n  this.language = (options.language) ? options.language.split(\",\") : null;\n  this.limit = (options.limit) ? +options.limit : null;\n  this.locale = navigator.language || null;\n  this.enableEventLogging = this.shouldEnableLogging(options);\n  this.eventQueue = new Array();\n  this.flushInterval = options.flushInterval || 1000;\n  this.maxQueueSize = options.maxQueueSize || 100;\n  this.timer = (this.flushInterval) ? setTimeout(this.flush.bind(this), this.flushInterval) : null;\n  // keep some state to deduplicate requests if necessary\n  this.lastSentInput = \"\";\n  this.lastSentIndex = 0;\n}\n\nMapboxEventManager.prototype = {\n  /**\n     * Send a search.select event to the mapbox events service\n     * This event marks the array index of the item selected by the user out of the array of possible options\n     * @private\n     * @param {Object} selected the geojson feature selected by the user\n     * @param {Object} geocoder a mapbox-gl-geocoder instance\n     * @returns {Promise}\n     */\n  select: function(selected, geocoder){\n    var resultIndex = this.getSelectedIndex(selected, geocoder);\n    var payload = this.getEventPayload('search.select', geocoder);\n    payload.resultIndex = resultIndex;\n    payload.resultPlaceName  = selected.place_name;\n    payload.resultId = selected.id;\n    if ((resultIndex === this.lastSentIndex && payload.queryString === this.lastSentInput) || resultIndex == -1) {\n      // don't log duplicate events if the user re-selected the same feature on the same search\n      return;\n    }\n    this.lastSentIndex = resultIndex;\n    this.lastSentInput = payload.queryString;\n    if (!payload.queryString) return; // will be rejected\n    return this.push(payload)\n  },\n\n  /**\n     * Send a search-start event to the mapbox events service\n     * This turnstile event marks when a user starts a new search\n     * @private\n     * @param {Object} geocoder a mapbox-gl-geocoder instance\n     * @returns {Promise}\n     */\n  start: function(geocoder){\n    var payload = this.getEventPayload('search.start', geocoder);\n    if (!payload.queryString) return; // will be rejected\n    return this.push(payload);\n  },\n\n  /**\n   * Send a search-keyevent event to the mapbox events service\n   * This event records each keypress in sequence\n   * @private\n   * @param {Object} keyEvent the keydown event to log\n   * @param {Object} geocoder a mapbox-gl-geocoder instance\n   * \n   */\n  keyevent: function(keyEvent, geocoder){\n\n    //pass invalid event\n    if (!keyEvent.key) return;\n    // don't send events for keys that don't change the input\n    // TAB, ESC, LEFT, RIGHT, ENTER, UP, DOWN\n    if (keyEvent.metaKey || [9, 27, 37, 39, 13, 38, 40].indexOf(keyEvent.keyCode) !== -1) return;\n    var payload = this.getEventPayload('search.keystroke', geocoder);\n    payload.lastAction = keyEvent.key;\n    if (!payload.queryString) return; // will be rejected\n    return this.push(payload);\n  },\n\n  /**\n   * Send an event to the events service\n   *\n   * The event is skipped if the instance is not enabled to send logging events\n   *\n   * @private\n   * @param {Object} payload the http POST body of the event\n   * @param {Function} [callback] a callback function to invoke when the send has completed\n   * @returns {Promise}\n   */\n  send: function (payload, callback) {\n    if (!this.enableEventLogging) {\n      if (callback) return callback();\n      return;\n    }\n    var options = this.getRequestOptions(payload);\n    this.request(options, function(err){\n      if (err) return this.handleError(err, callback);\n      if (callback) {\n        return callback();\n      }\n    }.bind(this))\n  },\n  /**\n   * Get http request options\n   * @private\n   * @param {*} payload\n   */\n  getRequestOptions: function(payload){\n    if (!Array.isArray(payload)) payload = [payload];\n    var options = {\n      // events must be sent with POST\n      method: \"POST\",\n      host: this.origin,\n      path: this.endpoint +  \"?access_token=\" + this.access_token,\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body:JSON.stringify(payload) //events are arrays\n    }\n    return options\n  },\n\n  /**\n   * Get the event payload to send to the events service\n   * Most payload properties are shared across all events\n   * @private\n   * @param {String} event the name of the event to send to the events service. Valid options are 'search.start', 'search.select', 'search.feedback'.\n   * @param {Object} geocoder a mapbox-gl-geocoder instance\n   * @returns {Object} an event payload\n   */\n  getEventPayload: function (event, geocoder) {\n    // Handle proximity, whether null, lat/lng coordinate object, or 'ip'\n    var proximity;\n    if (!geocoder.options.proximity) {\n      proximity = null;\n    } else if (typeof geocoder.options.proximity === 'object') {\n      proximity = [geocoder.options.proximity.longitude, geocoder.options.proximity.latitude];\n    } else if (geocoder.options.proximity === 'ip') {\n      proximity = [999,999];  // Alias for 'ip' in event logs\n    } else {\n      proximity = geocoder.options.proximity;\n    }\n\n    var zoom = (geocoder._map) ? geocoder._map.getZoom() : undefined;\n    var payload = {\n      event: event,\n      created: +new Date(),\n      sessionIdentifier: this.sessionID,\n      country: this.countries,\n      userAgent: this.userAgent,\n      language: this.language,\n      bbox: this.bbox,\n      types: this.types,\n      endpoint: 'mapbox.places',\n      autocomplete: geocoder.options.autocomplete,\n      fuzzyMatch: geocoder.options.fuzzyMatch,\n      proximity: proximity,\n      limit: geocoder.options.limit,\n      routing: geocoder.options.routing,\n      worldview: geocoder.options.worldview,\n      mapZoom: zoom,\n      keyboardLocale: this.locale\n    }\n\n    // get the text in the search bar\n    if (event === \"search.select\"){\n      payload.queryString = geocoder.inputString;\n    }else if (event != \"search.select\" && geocoder._inputEl){\n      payload.queryString = geocoder._inputEl.value;\n    }else{\n      payload.queryString = geocoder.inputString;\n    }\n    return payload;\n  },\n\n  /**\n   * Wraps the request function for easier testing\n   * Make an http request and invoke a callback\n   * @private\n   * @param {Object} opts options describing the http request to be made\n   * @param {Function} callback the callback to invoke when the http request is completed\n   */\n  request: function (opts, callback) {\n    var xhttp = new XMLHttpRequest();\n    xhttp.onreadystatechange = function() {\n      if (this.readyState == 4 ) {\n        if (this.status == 204){\n          //success\n          return callback(null);\n        }else {\n          return callback(this.statusText);\n        }\n      }\n    };\n\n    xhttp.open(opts.method, opts.host + '/' + opts.path, true);\n    for (var header in opts.headers){\n      var headerValue = opts.headers[header];\n      xhttp.setRequestHeader(header, headerValue)\n    }\n    xhttp.send(opts.body);\n  },\n\n  /**\n   * Handle an error that occurred while making a request\n   * @param {Object} err an error instance to log\n   * @private\n   */\n  handleError: function (err, callback) {\n    if (callback) return callback(err);\n  },\n\n  /**\n   * Generate a session ID to be returned with all of the searches made by this geocoder instance\n   * ID is random and cannot be tracked across sessions\n   * @private\n   */\n  generateSessionID: function () {\n    return nanoid();\n  },\n\n  /**\n   * Get a user agent string to send with the request to the events service\n   * @private\n   */\n  getUserAgent: function () {\n    return 'mapbox-gl-geocoder.' + this.version + \".\" + navigator.userAgent;\n  },\n\n  /**\n     * Get the 0-based numeric index of the item that the user selected out of the list of options\n     * @private\n     * @param {Object} selected the geojson feature selected by the user\n     * @param {Object} geocoder a Mapbox-GL-Geocoder instance\n     * @returns {Number} the index of the selected result\n     */\n  getSelectedIndex: function(selected, geocoder){\n    if (!geocoder._typeahead) return;\n    var results = geocoder._typeahead.data;\n    var selectedID = selected.id;\n    var resultIDs = results.map(function (feature) {\n      return feature.id;\n    });\n    var selectedIdx = resultIDs.indexOf(selectedID);\n    return selectedIdx;\n  },\n\n  /**\n     * Check whether events should be logged\n     * Clients using a localGeocoder or an origin other than mapbox should not have events logged\n     * @private\n     */\n  shouldEnableLogging: function(options){\n    if (options.enableEventLogging === false) return false;\n    if (options.origin && options.origin !== 'https://api.mapbox.com') return false;\n    // hard to make sense of events when a local instance is suplementing results from origin\n    if (options.localGeocoder) return false;\n    // hard to make sense of events when a custom filter is in use\n    if (options.filter) return false;\n    return true;\n  },\n\n  /**\n   * Flush out the event queue by sending events to the events service\n   * @private\n   */\n  flush: function(){\n    if (this.eventQueue.length > 0){\n      this.send(this.eventQueue);\n      this.eventQueue = new Array();\n    }\n    // //reset the timer\n    if (this.timer)  clearTimeout(this.timer);\n    if (this.flushInterval) this.timer = setTimeout(this.flush.bind(this), this.flushInterval)\n  },\n\n  /**\n   * Push event into the pending queue\n   * @param {Object} evt the event to send to the events service\n   * @param {Boolean} forceFlush indicates that the event queue should be flushed after adding this event regardless of size of the queue\n   * @private\n   */\n  push: function(evt, forceFlush){\n    this.eventQueue.push(evt);\n    if (this.eventQueue.length >= this.maxQueueSize || forceFlush){\n      this.flush();\n    }\n  },\n\n  /**\n   * Flush any remaining events from the queue before it is removed\n   * @private\n   */\n  remove: function(){\n    this.flush();\n  }\n}\n\n\n\nmodule.exports = MapboxEventManager;\n", "'use strict';\n\n/**\n * Localized values for the placeholder string\n * \n * @private\n */\nvar placeholder = {\n  // list drawn from https://docs.mapbox.com/api/search/#language-coverage\n  'de': 'Suche', // german\n  'it': 'Ricerca', //italian\n  'en': 'Search', // english\n  'nl': 'Zoeken', //dutch\n  'fr': 'Chercher',  //french\n  'ca': 'Cerca', //catalan\n  'he': '\u05DC\u05D7\u05E4\u05E9', //hebrew\n  'ja': '\u30B5\u30FC\u30C1',  //japanese\n  'lv': 'Mekl\u0113t', //latvian\n  'pt': 'Procurar', //portuguese \n  'sr': '\u041F\u0440\u0435\u0442\u0440\u0430\u0433\u0430', //serbian\n  'zh': '\u641C\u7D22', //chinese-simplified\n  'cs': 'Vyhled\u00E1v\u00E1n\u00ED', //czech\n  'hu': 'Keres\u00E9s', //hungarian\n  'ka': '\u10EB\u10D8\u10D4\u10D1\u10D0', // georgian\n  'nb': 'S\u00F8ke', //norwegian\n  'sk': 'Vyh\u013Ead\u00E1vanie', //slovak\n  'th': '\u0E04\u0E49\u0E19\u0E2B\u0E32', //thai\n  'fi': 'Hae',//finnish\n  'is': 'Leita',//icelandic\n  'ko': '\uC218\uC0C9',//korean\n  'pl':  'Szukaj', //polish\n  'sl': 'Iskanje', //slovenian\n  'fa': '\u062C\u0633\u062A\u062C\u0648',  //persian(aka farsi)\n  'ru': '\u041F\u043E\u0438\u0441\u043A'//russian\n}\n\nmodule.exports = {placeholder: placeholder};\n", "!function(root, name, make) {\r\n  if (typeof module != 'undefined' && module.exports) module.exports = make()\r\n  else root[name] = make()\r\n}(this, 'subtag', function() {\r\n\r\n  var empty = ''\r\n  var pattern = /^([a-zA-Z]{2,3})(?:[_-]+([a-zA-Z]{3})(?=$|[_-]+))?(?:[_-]+([a-zA-Z]{4})(?=$|[_-]+))?(?:[_-]+([a-zA-Z]{2}|[0-9]{3})(?=$|[_-]+))?/\r\n\r\n  function match(tag) {\r\n    return tag.match(pattern) || []\r\n  }\r\n\r\n  function split(tag) {\r\n    return match(tag).filter(function(v, i) { return v && i })\r\n  }\r\n\r\n  function api(tag) {\r\n    tag = match(tag)\r\n    return {\r\n      language: tag[1] || empty,\r\n      extlang: tag[2] || empty,\r\n      script: tag[3] || empty,\r\n      region: tag[4] || empty\r\n    }\r\n  }\r\n\r\n  function expose(target, key, value) {\r\n    Object.defineProperty(target, key, {\r\n      value: value,\r\n      enumerable: true\r\n    })\r\n  }\r\n\r\n  function part(position, pattern, type) {\r\n    function method(tag) {\r\n      return match(tag)[position] || empty\r\n    }\r\n    expose(method, 'pattern', pattern)\r\n    expose(api, type, method)\r\n  }\r\n\r\n  part(1, /^[a-zA-Z]{2,3}$/, 'language')\r\n  part(2, /^[a-zA-Z]{3}$/, 'extlang')\r\n  part(3, /^[a-zA-Z]{4}$/, 'script')\r\n  part(4, /^[a-zA-Z]{2}$|^[0-9]{3}$/, 'region')\r\n\r\n  expose(api, 'split', split)\r\n\r\n  return api\r\n});\r\n", "function Geolocation() {}\n\nGeolocation.prototype = {\n\n  isSupport: function() {\n    return Boolean(window.navigator.geolocation);\n  },\n\n  getCurrentPosition: function() {\n    const positionOptions = {\n      enableHighAccuracy: true\n    };\n\n    return new Promise(function(resolve, reject) {\n      window.navigator.geolocation.getCurrentPosition(resolve, reject, positionOptions);\n    });\n  },\n}\n\nmodule.exports = Geolocation;\n", "/**\n * This function transforms the feature from reverse geocoding to plain text with specified accuracy\n * @param {object} feature \n * @param {string} accuracy \n * @returns \n */\nfunction transformFeatureToGeolocationText(feature, accuracy) {\n  const addrInfo = getAddressInfo(feature);\n\n  const addressAccuracy =  ['address', 'street', 'place', 'country'];\n  var currentAccuracy;\n\n  if (typeof accuracy === 'function') {\n    return accuracy(addrInfo)\n  }\n\n  const accuracyIndex = addressAccuracy.indexOf(accuracy);\n\n  if (accuracyIndex === -1) {\n    currentAccuracy = addressAccuracy;\n  } else {\n    currentAccuracy = addressAccuracy.slice(accuracyIndex);\n  }\n\n  return currentAccuracy.reduce(function(acc, name) {\n    if (!addrInfo[name]) {\n      return acc;\n    }\n\n    if (acc !== '') {\n      acc = acc + ', ';\n    }\n\n    return acc + addrInfo[name];\n  }, '');\n}\n/**\n * This function transforms the feature from reverse geocoding to AddressInfo object\n * @param {object} feature \n * @returns {object}\n */\nfunction getAddressInfo(feature) {\n  const houseNumber = feature.address || '';\n  const street = feature.text || '';\n  const placeName = feature.place_name || '';\n  const address = placeName.split(',')[0];\n\n  const addrInfo = {\n    address: address,\n    houseNumber: houseNumber,\n    street: street,\n    placeName: placeName,\n  }\n\n  feature.context.forEach(function (context) {\n    const layer = context.id.split('.')[0];\n    addrInfo[layer] = context.text;\n  });\n\n  return addrInfo;\n}\n\nconst REVERSE_GEOCODE_COORD_RGX = /^[ ]*(-?\\d{1,3}(\\.\\d{0,256})?)[, ]+(-?\\d{1,3}(\\.\\d{0,256})?)[ ]*$/;\n\nmodule.exports = {\n  transformFeatureToGeolocationText: transformFeatureToGeolocationText,\n  getAddressInfo: getAddressInfo,\n  REVERSE_GEOCODE_COORD_RGX: REVERSE_GEOCODE_COORD_RGX,\n}", "'use strict';\n\nvar Typeahead = require('suggestions');\nvar debounce = require('lodash.debounce');\nvar extend = require('xtend');\nvar EventEmitter = require('events').EventEmitter;\nvar exceptions = require('./exceptions');\nvar MapboxClient = require('@mapbox/mapbox-sdk');\nvar mbxGeocoder = require('@mapbox/mapbox-sdk/services/geocoding');\nvar MapboxEventManager = require('./events');\nvar localization = require('./localization');\nvar subtag = require('subtag');\nvar Geolocation = require('./geolocation');\nvar utils = require('./utils');\n\n\nconst GEOCODE_REQUEST_TYPE = {\n  FORWARD: 0,\n  LOCAL: 1,\n  REVERSE: 2,\n};\n\n/**\n * Don't include this as part of the options object when creating a new MapboxGeocoder instance.\n */\nfunction getFooterNode() {\n  var div = document.createElement('div');\n  div.className = 'mapboxgl-ctrl-geocoder--powered-by';\n  div.innerHTML = '<a href=\"https://www.mapbox.com/search-service\" target=\"_blank\">Powered by Mapbox</a>';\n\n  return div;\n}\n\n/**\n * A geocoder component using the [Mapbox Geocoding API](https://docs.mapbox.com/api/search/#geocoding)\n * @class MapboxGeocoder\n * @param {Object} options\n * @param {String} options.accessToken Required.\n * @param {String} [options.origin=https://api.mapbox.com] Use to set a custom API origin.\n * @param {Object} [options.mapboxgl] A [mapbox-gl](https://github.com/mapbox/mapbox-gl-js) instance to use when creating [Markers](https://docs.mapbox.com/mapbox-gl-js/api/#marker). Required if `options.marker` is `true`.\n * @param {Number} [options.zoom=16] On geocoded result what zoom level should the map animate to when a `bbox` isn't found in the response. If a `bbox` is found the map will fit to the `bbox`.\n * @param {Boolean|Object} [options.flyTo=true] If `false`, animating the map to a selected result is disabled. If `true`, animating the map will use the default animation parameters. If an object, it will be passed as `options` to the map [`flyTo`](https://docs.mapbox.com/mapbox-gl-js/api/#map#flyto) or [`fitBounds`](https://docs.mapbox.com/mapbox-gl-js/api/#map#fitbounds) method providing control over the animation of the transition.\n * @param {String} [options.placeholder=Search] Override the default placeholder attribute value.\n * @param {Object|'ip'} [options.proximity] a geographical point given as an object with `latitude` and `longitude` properties, or the string 'ip' to use a user's IP address location. Search results closer to this point will be given higher priority.\n * @param {Boolean} [options.trackProximity=true] If `true`, the geocoder proximity will dynamically update based on the current map view or user's IP location, depending on zoom level.\n * @param {Boolean} [options.collapsed=false] If `true`, the geocoder control will collapse until hovered or in focus.\n * @param {Boolean} [options.clearAndBlurOnEsc=false] If `true`, the geocoder control will clear it's contents and blur when user presses the escape key.\n * @param {Boolean} [options.clearOnBlur=false] If `true`, the geocoder control will clear its value when the input blurs.\n * @param {Array} [options.bbox] a bounding box argument: this is\n * a bounding box given as an array in the format `[minX, minY, maxX, maxY]`.\n * Search results will be limited to the bounding box.\n * @param {string} [options.countries] a comma separated list of country codes to\n * limit results to specified country or countries.\n * @param {string} [options.types] a comma seperated list of types that filter\n * results to match those specified. See https://docs.mapbox.com/api/search/#data-types\n * for available types.\n * If reverseGeocode is enabled and no type is specified, the type defaults to POIs. Otherwise, if you configure more than one type, the first type will be used.\n * @param {Number} [options.minLength=2] Minimum number of characters to enter before results are shown.\n * @param {Number} [options.limit=5] Maximum number of results to show.\n * @param {string} [options.language] Specify the language to use for response text and query result weighting. Options are IETF language tags comprised of a mandatory ISO 639-1 language code and optionally one or more IETF subtags for country or script. More than one value can also be specified, separated by commas. Defaults to the browser's language settings.\n * @param {Function} [options.filter] A function which accepts a Feature in the [Carmen GeoJSON](https://github.com/mapbox/carmen/blob/master/carmen-geojson.md) format to filter out results from the Geocoding API response before they are included in the suggestions list. Return `true` to keep the item, `false` otherwise.\n * @param {Function} [options.localGeocoder] A function accepting the query string which performs local geocoding to supplement results from the Mapbox Geocoding API. Expected to return an Array of GeoJSON Features in the [Carmen GeoJSON](https://github.com/mapbox/carmen/blob/master/carmen-geojson.md) format.\n * @param {Function} [options.externalGeocoder] A function accepting the query string and current features list which performs geocoding to supplement results from the Mapbox Geocoding API. Expected to return a Promise which resolves to an Array of GeoJSON Features in the [Carmen GeoJSON](https://github.com/mapbox/carmen/blob/master/carmen-geojson.md) format.\n * @param {distance|score} [options.reverseMode=distance] - Set the factors that are used to sort nearby results.\n * @param {boolean} [options.reverseGeocode=false] If `true`, enable reverse geocoding mode. In reverse geocoding, search input is expected to be coordinates in the form `lat, lon`, with suggestions being the reverse geocodes.\n * @param {boolean} [options.flipCoordinates=false] If `true`, search input coordinates for reverse geocoding is expected to be in the form `lon, lat` instead of the default `lat, lon`.\n * @param {Boolean} [options.enableEventLogging=true] Allow Mapbox to collect anonymous usage statistics from the plugin.\n * @param {Boolean|Object} [options.marker=true]  If `true`, a [Marker](https://docs.mapbox.com/mapbox-gl-js/api/#marker) will be added to the map at the location of the user-selected result using a default set of Marker options.  If the value is an object, the marker will be constructed using these options. If `false`, no marker will be added to the map. Requires that `options.mapboxgl` also be set.\n * @param {Function} [options.render] A function that specifies how the results should be rendered in the dropdown menu. This function should accepts a single [Carmen GeoJSON](https://github.com/mapbox/carmen/blob/master/carmen-geojson.md) object as input and return a string. Any HTML in the returned string will be rendered.\n * @param {Function} [options.getItemValue] A function that specifies how the selected result should be rendered in the search bar. This function should accept a single [Carmen GeoJSON](https://github.com/mapbox/carmen/blob/master/carmen-geojson.md) object as input and return a string. HTML tags in the output string will not be rendered. Defaults to `(item) => item.place_name`.\n * @param {String} [options.mode=mapbox.places] A string specifying the geocoding [endpoint](https://docs.mapbox.com/api/search/#endpoints) to query. Options are `mapbox.places` and `mapbox.places-permanent`. The `mapbox.places-permanent` mode requires an enterprise license for permanent geocodes.\n * @param {Boolean} [options.localGeocoderOnly=false] If `true`, indicates that the `localGeocoder` results should be the only ones returned to the user. If `false`, indicates that the `localGeocoder` results should be combined with those from the Mapbox API with the `localGeocoder` results ranked higher.\n * @param {Boolean} [options.autocomplete=true] Specify whether to return autocomplete results or not. When autocomplete is enabled, results will be included that start with the requested string, rather than just responses that match it exactly.\n * @param {Boolean} [options.fuzzyMatch=true] Specify whether the Geocoding API should attempt approximate, as well as exact, matching when performing searches, or whether it should opt out of this behavior and only attempt exact matching.\n * @param {Boolean} [options.routing=false] Specify whether to request additional metadata about the recommended navigation destination corresponding to the feature or not. Only applicable for address features.\n * @param {String} [options.worldview=\"us\"] Filter results to geographic features whose characteristics are defined differently by audiences belonging to various regional, cultural, or political groups.\n * @param {Boolean} [options.enableGeolocation=false] If `true` enable user geolocation feature.\n * @param {('address'|'street'|'place'|'country')} [options.addressAccuracy=\"street\"] The accuracy for the geolocation feature with which we define the address line to fill. The browser API returns the user's position with accuracy, and sometimes we can get the neighbor's address. To prevent receiving an incorrect address, you can reduce the accuracy of the definition.\n * @example\n * var geocoder = new MapboxGeocoder({ accessToken: mapboxgl.accessToken });\n * map.addControl(geocoder);\n * @return {MapboxGeocoder} `this`\n *\n */\n\nfunction MapboxGeocoder(options) {\n  this._eventEmitter = new EventEmitter();\n  this.options = extend({}, this.options, options);\n  this.inputString = '';\n  this.fresh = true;\n  this.lastSelected = null;\n  this.geolocation = new Geolocation();\n}\n\nMapboxGeocoder.prototype = {\n  options: {\n    zoom: 16,\n    flyTo: true,\n    trackProximity: true,\n    minLength: 2,\n    reverseGeocode: false,\n    flipCoordinates: false,\n    limit: 5,\n    origin: 'https://api.mapbox.com',\n    enableEventLogging: true,\n    marker: true,\n    mapboxgl: null,\n    collapsed: false,\n    clearAndBlurOnEsc: false,\n    clearOnBlur: false,\n    enableGeolocation: false,\n    addressAccuracy: 'street',\n    getItemValue: function(item) {\n      return item.place_name\n    },\n    render: function(item) {\n      var placeName = item.place_name.split(',');\n      return '<div class=\"mapboxgl-ctrl-geocoder--suggestion\"><div class=\"mapboxgl-ctrl-geocoder--suggestion-title\">' + placeName[0]+ '</div><div class=\"mapboxgl-ctrl-geocoder--suggestion-address\">' + placeName.splice(1, placeName.length).join(',') + '</div></div>';\n    }\n  },\n\n  /**\n   * Add the geocoder to a container. The container can be either a `mapboxgl.Map`, an `HTMLElement` or a CSS selector string.\n   *\n   * If the container is a [`mapboxgl.Map`](https://docs.mapbox.com/mapbox-gl-js/api/map/), this function will behave identically to [`Map.addControl(geocoder)`](https://docs.mapbox.com/mapbox-gl-js/api/map/#map#addcontrol).\n   * If the container is an instance of [`HTMLElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement), then the geocoder will be appended as a child of that [`HTMLElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement).\n   * If the container is a [CSS selector string](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors), the geocoder will be appended to the element returned from the query.\n   *\n   * This function will throw an error if the container is none of the above.\n   * It will also throw an error if the referenced HTML element cannot be found in the `document.body`.\n   *\n   * For example, if the HTML body contains the element `<div id='geocoder-container'></div>`, the following script will append the geocoder to `#geocoder-container`:\n   *\n   * ```javascript\n   * var geocoder = new MapboxGeocoder({ accessToken: mapboxgl.accessToken });\n   * geocoder.addTo('#geocoder-container');\n   * ```\n   * @param {String|HTMLElement|mapboxgl.Map} container A reference to the container to which to add the geocoder\n   */\n  addTo: function(container){\n\n    function addToExistingContainer (geocoder, container) {\n      if (!document.body.contains(container)) {\n        throw new Error(\"Element provided to #addTo() exists, but is not in the DOM\")\n      }\n      const el = geocoder.onAdd(); //returns the input elements, which are then added to the requested html container\n      container.appendChild(el);\n    }\n\n    // if the container is a map, add the control like normal\n    if (container._controlContainer){\n      //  it's a mapbox-gl map, add like normal\n      container.addControl(this);\n    }\n    // if the container is an HTMLElement, then set the parent to be that element\n    else if (container instanceof HTMLElement) {\n      addToExistingContainer(this, container);\n    }\n    // if the container is a string, treat it as a CSS query\n    else if (typeof container == 'string'){\n      const parent = document.querySelectorAll(container);\n      if (parent.length === 0){\n        throw new Error(\"Element \", container, \"not found.\")\n      }\n\n      if (parent.length > 1){\n        throw new Error(\"Geocoder can only be added to a single html element\")\n      }\n\n      addToExistingContainer(this, parent[0]);\n    }else{\n      throw new Error(\"Error: addTo must be a mapbox-gl-js map, an html element, or a CSS selector query for a single html element\")\n    }\n  },\n\n  onAdd: function(map) {\n    if (map && typeof map != 'string'){\n      this._map = map;\n    }\n\n    this.setLanguage();\n\n    if (!this.options.localGeocoderOnly){\n      this.geocoderService = mbxGeocoder(\n        MapboxClient({\n          accessToken: this.options.accessToken,\n          origin: this.options.origin\n        })\n      );\n    }\n\n    if (this.options.localGeocoderOnly && !this.options.localGeocoder){\n      throw new Error(\"A localGeocoder function must be specified to use localGeocoderOnly mode\")\n    }\n\n    this.eventManager = new MapboxEventManager(this.options);\n\n    this._onChange = this._onChange.bind(this);\n    this._onKeyDown = this._onKeyDown.bind(this);\n    this._onPaste = this._onPaste.bind(this);\n    this._onBlur = this._onBlur.bind(this);\n    this._showButton = this._showButton.bind(this);\n    this._hideButton = this._hideButton.bind(this);\n    this._onQueryResult = this._onQueryResult.bind(this);\n    this.clear = this.clear.bind(this);\n    this._updateProximity = this._updateProximity.bind(this);\n    this._collapse = this._collapse.bind(this);\n    this._unCollapse = this._unCollapse.bind(this);\n    this._clear = this._clear.bind(this);\n    this._clearOnBlur = this._clearOnBlur.bind(this);\n    this._geolocateUser = this._geolocateUser.bind(this);\n\n    var el = (this.container = document.createElement('div'));\n    el.className = 'mapboxgl-ctrl-geocoder mapboxgl-ctrl';\n\n    var searchIcon = this.createIcon('search', '<path d=\"M7.4 2.5c-2.7 0-4.9 2.2-4.9 4.9s2.2 4.9 4.9 4.9c1 0 1.8-.2 2.5-.8l3.7 3.7c.2.2.4.3.8.3.7 0 1.1-.4 1.1-1.1 0-.3-.1-.5-.3-.8L11.4 10c.4-.8.8-1.6.8-2.5.1-2.8-2.1-5-4.8-5zm0 1.6c1.8 0 3.2 1.4 3.2 3.2s-1.4 3.2-3.2 3.2-3.3-1.3-3.3-3.1 1.4-3.3 3.3-3.3z\"/>')\n\n    this._inputEl = document.createElement('input');\n    this._inputEl.type = 'text';\n    this._inputEl.className = 'mapboxgl-ctrl-geocoder--input';\n\n    this.setPlaceholder();\n\n    if (this.options.collapsed) {\n      this._collapse();\n      this.container.addEventListener('mouseenter', this._unCollapse);\n      this.container.addEventListener('mouseleave', this._collapse);\n      this._inputEl.addEventListener('focus', this._unCollapse);\n    }\n\n    if (this.options.collapsed || this.options.clearOnBlur) {\n      this._inputEl.addEventListener('blur', this._onBlur);\n    }\n\n    this._inputEl.addEventListener('keydown', debounce(this._onKeyDown, 200));\n    this._inputEl.addEventListener('paste', this._onPaste);\n    this._inputEl.addEventListener('change', this._onChange);\n    this.container.addEventListener('mouseenter', this._showButton);\n    this.container.addEventListener('mouseleave', this._hideButton);\n    this._inputEl.addEventListener('keyup', function(e){\n      this.eventManager.keyevent(e, this);\n    }.bind(this));\n\n    var actions = document.createElement('div');\n    actions.classList.add('mapboxgl-ctrl-geocoder--pin-right');\n\n    this._clearEl = document.createElement('button');\n    this._clearEl.setAttribute('aria-label', 'Clear');\n    this._clearEl.addEventListener('click', this.clear);\n    this._clearEl.className = 'mapboxgl-ctrl-geocoder--button';\n\n    var buttonIcon = this.createIcon('close', '<path d=\"M3.8 2.5c-.6 0-1.3.7-1.3 1.3 0 .3.2.7.5.8L7.2 9 3 13.2c-.3.3-.5.7-.5 1 0 .6.7 1.3 1.3 1.3.3 0 .7-.2 1-.5L9 10.8l4.2 4.2c.2.3.7.3 1 .3.6 0 1.3-.7 1.3-1.3 0-.3-.2-.7-.3-1l-4.4-4L15 4.6c.3-.2.5-.5.5-.8 0-.7-.7-1.3-1.3-1.3-.3 0-.7.2-1 .3L9 7.1 4.8 2.8c-.3-.1-.7-.3-1-.3z\"/>')\n    this._clearEl.appendChild(buttonIcon);\n\n    this._loadingEl = this.createIcon('loading', '<path fill=\"#333\" d=\"M4.4 4.4l.8.8c2.1-2.1 5.5-2.1 7.6 0l.8-.8c-2.5-2.5-6.7-2.5-9.2 0z\"/><path opacity=\".1\" d=\"M12.8 12.9c-2.1 2.1-5.5 2.1-7.6 0-2.1-2.1-2.1-5.5 0-7.7l-.8-.8c-2.5 2.5-2.5 6.7 0 9.2s6.6 2.5 9.2 0 2.5-6.6 0-9.2l-.8.8c2.2 2.1 2.2 5.6 0 7.7z\"/>');\n\n    actions.appendChild(this._clearEl);\n    actions.appendChild(this._loadingEl);\n\n    el.appendChild(searchIcon);\n    el.appendChild(this._inputEl);\n    el.appendChild(actions);\n\n    if (this.options.enableGeolocation && this.geolocation.isSupport()) {\n      this._geolocateEl = document.createElement('button');\n      this._geolocateEl.setAttribute('aria-label', 'Geolocate');\n      this._geolocateEl.addEventListener('click', this._geolocateUser);\n      this._geolocateEl.className = 'mapboxgl-ctrl-geocoder--button';\n\n      var geolocateIcon = this.createIcon('geolocate', '<path d=\"M12.999 3.677L2.042 8.269c-.962.403-.747 1.823.29 1.912l5.032.431.431 5.033c.089 1.037 1.509 1.252 1.912.29l4.592-10.957c.345-.822-.477-1.644-1.299-1.299z\" fill=\"#4264fb\"/>');\n      this._geolocateEl.appendChild(geolocateIcon);\n\n      actions.appendChild(this._geolocateEl);\n      this._showGeolocateButton();\n    }\n\n    var typeahead = this._typeahead = new Typeahead(this._inputEl, [], {\n      filter: false,\n      minLength: this.options.minLength,\n      limit: this.options.limit\n    });\n\n    this.setRenderFunction(this.options.render);\n    typeahead.getItemValue = this.options.getItemValue;\n\n    // Add support for footer.\n    var parentDraw = typeahead.list.draw;\n    var footerNode = this._footerNode = getFooterNode();\n    typeahead.list.draw = function() {\n      parentDraw.call(this);\n\n      footerNode.addEventListener('mousedown', function() {\n        this.selectingListItem = true;\n      }.bind(this));\n    \n      footerNode.addEventListener('mouseup', function() {\n        this.selectingListItem = false;\n      }.bind(this));\n\n      this.element.appendChild(footerNode);\n    };\n\n    this.mapMarker = null;\n    this._handleMarker = this._handleMarker.bind(this);\n    if (this._map){\n      if (this.options.trackProximity ) {\n        this._updateProximity();\n        this._map.on('moveend', this._updateProximity);\n      }\n      this._mapboxgl = this.options.mapboxgl;\n      if (!this._mapboxgl && this.options.marker) {\n        // eslint-disable-next-line no-console\n        console.error(\"No mapboxgl detected in options. Map markers are disabled. Please set options.mapboxgl.\");\n        this.options.marker = false;\n      }\n    }\n    return el;\n  },\n\n  _geolocateUser: function () {\n    this._hideGeolocateButton();\n    this._showLoadingIcon();\n\n    this.geolocation.getCurrentPosition().then(function(geolocationPosition) {\n      this._hideLoadingIcon();\n\n      const geojson = {\n        geometry: {\n          type: 'Point',\n          coordinates: [geolocationPosition.coords.longitude, geolocationPosition.coords.latitude]\n        }\n      };\n\n      this._handleMarker(geojson);\n      this._fly(geojson);\n\n      this._typeahead.clear();\n      this._typeahead.selected = true;\n      this.lastSelected = JSON.stringify(geojson);\n      this._showClearButton();\n      this.fresh = false;\n\n      const config = {\n        limit: 1,\n        language: [this.options.language],\n        query: geojson.geometry.coordinates,\n        types: [\"address\"]\n      };\n\n      if (this.options.localGeocoderOnly) {\n        const text = geojson.geometry.coordinates[0] + ',' + geojson.geometry.coordinates[1]\n        this._setInputValue(text);\n\n        this._eventEmitter.emit('result', { result: geojson });\n      } else {\n        this.geocoderService.reverseGeocode(config).send().then(function (resp) {\n          const feature = resp.body.features[0];\n  \n          if (feature) {\n            const locationText = utils.transformFeatureToGeolocationText(feature, this.options.addressAccuracy);\n            this._setInputValue(locationText);\n  \n            feature.user_coordinates = geojson.geometry.coordinates;\n            this._eventEmitter.emit('result', { result: feature });\n          } else {\n            this._eventEmitter.emit('result', { result: { user_coordinates: geojson.geometry.coordinates } });\n          }\n        }.bind(this));\n      }\n    }.bind(this)).catch(function(error) {\n      if (error.code === 1) {\n        this._renderUserDeniedGeolocationError();\n      } else {\n        this._renderLocationError();\n      }\n\n      this._hideLoadingIcon();\n      this._showGeolocateButton();\n      this._hideAttribution();\n    }.bind(this));\n  },\n\n  createIcon: function(name, path) {\n    var icon = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    icon.setAttribute('class', 'mapboxgl-ctrl-geocoder--icon mapboxgl-ctrl-geocoder--icon-' + name);\n    icon.setAttribute('viewBox', '0 0 18 18');\n    icon.setAttribute('xml:space','preserve');\n    icon.setAttribute('width', 18);\n    icon.setAttribute('height', 18);\n    icon.innerHTML = path;\n    return icon;\n  },\n\n  onRemove: function() {\n    this.container.parentNode.removeChild(this.container);\n\n    if (this.options.trackProximity && this._map) {\n      this._map.off('moveend', this._updateProximity);\n    }\n\n    this._removeMarker();\n\n    this._map = null;\n\n    return this;\n  },\n\n  _setInputValue: function (value) {\n    this._inputEl.value = value;\n  \n    setTimeout(function () {\n      this._inputEl.focus();\n      this._inputEl.scrollLeft = 0;\n      this._inputEl.setSelectionRange(0, 0);\n    }.bind(this), 1);\n  },\n\n  _onPaste: function(e){\n    var value = (e.clipboardData || window.clipboardData).getData('text');\n    if (value.length >= this.options.minLength) {\n      this._geocode(value);\n    }\n  },\n\n  _onKeyDown: function(e) {\n    var ESC_KEY_CODE = 27,\n      TAB_KEY_CODE = 9;\n\n    if (e.keyCode === ESC_KEY_CODE && this.options.clearAndBlurOnEsc) {\n      this._clear(e);\n      return this._inputEl.blur();\n    }\n\n    // if target has shadowRoot, then get the actual active element inside the shadowRoot\n    var target = e.target && e.target.shadowRoot\n      ? e.target.shadowRoot.activeElement\n      : e.target;\n    var value = target ? target.value : '';\n\n    if (!value) {\n      this.fresh = true;\n      // the user has removed all the text\n      if (e.keyCode !== TAB_KEY_CODE) this.clear(e);\n      this._showGeolocateButton();\n      return this._hideClearButton();\n    }\n\n    this._hideGeolocateButton();\n\n    // TAB, ESC, LEFT, RIGHT, ENTER, UP, DOWN\n    if ((e.metaKey || [TAB_KEY_CODE, ESC_KEY_CODE, 37, 39, 13, 38, 40].indexOf(e.keyCode) !== -1))\n      return;\n\n    if (target.value.length >= this.options.minLength) {\n      this._geocode(target.value);\n    }\n  },\n\n  _showButton: function() {\n    if (this._typeahead.selected) this._showClearButton();\n  },\n\n  _hideButton: function() {\n    if (this._typeahead.selected) this._hideClearButton();\n  },\n\n  _showClearButton: function() {\n    this._clearEl.style.display = 'block';\n  },\n\n  _hideClearButton: function() {\n    this._clearEl.style.display = 'none'\n  },\n\n  _showGeolocateButton: function() {\n    if (this._geolocateEl && this.geolocation.isSupport()) {\n      this._geolocateEl.style.display = 'block';\n    }\n  },\n\n  _hideGeolocateButton: function() {\n    if (this._geolocateEl) {\n      this._geolocateEl.style.display = 'none';\n    }\n  },\n\n  _showLoadingIcon: function() {\n    this._loadingEl.style.display = 'block';\n  },\n  \n  _hideLoadingIcon: function() {\n    this._loadingEl.style.display = 'none';\n  },\n\n  _showAttribution: function() {\n    this._footerNode.style.display = 'block'\n  },\n  \n  _hideAttribution: function() {\n    this._footerNode.style.display = 'none'\n  },\n\n  _onBlur: function(e) {\n    if (this.options.clearOnBlur) {\n      this._clearOnBlur(e);\n    }\n    if (this.options.collapsed) {\n      this._collapse();\n    }\n  },\n  _onChange: function() {\n    var selected = this._typeahead.selected;\n    if (selected  && JSON.stringify(selected) !== this.lastSelected) {\n      this._hideClearButton();\n      if (this.options.flyTo) {\n        this._fly(selected);\n      }\n      if (this.options.marker && this._mapboxgl){\n        this._handleMarker(selected);\n      }\n\n      // After selecting a feature, re-focus the textarea and set\n      // cursor at start.\n      this._inputEl.focus();\n      this._inputEl.scrollLeft = 0;\n      this._inputEl.setSelectionRange(0, 0);\n      this.lastSelected = JSON.stringify(selected);\n      this._eventEmitter.emit('result', { result: selected });\n      this.eventManager.select(selected, this);\n    }\n  },\n\n  _fly: function(selected) {\n    var flyOptions;\n    if (selected.properties && exceptions[selected.properties.short_code]) {\n      // Certain geocoder search results return (and therefore zoom to fit)\n      // an unexpectedly large bounding box: for example, both Russia and the\n      // USA span both sides of -180/180, or France includes the island of\n      // Reunion in the Indian Ocean. An incomplete list of these exceptions\n      // at ./exceptions.json provides \"reasonable\" bounding boxes as a\n      // short-term solution; this may be amended as necessary.\n      flyOptions = extend({}, this.options.flyTo);\n      if (this._map){\n        this._map.fitBounds(exceptions[selected.properties.short_code].bbox, flyOptions);\n      }\n    } else if (selected.bbox) {\n      var bbox = selected.bbox;\n      flyOptions = extend({}, this.options.flyTo);\n      if (this._map){\n        this._map.fitBounds([[bbox[0], bbox[1]], [bbox[2], bbox[3]]], flyOptions);\n      }\n    } else {\n      var defaultFlyOptions = {\n        zoom: this.options.zoom\n      }\n      flyOptions = extend({}, defaultFlyOptions, this.options.flyTo);\n      //  ensure that center is not overriden by custom options\n      if (selected.center) {\n        flyOptions.center = selected.center;\n      } else if (selected.geometry && selected.geometry.type && selected.geometry.type === 'Point' && selected.geometry.coordinates) {\n        flyOptions.center = selected.geometry.coordinates;\n      }\n\n      if (this._map){\n        this._map.flyTo(flyOptions);\n      }\n    }\n  },\n\n  _requestType: function(options, search) {\n    var type;\n    if (options.localGeocoderOnly) {\n      type = GEOCODE_REQUEST_TYPE.LOCAL;\n    } else if (options.reverseGeocode && utils.REVERSE_GEOCODE_COORD_RGX.test(search)) {\n      type = GEOCODE_REQUEST_TYPE.REVERSE;\n    } else {\n      type = GEOCODE_REQUEST_TYPE.FORWARD;\n    }\n    return type;\n  },\n\n  _setupConfig: function(requestType, search) {\n    // Possible config properties to pass to client\n    const keys = [\n      'bbox',\n      'limit',\n      'proximity',\n      'countries',\n      'types',\n      'language',\n      'reverseMode',\n      'mode',\n      'autocomplete',\n      'fuzzyMatch',\n      'routing',\n      'worldview'\n    ];\n    const spacesOrCommaRgx = /[\\s,]+/;\n\n    var self = this;\n    var config = keys.reduce(function(config, key) {\n      // don't include undefined/null params, but allow boolean, among other, values\n      if (self.options[key] === undefined || self.options[key] === null) {\n        return config;\n      }\n\n      // countries, types, and language need to be passed in as arrays to client\n      // https://github.com/mapbox/mapbox-sdk-js/blob/master/services/geocoding.js#L38-L47\n      ['countries', 'types', 'language'].indexOf(key) > -1\n        ? (config[key] = self.options[key].split(spacesOrCommaRgx))\n        : (config[key] = self.options[key]);\n\n      const isCoordKey =\n        typeof self.options[key].longitude === 'number' &&\n        typeof self.options[key].latitude  === 'number';\n\n      if (key === 'proximity' && isCoordKey) {\n        const lng = self.options[key].longitude;\n        const lat = self.options[key].latitude;\n\n        config[key] = [lng, lat];\n      }\n\n      return config;\n    }, {});\n\n    switch (requestType) {\n    case GEOCODE_REQUEST_TYPE.REVERSE: {\n      var coords = search.split(spacesOrCommaRgx).map(function(c) {\n        return parseFloat(c, 10);\n      })\n      if (!self.options.flipCoordinates) {\n        coords.reverse();\n      }\n\n      // client only accepts one type for reverseGeocode, so\n      // use first config type if one, if not default to poi\n      config.types ? [config.types[0]] : [\"poi\"];\n      config = extend(config, { query: coords, limit: 1 });\n\n      // Remove config options not supported by the reverseGeocoder\n      ['proximity', 'autocomplete', 'fuzzyMatch', 'bbox'].forEach(function(key) {\n        if (key in config) {\n          delete config[key]\n        }\n      });\n    } break;\n    case GEOCODE_REQUEST_TYPE.FORWARD: {\n      // Ensure that any reverse geocoding looking request is cleaned up\n      // to be processed as only a forward geocoding request by the server.\n      const trimmedSearch = search.trim();\n      const reverseGeocodeCoordRgx = /^(-?\\d{1,3}(\\.\\d{0,256})?)[, ]+(-?\\d{1,3}(\\.\\d{0,256})?)?$/;\n      if (reverseGeocodeCoordRgx.test(trimmedSearch)) {\n        search = search.replace(/,/g, ' ');\n      }\n      config = extend(config, { query: search });\n    } break;\n    }\n\n    return config;\n  },\n\n  _geocode: function(searchInput) {\n    this.inputString = searchInput;\n    this._showLoadingIcon();\n    this._eventEmitter.emit('loading', { query: searchInput });\n\n    const requestType = this._requestType(this.options, searchInput);\n    const config = this._setupConfig(requestType, searchInput);\n\n    var request;\n    switch (requestType) {\n    case GEOCODE_REQUEST_TYPE.LOCAL:\n      request = Promise.resolve();\n      break;\n    case GEOCODE_REQUEST_TYPE.FORWARD:\n      request = this.geocoderService.forwardGeocode(config).send();\n      break;\n    case GEOCODE_REQUEST_TYPE.REVERSE:\n      request = this.geocoderService.reverseGeocode(config).send();\n      break;\n    }\n\n    var localGeocoderRes = this.options.localGeocoder ? this.options.localGeocoder(searchInput) || [] : [];\n    var externalGeocoderRes = [];\n\n    var geocoderError = null;\n    request.catch(function(error) {\n      geocoderError = error;\n    }.bind(this))\n      .then(\n        function(response) {\n          this._hideLoadingIcon();\n\n          var res = {};\n\n          if (!response){\n            res = {\n              type: 'FeatureCollection',\n              features: []\n            }\n          } else if (response.statusCode == '200') {\n            res = response.body;\n            res.request = response.request\n            res.headers = response.headers\n          }\n\n          res.config = config;\n\n          if (this.fresh){\n            this.eventManager.start(this);\n            this.fresh = false;\n          }\n\n          // supplement Mapbox Geocoding API results with locally populated results\n          res.features = res.features\n            ? localGeocoderRes.concat(res.features)\n            : localGeocoderRes;\n\n          if (this.options.externalGeocoder) {\n\n            externalGeocoderRes = this.options.externalGeocoder(searchInput, res.features) || Promise.resolve([]);\n            // supplement Mapbox Geocoding API results with features returned by a promise\n            return externalGeocoderRes.then(function(features) {\n              res.features = res.features ? features.concat(res.features) : features;\n              return res;\n            }, function(){\n              // on error, display the original result\n              return res;\n            });\n          }\n          return res;\n\n        }.bind(this)).then(\n        function(res) {\n          if (geocoderError) {\n            throw geocoderError;\n          }\n\n          // apply results filter if provided\n          if (this.options.filter && res.features.length) {\n            res.features = res.features.filter(this.options.filter);\n          }\n\n          if (res.features.length) {\n            this._showClearButton();\n            this._hideGeolocateButton();\n            this._showAttribution();\n            this._eventEmitter.emit('results', res);\n            this._typeahead.update(res.features);\n          } else {\n            this._hideClearButton();\n            this._hideAttribution();\n            this._typeahead.selected = null;\n            this._renderNoResults();\n            this._eventEmitter.emit('results', res);\n          }\n\n        }.bind(this)\n      ).catch(\n        function(err) {\n          this._hideLoadingIcon();\n          this._hideAttribution();\n\n          // in the event of an error in the Mapbox Geocoding API still display results from the localGeocoder\n          if ((localGeocoderRes.length && this.options.localGeocoder) || (externalGeocoderRes.length && this.options.externalGeocoder) ) {\n            this._showClearButton();\n            this._hideGeolocateButton();\n            this._typeahead.update(localGeocoderRes);\n          } else {\n            this._hideClearButton();\n            this._typeahead.selected = null;\n            this._renderError();\n          }\n\n          this._eventEmitter.emit('results', { features: localGeocoderRes });\n          this._eventEmitter.emit('error', { error: err });\n        }.bind(this)\n      );\n\n    return request;\n  },\n\n  /**\n   * Shared logic for clearing input\n   * @param {Event} [ev] the event that triggered the clear, if available\n   * @private\n   *\n   */\n  _clear: function(ev) {\n    if (ev) ev.preventDefault();\n    this._inputEl.value = '';\n    this._typeahead.selected = null;\n    this._typeahead.clear();\n    this._onChange();\n    this._hideClearButton();\n    this._showGeolocateButton();\n    this._removeMarker();\n    this.lastSelected = null;\n    this._eventEmitter.emit('clear');\n    this.fresh = true;\n  },\n\n  /**\n   * Clear and then focus the input.\n   * @param {Event} [ev] the event that triggered the clear, if available\n   *\n   */\n  clear: function(ev) {\n    this._clear(ev);\n    this._inputEl.focus();\n  },\n\n\n  /**\n   * Clear the input, without refocusing it. Used to implement clearOnBlur\n   * constructor option.\n   * @param {Event} [ev] the blur event\n   * @private\n   */\n  _clearOnBlur: function(ev) {\n    var ctx = this;\n\n    /*\n     * If relatedTarget is not found, assume user targeted the suggestions list.\n     * In that case, do not clear on blur. There are other edge cases where\n     * ev.relatedTarget could be null. Clicking on list always results in null\n     * relatedtarget because of upstream behavior in `suggestions`.\n     *\n     * The ideal solution would be to check if ev.relatedTarget is a child of\n     * the list. See issue #258 for details on why we can't do that yet.\n     */\n    if (ev.relatedTarget) {\n      ctx._clear(ev);\n    }\n  },\n\n  _onQueryResult: function(response) {\n    var results = response.body;\n    if (!results.features.length) return;\n    var result = results.features[0];\n    this._typeahead.selected = result;\n    this._inputEl.value = result.place_name;\n    this._onChange();\n  },\n\n  _updateProximity: function() {\n    // proximity is designed for local scale, if the user is looking at the whole world,\n    // it doesn't make sense to factor in the arbitrary centre of the map\n    if (!this._map || !this.options.trackProximity){\n      return;\n    }\n    if (this._map.getZoom() > 9) {\n      var center = this._map.getCenter().wrap();\n      this.setProximity({ longitude: center.lng, latitude: center.lat }, false);\n    } else {\n      this.setProximity(null, false);\n    }\n  },\n\n  _collapse: function() {\n    // do not collapse if input is in focus\n    if (!this._inputEl.value && this._inputEl !== document.activeElement) this.container.classList.add('mapboxgl-ctrl-geocoder--collapsed');\n  },\n\n  _unCollapse: function() {\n    this.container.classList.remove('mapboxgl-ctrl-geocoder--collapsed');\n  },\n\n  /**\n   * Set & query the input\n   * @param {string} searchInput location name or other search input\n   * @returns {MapboxGeocoder} this\n   */\n  query: function(searchInput) {\n    this._geocode(searchInput).then(this._onQueryResult);\n    return this;\n  },\n\n  _renderError: function(){\n    var errorMessage = \"<div class='mapbox-gl-geocoder--error'>There was an error reaching the server</div>\"\n    this._renderMessage(errorMessage);\n  },\n\n  _renderLocationError: function(){\n    var errorMessage = \"<div class='mapbox-gl-geocoder--error'>A location error has occurred</div>\"\n    this._renderMessage(errorMessage);\n  },\n\n  _renderNoResults: function(){\n    var errorMessage = \"<div class='mapbox-gl-geocoder--error mapbox-gl-geocoder--no-results'>No results found</div>\";\n    this._renderMessage(errorMessage);\n  },\n\n  _renderUserDeniedGeolocationError: function() {\n    var errorMessage = \"<div class='mapbox-gl-geocoder--error'>Geolocation permission denied</div>\"\n    this._renderMessage(errorMessage);\n  },\n\n  _renderMessage: function(msg){\n    this._typeahead.update([]);\n    this._typeahead.selected = null;\n    this._typeahead.clear();\n    this._typeahead.renderError(msg);\n  },\n\n  /**\n   * Get the text to use as the search bar placeholder\n   *\n   * If placeholder is provided in options, then use options.placeholder\n   * Otherwise, if language is provided in options, then use the localized string of the first language if available\n   * Otherwise use the default\n   *\n   * @returns {String} the value to use as the search bar placeholder\n   * @private\n   */\n  _getPlaceholderText: function(){\n    if (this.options.placeholder) return this.options.placeholder;\n    if (this.options.language){\n      var firstLanguage = this.options.language.split(\",\")[0];\n      var language = subtag.language(firstLanguage);\n      var localizedValue = localization.placeholder[language];\n      if (localizedValue)  return localizedValue;\n    }\n    return 'Search';\n  },\n\n  /**\n   * Set input\n   * @param {string} searchInput location name or other search input\n   * @returns {MapboxGeocoder} this\n   */\n  setInput: function(searchInput) {\n    // Set input value to passed value and clear everything else.\n    this._inputEl.value = searchInput;\n    this._typeahead.selected = null;\n    this._typeahead.clear();\n    if (searchInput.length >= this.options.minLength) {\n      this._geocode(searchInput);\n    }\n    return this;\n  },\n\n  /**\n   * Set proximity\n   * @param {Object|'ip'} proximity The new `options.proximity` value. This is a geographical point given as an object with `latitude` and `longitude` properties or the string 'ip'.\n   * @param {Boolean} disableTrackProximity If true, sets `trackProximity` to false. True by default to prevent `trackProximity` from unintentionally overriding an explicitly set proximity value.\n   * @returns {MapboxGeocoder} this\n   */\n  setProximity: function(proximity, disableTrackProximity = true) {\n    this.options.proximity = proximity;\n    if (disableTrackProximity) {\n      this.options.trackProximity = false;\n    }\n    return this;\n  },\n\n  /**\n   * Get proximity\n   * @returns {Object} The geocoder proximity\n   */\n  getProximity: function() {\n    return this.options.proximity;\n  },\n\n  /**\n   * Set the render function used in the results dropdown\n   * @param {Function} fn The function to use as a render function. This function accepts a single [Carmen GeoJSON](https://github.com/mapbox/carmen/blob/master/carmen-geojson.md) object as input and returns a string.\n   * @returns {MapboxGeocoder} this\n   */\n  setRenderFunction: function(fn){\n    if (fn && typeof(fn) == \"function\"){\n      this._typeahead.render = fn;\n    }\n    return this;\n  },\n\n  /**\n   * Get the function used to render the results dropdown\n   *\n   * @returns {Function} the render function\n   */\n  getRenderFunction: function(){\n    return this._typeahead.render;\n  },\n\n  /**\n   * Get the language to use in UI elements and when making search requests\n   *\n   * Look first at the explicitly set options otherwise use the browser's language settings\n   * @param {String} language Specify the language to use for response text and query result weighting. Options are IETF language tags comprised of a mandatory ISO 639-1 language code and optionally one or more IETF subtags for country or script. More than one value can also be specified, separated by commas.\n   * @returns {MapboxGeocoder} this\n   */\n  setLanguage: function(language){\n    var browserLocale = navigator.language || navigator.userLanguage || navigator.browserLanguage;\n    this.options.language = language || this.options.language || browserLocale;\n    return this;\n  },\n\n  /**\n   * Get the language to use in UI elements and when making search requests\n   * @returns {String} The language(s) used by the plugin, if any\n   */\n  getLanguage: function(){\n    return this.options.language;\n  },\n\n  /**\n   * Get the zoom level the map will move to when there is no bounding box on the selected result\n   * @returns {Number} the map zoom\n   */\n  getZoom: function(){\n    return this.options.zoom;\n  },\n\n  /**\n   * Set the zoom level\n   * @param {Number} zoom The zoom level that the map should animate to when a `bbox` isn't found in the response. If a `bbox` is found the map will fit to the `bbox`.\n   * @returns {MapboxGeocoder} this\n   */\n  setZoom: function(zoom){\n    this.options.zoom = zoom;\n    return this;\n  },\n\n  /**\n   * Get the parameters used to fly to the selected response, if any\n   * @returns {Boolean|Object} The `flyTo` option\n   */\n  getFlyTo: function(){\n    return this.options.flyTo;\n  },\n\n  /**\n   * Set the flyTo options\n   * @param {Boolean|Object} flyTo If false, animating the map to a selected result is disabled. If true, animating the map will use the default animation parameters. If an object, it will be passed as `options` to the map [`flyTo`](https://docs.mapbox.com/mapbox-gl-js/api/#map#flyto) or [`fitBounds`](https://docs.mapbox.com/mapbox-gl-js/api/#map#fitbounds) method providing control over the animation of the transition.\n   */\n  setFlyTo: function(flyTo){\n    this.options.flyTo = flyTo;\n    return this;\n  },\n\n  /**\n   * Get the value of the placeholder string\n   * @returns {String} The input element's placeholder value\n   */\n  getPlaceholder: function(){\n    return this.options.placeholder;\n  },\n\n  /**\n   * Set the value of the input element's placeholder\n   * @param {String} placeholder the text to use as the input element's placeholder\n   * @returns {MapboxGeocoder} this\n   */\n  setPlaceholder: function(placeholder){\n    this.placeholder = (placeholder) ? placeholder : this._getPlaceholderText();\n    this._inputEl.placeholder = this.placeholder;\n    this._inputEl.setAttribute('aria-label', this.placeholder);\n    return this\n  },\n\n  /**\n   * Get the bounding box used by the plugin\n   * @returns {Array<Number>} the bounding box, if any\n   */\n  getBbox: function(){\n    return this.options.bbox;\n  },\n\n  /**\n   * Set the bounding box to limit search results to\n   * @param {Array<Number>} bbox a bounding box given as an array in the format [minX, minY, maxX, maxY].\n   * @returns {MapboxGeocoder} this\n   */\n  setBbox: function(bbox){\n    this.options.bbox = bbox;\n    return this;\n  },\n\n  /**\n   * Get a list of the countries to limit search results to\n   * @returns {String} a comma separated list of countries to limit to, if any\n   */\n  getCountries: function(){\n    return this.options.countries;\n  },\n\n  /**\n   * Set the countries to limit search results to\n   * @param {String} countries a comma separated list of countries to limit to\n   * @returns {MapboxGeocoder} this\n   */\n  setCountries: function(countries){\n    this.options.countries = countries;\n    return this;\n  },\n\n  /**\n   * Get a list of the types to limit search results to\n   * @returns {String} a comma separated list of types to limit to\n   */\n  getTypes: function(){\n    return this.options.types;\n  },\n\n  /**\n   * Set the types to limit search results to\n   * @param {String} countries a comma separated list of types to limit to\n   * @returns {MapboxGeocoder} this\n   */\n  setTypes: function(types){\n    this.options.types = types;\n    return this;\n  },\n\n  /**\n   * Get the minimum number of characters typed to trigger results used in the plugin\n   * @returns {Number} The minimum length in characters before a search is triggered\n   */\n  getMinLength: function(){\n    return this.options.minLength;\n  },\n\n  /**\n   * Set the minimum number of characters typed to trigger results used by the plugin\n   * @param {Number} minLength the minimum length in characters\n   * @returns {MapboxGeocoder} this\n   */\n  setMinLength: function(minLength){\n    this.options.minLength = minLength;\n    if (this._typeahead)  this._typeahead.options.minLength = minLength;\n    return this;\n  },\n\n  /**\n   * Get the limit value for the number of results to display used by the plugin\n   * @returns {Number} The limit value for the number of results to display used by the plugin\n   */\n  getLimit: function(){\n    return this.options.limit;\n  },\n\n  /**\n   * Set the limit value for the number of results to display used by the plugin\n   * @param {Number} limit the number of search results to return\n   * @returns {MapboxGeocoder}\n   */\n  setLimit: function(limit){\n    this.options.limit = limit;\n    if (this._typeahead) this._typeahead.options.limit = limit;\n    return this;\n  },\n\n  /**\n   * Get the filter function used by the plugin\n   * @returns {Function} the filter function\n   */\n  getFilter: function(){\n    return this.options.filter;\n  },\n\n  /**\n   * Set the filter function used by the plugin.\n   * @param {Function} filter A function which accepts a Feature in the [Carmen GeoJSON](https://github.com/mapbox/carmen/blob/master/carmen-geojson.md) format to filter out results from the Geocoding API response before they are included in the suggestions list. Return `true` to keep the item, `false` otherwise.\n   * @returns {MapboxGeocoder} this\n   */\n  setFilter: function(filter){\n    this.options.filter = filter;\n    return this;\n  },\n\n  /**\n   * Set the geocoding endpoint used by the plugin.\n   * @param {Function} origin A function which accepts an HTTPS URL to specify the endpoint to query results from.\n   * @returns {MapboxGeocoder} this\n   */\n  setOrigin: function(origin){\n    this.options.origin = origin;\n    this.geocoderService = mbxGeocoder(\n      MapboxClient({\n        accessToken: this.options.accessToken,\n        origin: this.options.origin\n      })\n    );\n    return this;\n  },\n\n  /**\n   * Get the geocoding endpoint the plugin is currently set to\n   * @returns {Function} the endpoint URL\n   */\n  getOrigin: function(){\n    return this.options.origin;\n  },\n\n  /**\n   * Set the accessToken option used for the geocoding request endpoint.\n   * @param {String} accessToken value\n   * @returns {MapboxGeocoder} this\n   */\n  setAccessToken: function(accessToken){\n    this.options.accessToken = accessToken;\n    this.geocoderService = mbxGeocoder(\n      MapboxClient({\n        accessToken: this.options.accessToken,\n        origin: this.options.origin\n      })\n    );\n    return this;\n  },\n\n  /**\n   * Set the autocomplete option used for geocoding requests\n   * @param {Boolean} value The boolean value to set autocomplete to\n   * @returns\n   */\n  setAutocomplete: function(value){\n    this.options.autocomplete = value;\n    return this;\n  },\n\n  /**\n   * Get the current autocomplete parameter value used for requests\n   * @returns {Boolean} The autocomplete parameter value\n   */\n  getAutocomplete: function(){\n    return this.options.autocomplete\n  },\n\n  /**\n   * Set the fuzzyMatch option used for approximate matching in geocoding requests\n   * @param {Boolean} value The boolean value to set fuzzyMatch to\n   * @returns\n   */\n  setFuzzyMatch: function(value){\n    this.options.fuzzyMatch = value;\n    return this;\n  },\n\n  /**\n   * Get the current fuzzyMatch parameter value used for requests\n   * @returns {Boolean} The fuzzyMatch parameter value\n   */\n  getFuzzyMatch: function(){\n    return this.options.fuzzyMatch\n  },\n\n  /**\n   * Set the routing parameter used to ask for routable point metadata in geocoding requests\n   * @param {Boolean} value The boolean value to set routing to\n   * @returns\n   */\n  setRouting: function(value){\n    this.options.routing = value;\n    return this;\n  },\n\n  /**\n   * Get the current routing parameter value used for requests\n   * @returns {Boolean} The routing parameter value\n   */\n  getRouting: function(){\n    return this.options.routing\n  },\n\n  /**\n   * Set the worldview parameter\n   * @param {String} code The country code representing the worldview (e.g. \"us\" | \"cn\" | \"jp\", \"in\")\n   * @returns\n   */\n  setWorldview: function(code){\n    this.options.worldview = code;\n    return this;\n  },\n\n  /**\n   * Get the current worldview parameter value used for requests\n   * @returns {String} The worldview parameter value\n   */\n  getWorldview: function(){\n    return this.options.worldview\n  },\n\n  /**\n   * Handle the placement of a result marking the selected result\n   * @private\n   * @param {Object} selected the selected geojson feature\n   * @returns {MapboxGeocoder} this\n   */\n  _handleMarker: function(selected){\n    // clean up any old marker that might be present\n    if (!this._map){\n      return;\n    }\n    this._removeMarker();\n    var defaultMarkerOptions = {\n      color: '#4668F2'\n    }\n    var markerOptions = extend({}, defaultMarkerOptions, this.options.marker)\n    this.mapMarker = new this._mapboxgl.Marker(markerOptions);\n    if (selected.center) {\n      this.mapMarker\n        .setLngLat(selected.center)\n        .addTo(this._map);\n    } else if (selected.geometry && selected.geometry.type && selected.geometry.type === 'Point' && selected.geometry.coordinates) {\n      this.mapMarker\n        .setLngLat(selected.geometry.coordinates)\n        .addTo(this._map);\n    }\n    return this;\n  },\n\n  /**\n   * Handle the removal of a result marker\n   * @private\n   */\n  _removeMarker: function(){\n    if (this.mapMarker){\n      this.mapMarker.remove();\n      this.mapMarker = null;\n    }\n  },\n\n  /**\n   * Subscribe to events that happen within the plugin.\n   * @param {String} type name of event. Available events and the data passed into their respective event objects are:\n   *\n   * - __clear__ `Emitted when the input is cleared`\n   * - __loading__ `{ query } Emitted when the geocoder is looking up a query`\n   * - __results__ `{ results } Fired when the geocoder returns a response`\n   * - __result__ `{ result } Fired when input is set`\n   * - __error__ `{ error } Error as string`\n   * @param {Function} fn function that's called when the event is emitted.\n   * @returns {MapboxGeocoder} this;\n   */\n  on: function(type, fn) {\n    this._eventEmitter.on(type, fn);\n    return this;\n  },\n\n  /**\n   * Remove an event\n   * @returns {MapboxGeocoder} this\n   * @param {String} type Event name.\n   * @param {Function} fn Function that should unsubscribe to the event emitted.\n   */\n  off: function(type, fn) {\n    this._eventEmitter.removeListener(type, fn);\n    this.eventManager.remove();\n    return this;\n  }\n};\n\nmodule.exports = MapboxGeocoder;\n", "import maplibregl from \"maplibre-gl\";\n\nimport MapboxGeocoder from \"@mapbox/mapbox-gl-geocoder\";\nimport \"@mapbox/mapbox-gl-geocoder/dist/mapbox-gl-geocoder.css\";\n\nimport { Feature, FeatureCollection, Point } from \"geojson\";\n\nimport \"./styles.css\";\nimport Parser from \"./parser\";\nimport { DateItem } from \"./interfaces\";\nimport { DateTime } from \"luxon\";\n\nconst showsSource = \"shows\";\nconst clustersLayer = \"clusters\";\nconst clusterCountLayer = \"cluster-count\";\nconst showLayer = \"show\";\nconst start = {\n  // start in the mission\n  lng: -122.416,\n  lat: 37.76,\n  zoom: 12,\n};\n\nclass MapHandler {\n  // These three things are initialized and become the basis for\n  // all other operations going forward by this class.\n  map: maplibregl.Map;\n  featureCollection: FeatureCollection;\n  dates: DateItem[];\n  popup: maplibregl.Popup;\n\n  constructor() {\n    this.map = this.createMap();\n    this.popup = new maplibregl.Popup({\n      closeButton: false,\n      closeOnClick: true,\n    });\n    const parsed = Parser.parseData();\n\n    parsed.then(({ featureCollection, dates }) => {\n      this.featureCollection = featureCollection;\n      this.dates = dates;\n      this.setupMap();\n      this.setupDates();\n      this.updateListingsAndMap();\n      this.addListeners();\n\n      // this.devTools();\n    });\n  }\n\n  createMap(): maplibregl.Map {\n    const map = new maplibregl.Map({\n      container: \"map\", // container id\n      // See https://docs.mapbox.com/mapbox-gl-js/example/map-tiles/\n      // for the example of using raster tiles this way\n      style: {\n        version: 8,\n        sources: {\n          \"raster-tiles\": {\n            type: \"raster\",\n            tiles: [\n              \"https://stamen-tiles.a.ssl.fastly.net/toner/{z}/{x}/{y}.png\",\n            ],\n            tileSize: 256,\n            attribution:\n              'Map tiles by <a target=\"_top\" rel=\"noopener\" href=\"http://stamen.com\">Stamen Design</a>, under <a target=\"_top\" rel=\"noopener\" href=\"http://creativecommons.org/licenses/by/3.0\">CC BY 3.0</a>. Data by <a target=\"_top\" rel=\"noopener\" href=\"http://openstreetmap.org\">OpenStreetMap</a>, under <a target=\"_top\" rel=\"noopener\" href=\"http://creativecommons.org/licenses/by-sa/3.0\">CC BY SA</a>',\n          },\n        },\n        layers: [\n          {\n            id: \"simple-tiles\",\n            type: \"raster\",\n            source: \"raster-tiles\",\n            minzoom: 0,\n            maxzoom: 22,\n          },\n        ],\n        // need to add this for cluster count \"glyphs\"\n        glyphs: \"https://fonts.openmaptiles.org/{fontstack}/{range}.pbf\",\n      },\n      center: [start.lng, start.lat],\n      zoom: start.zoom,\n    });\n\n    // Add locator control\n    map.addControl(\n      new maplibregl.GeolocateControl({\n        positionOptions: {\n          enableHighAccuracy: true,\n        },\n        trackUserLocation: false,\n      })\n    );\n\n    return map;\n  }\n\n  setupMap(): void {\n    this.map.on(\"load\", () => {\n      // Add the actual shows\n      this.map.addSource(showsSource, {\n        type: \"geojson\",\n        data: this.featureCollection,\n        cluster: true,\n        clusterMaxZoom: 14,\n        clusterRadius: 50,\n      });\n\n      // Main layer\n      this.map.addLayer({\n        id: showLayer,\n        type: \"circle\",\n        source: showsSource,\n        filter: [\"!\", [\"has\", \"point_count\"]],\n        paint: {\n          \"circle-color\": \"#4CAF50\",\n          \"circle-radius\": 10,\n          \"circle-stroke-width\": 1,\n          \"circle-stroke-color\": \"#fff\",\n        },\n      });\n\n      this.map.addLayer({\n        id: clustersLayer,\n        type: \"circle\",\n        source: showsSource,\n        filter: [\"has\", \"point_count\"],\n        paint: {\n          // Use step expressions (https://www.mapbox.com/mapbox-gl-js/style-spec/#expressions-step)\n          // with three steps to implement three types of circles:\n          \"circle-color\": [\n            \"step\",\n            [\"get\", \"point_count\"],\n            \"#51bbd6\",\n            50,\n            \"#f1f075\",\n            100,\n            \"#f28cb1\",\n          ],\n          \"circle-radius\": [\n            \"step\",\n            [\"get\", \"point_count\"],\n            20,\n            50,\n            30,\n            100,\n            40,\n          ],\n        },\n      });\n\n      this.map.addLayer({\n        id: clusterCountLayer,\n        type: \"symbol\",\n        source: showsSource,\n        filter: [\"has\", \"point_count\"],\n        layout: {\n          \"text-field\": \"{point_count_abbreviated}\",\n          // Needs to be a font that is available\n          // from https://github.com/openmaptiles/fonts\n          \"text-font\": [\"Open Sans Bold\"],\n          \"text-size\": 12,\n        },\n      });\n\n      // inspect a cluster on click\n      this.map.on(\"click\", clustersLayer, (e) => {\n        const features = this.map.queryRenderedFeatures(e.point, {\n          layers: [clustersLayer],\n        });\n        const clusterId = features[0].properties.cluster_id;\n        const source: maplibregl.GeoJSONSource = this.map.getSource(\n          showsSource\n        ) as maplibregl.GeoJSONSource;\n\n        source.getClusterExpansionZoom(clusterId, (err, zoom) => {\n          if (err || !zoom) return;\n          const item = features[0].geometry;\n          if (item.type == \"Point\") {\n            this.map.easeTo({\n              center: [item.coordinates[0], item.coordinates[1]],\n              zoom: zoom + 1, // extra zooming\n            });\n          }\n        });\n      });\n\n      // When a click event occurs on a feature in\n      // the unclustered-point layer, open a popup at\n      // the location of the feature, with\n      // description HTML from its properties.\n      this.map.on(\"click\", showLayer, (e) => {\n        if (e && e.features && e.features[0].geometry.type == \"Point\") {\n          const item = e.features[0];\n          const geometry = item.geometry as Point;\n          const coordinates = geometry.coordinates.slice();\n\n          // TODO is this needed?\n          // Ensure that if the map is zoomed out such that\n          // multiple copies of the feature are visible, the\n          // popup appears over the copy being pointed to.\n          while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\n            coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\n          }\n\n          const container = document.createElement(\"div\");\n          container.classList.add(\"popup-listing\");\n\n          // Get all shows related to this point, even if\n          // we've clikced on particular date\n          const venue = e.features[0].properties?.venue;\n          this.map\n            .queryRenderedFeatures()\n            .filter((x) => x.properties?.venue === venue)\n            .sort((a, b) => a.properties?.date > b.properties?.date)\n            .forEach((x) => {\n              container.appendChild(\n                this.makeShowDetailsHtml(x.properties, true)\n              );\n            });\n\n          // Attach single venue\n          const p = document.createElement(\"p\");\n          p.innerText = venue;\n          p.setAttribute(\"class\", \"venue\");\n          const html = p.outerHTML + container.outerHTML;\n\n          this.popup\n            .setLngLat([coordinates[0], coordinates[1]])\n            .setHTML(html)\n            .addTo(this.map);\n        }\n      });\n\n      this.map.on(\"mouseenter\", clustersLayer, () => {\n        this.map.getCanvas().style.cursor = \"pointer\";\n      });\n\n      this.map.on(\"mouseleave\", clustersLayer, () => {\n        this.map.getCanvas().style.cursor = \"\";\n      });\n\n      this.map.on(\"move\", () => {\n        this.updateListingsAndMap();\n      });\n    });\n  }\n\n  makeShowDetailsHtml(\n    props: GeoJSON.GeoJsonProperties,\n    skipVenue = false\n  ): HTMLDivElement {\n    const div = document.createElement(\"div\");\n    div.setAttribute(\"class\", \"listing-item\");\n\n    if (props) {\n      [\"venue\", \"date\", \"details\", \"artists\"].forEach((x) => {\n        if (props[x] !== undefined) {\n          switch (x) {\n            case \"artists\":\n              {\n                const li = document.createElement(\"li\");\n                // TODO: why is this ever a string?\n                const artists =\n                  typeof props[x] === \"string\"\n                    ? JSON.parse(props[x])\n                    : props[x];\n\n                artists.forEach((a: string) => {\n                  const ul = document.createElement(\"ul\");\n                  ul.innerText = a;\n                  li.append(ul);\n                });\n                div.appendChild(li);\n              }\n              break;\n            default: {\n              if (skipVenue && x === \"venue\") {\n                break;\n              }\n              const p = document.createElement(\"p\");\n              p.innerText = props[x];\n              p.classList.add(x);\n              div.appendChild(p);\n            }\n          }\n        }\n      });\n    }\n    return div;\n  }\n\n  updateListingsAndMap(): void {\n    const bounds = this.map.getBounds();\n\n    const filtered = this.featureCollection.features.filter((f) => {\n      if (f.geometry.type === \"Point\") {\n        const onMap = bounds.contains([\n          f.geometry.coordinates[0],\n          f.geometry.coordinates[1],\n        ]);\n        const validDate = this.isSelected(f.properties?.date);\n        return onMap && validDate;\n      }\n      return false;\n    });\n\n    // Filter on source, for clusters\n    const source: maplibregl.GeoJSONSource = this.map.getSource(\n      showsSource\n    ) as maplibregl.GeoJSONSource;\n\n    if (source) {\n      source.setData({\n        type: \"FeatureCollection\",\n        features: filtered,\n      });\n    }\n\n    // Filter listings\n    const listingEl = document.getElementById(\"listing\");\n    if (listingEl) {\n      listingEl.innerHTML = \"\";\n\n      filtered.forEach((f) => {\n        const div = this.makeShowDetailsHtml(f.properties);\n        div.setAttribute(\"class\", \"listing-item\");\n\n        const setPopup = (f: Feature) => {\n          if (f.geometry.type === \"Point\") {\n            this.popup\n              .setLngLat([f.geometry.coordinates[0], f.geometry.coordinates[1]])\n              .setHTML(div.outerHTML)\n              .addTo(this.map);\n          }\n        };\n\n        const easeTo = (f: Feature) => {\n          if (f.geometry.type === \"Point\") {\n            this.map.easeTo({\n              center: [f.geometry.coordinates[0], f.geometry.coordinates[1]],\n              zoom: 16,\n              duration: 1000,\n            });\n          }\n        };\n\n        div.addEventListener(\"click\", () => {\n          setPopup(f);\n          easeTo(f);\n\n          // If we're on mobile, hide the listings after click\n          const showMapButton = document.getElementById(\"show-map-button\");\n          if (showMapButton) {\n            // showMapButton.click();\n          }\n        });\n\n        div.addEventListener(\"mouseover\", () => {\n          setPopup(f);\n        });\n\n        listingEl.appendChild(div);\n      });\n\n      listingEl.addEventListener(\"hover\", (e) => {\n        console.log(e);\n      });\n    }\n  }\n\n  setupDates(): void {\n    // Set the main dates\n    this.setDates(this.dates);\n    const dateStrings = this.getDateStrings();\n\n    const dateSelectors = document.getElementById(\"date-selectors\");\n\n    if (dateSelectors) {\n      dateStrings.forEach((s) => {\n        const p = document.createElement(\"p\");\n        const label = document.createElement(\"label\");\n        label.setAttribute(\"for\", s);\n\n        const check = document.createElement(\"input\");\n        check.setAttribute(\"id\", s);\n        check.setAttribute(\"type\", \"checkbox\");\n        check.setAttribute(\"checked\", \"true\");\n\n        label.appendChild(check);\n        label.appendChild(document.createTextNode(s));\n\n        p.appendChild(label);\n\n        check.addEventListener(\"click\", (e) => {\n          const el = e.target as HTMLInputElement;\n          this.setDate(el.id, el.checked);\n        });\n\n        dateSelectors.appendChild(p);\n      });\n    }\n  }\n\n  syncDateSelector(): void {\n    document.querySelectorAll(\"#date-selectors input\").forEach((i) => {\n      const t = i as HTMLInputElement;\n      t.checked = this.isSelected(t.id);\n    });\n  }\n\n  addListeners(): void {\n    const filterButton = document.getElementById(\"filter-button\");\n    const hideFilterButton = document.getElementById(\"hide-filter-button\");\n    const resetFilterButton = document.getElementById(\"reset-filter-button\");\n    const filters = document.getElementById(\"filters\");\n    const todayButton = document.getElementById(\"today-button\");\n    const tomorrowButton = document.getElementById(\"tomorrow-button\");\n    const byDateButton = document.getElementById(\"by-date-button\");\n\n    const map = document.getElementById(\"map\");\n    const mapOverlay = document.getElementById(\"map-overlay\");\n\n    const dateSelectors = document.getElementById(\"date-selectors\");\n    const showMapButton = document.getElementById(\"show-map-button\");\n    const showListButton = document.getElementById(\"show-list-button\");\n\n    filterButton?.addEventListener(\"click\", () => {\n      filterButton.classList.toggle(\"hidden\");\n      hideFilterButton?.classList.toggle(\"hidden\");\n      resetFilterButton?.classList.toggle(\"hidden\");\n      filters?.classList.toggle(\"hidden\");\n    });\n\n    hideFilterButton?.addEventListener(\"click\", () => {\n      filterButton?.classList.toggle(\"hidden\");\n      hideFilterButton.classList.toggle(\"hidden\");\n      resetFilterButton?.classList.toggle(\"hidden\");\n      filters?.classList.toggle(\"hidden\");\n      dateSelectors?.classList.add(\"hidden\");\n    });\n\n    showMapButton?.addEventListener(\"click\", () => {\n      map?.classList.remove(\"hidden\");\n      mapOverlay?.classList.add(\"hidden\");\n    });\n\n    showListButton?.addEventListener(\"click\", () => {\n      map?.classList.add(\"hidden\");\n      mapOverlay?.classList.remove(\"hidden\");\n    });\n\n    todayButton?.addEventListener(\"click\", () => this.today());\n    tomorrowButton?.addEventListener(\"click\", () => this.tomorrow());\n\n    byDateButton?.addEventListener(\"click\", () => {\n      document.getElementById(\"date-selectors\")?.classList.toggle(\"hidden\");\n    });\n\n    resetFilterButton?.addEventListener(\"click\", () => {\n      this.resetDateSelections();\n      this.map.easeTo(start);\n    });\n  }\n\n  createGeocoder(): MapboxGeocoder {\n    const accessToken =\n      \"pk.eyJ1IjoibWV0YXN5biIsImEiOiIwN2FmMDNhNTRhOWQ3NDExODI1MTllMDk1ODc3NTllZiJ9.Bye80QJ4r0RJsKj4Sre6KQ\";\n    return new MapboxGeocoder({\n      accessToken,\n      // mapboxgl: maplibregl,\n      types: \"poi\",\n      proximity: {\n        longitude: -122.416,\n        latitude: 37.76,\n      },\n      countries: \"us\", // ISO 3166\n      bbox: [-125.222168, 35.728677, -118.048096, 41.845013],\n      filter: (f: Feature) => {\n        return [\n          \"music\",\n          \"event\",\n          \"venue\",\n          \"concert\",\n          \"band\",\n          \"show\",\n          \"stage\",\n          \"hall\",\n          \"club\",\n          \"disco\",\n          \"punk\",\n          \"jazz\",\n          \"rock\",\n          \"theater\",\n          \"theatre\",\n          \"gallery\",\n          \"art\",\n          \"bar\", // sometimes the only categories for venues are related to serving drinks\n          \"alcohol\",\n          \"auditorium\",\n          \"amphitheater\",\n        ].some((cat) => f.properties?.category.toLowerCase().includes(cat));\n      },\n    });\n  }\n\n  devTools(): void {\n    // Do something with these\n    const geocodeCoordinates = {};\n    const geocoder = this.createGeocoder();\n\n    // this.map.addControl(geocoder);\n    geocoder.addTo(\"#geocoder\");\n\n    const scrape = false;\n    if (scrape) {\n      this.featureCollection.features.forEach((f) => {\n        const venue = f.properties?.venue;\n        geocoder.query(venue);\n        setTimeout(() => {\n          console.log(\".\");\n        }, 100);\n      });\n    }\n\n    geocoder.on(\"results\", (e) => {\n      const item = e.features[0];\n      try {\n        if (e.request && e.request.params && e.request.params.query && item) {\n          const query = e.request.params.query;\n          geocodeCoordinates[query] = {\n            coordinates: item.geometry.coordinates,\n            text: item.text,\n          };\n        }\n      } catch (err) {\n        console.error(err);\n      }\n    });\n\n    // Get the geocoder results container.\n    const results = document.createElement(\"pre\");\n    results.setAttribute(\"id\", \"result\");\n    document.getElementsByTagName(\"body\")[0].appendChild(results);\n\n    // Clear results container when search is cleared.\n    geocoder.on(\"clear\", () => {\n      if (results) {\n        results.innerText = \"\";\n      }\n    });\n  }\n\n  setDates(items: DateItem[]): void {\n    this.dates = items;\n  }\n\n  getDateStrings(): string[] {\n    return this.dates.map((x) => x.date);\n  }\n\n  resetDateSelections(): void {\n    this.dates.forEach((x) => {\n      x.checked = true;\n    });\n    this.syncDateSelector();\n    this.updateListingsAndMap();\n    this.popup.remove();\n  }\n\n  setDate(s: string, val: boolean): void {\n    this.dates\n      .filter((x) => x.date === s)\n      .forEach((x) => {\n        x.checked = val;\n      });\n    this.updateListingsAndMap();\n    this.popup.remove();\n  }\n\n  only(s: string): void {\n    this.dates.forEach((x) => {\n      x.checked = x.date === s;\n    });\n    this.syncDateSelector();\n    this.updateListingsAndMap();\n    this.popup.remove();\n  }\n\n  today(): void {\n    const now = DateTime.now().setZone(\"America/Los_Angeles\");\n    // toString returns an ISO 8601 string\n    // where we are just interested in YYYY-MM-DD which is\n    // only the first 10 characters\n    const today = now.toString().slice(0, 10);\n    this.only(today);\n  }\n\n  tomorrow(): void {\n    const now = DateTime.now().setZone(\"America/Los_Angeles\");\n    const tomorrow = now.plus({ hours: 24 }).toString().slice(0, 10);\n    this.only(tomorrow);\n  }\n\n  isSelected(s: string): boolean {\n    return this.dates.filter((x) => x.date === s).some((x) => x.checked);\n  }\n}\n\nnew MapHandler();\n", "{\n  \"venues\": {\n    \"924 Gilman Street\": {\n      \"coordinates\": [\n        -122.299327,\n        37.879571\n      ],\n      \"text\": \"The 924 Gilman Street Project\"\n    },\n    \"August Hall, S.F.\": {\n      \"coordinates\": [\n        -122.409894,\n        37.787443\n      ],\n      \"text\": \"August Hall\"\n    },\n    \"Bottom of the Hill, S.F.\": {\n      \"coordinates\": [\n        -122.396109,\n        37.765108\n      ],\n      \"text\": \"Bottom of the Hill\"\n    },\n    \"Catalyst Atrium, Santa Cruz\": {\n      \"coordinates\": [\n        -122.025597,\n        36.971359\n      ],\n      \"text\": \"The Catalyst\"\n    },\n    \"Fox Theater, Oakland\": {\n      \"coordinates\": [\n        -122.27067,\n        37.808136\n      ],\n      \"text\": \"Fox Theater\"\n    },\n    \"Golden Bull, Oakland\": {\n      \"coordinates\": [\n        -122.270409,\n        37.803999\n      ],\n      \"text\": \"Golden Bull\"\n    },\n    \"Longboard Margarita Bar, Pacifica\": {\n      \"coordinates\": [\n        -122.488115,\n        37.633134\n      ],\n      \"text\": \"Longboard Margarita Bar\"\n    },\n    \"Monarch (San Francisco)\": {\n      \"coordinates\": [\n        -122.408555,\n        37.781002\n      ],\n      \"text\": \"Monarch\"\n    },\n    \"Blue Lagoon, Santa Cruz\": {\n      \"coordinates\": [\n        -122.025316,\n        36.970636\n      ],\n      \"text\": \"The Blue Lagoon\"\n    },\n    \"The Blue Lagoon, Santa Cruz\": {\n      \"coordinates\": [\n        -122.025316,\n        36.970636\n      ],\n      \"text\": \"The Blue Lagoon\"\n    },\n    \"Tamarack, 1501 Harrison Street, Oakland\": {\n      \"coordinates\": [\n        -122.267566,\n        37.804392\n      ],\n      \"text\": \"Tamarack\"\n    },\n    \"The Endup (San Francisco)\": {\n      \"coordinates\": [\n        -122.403872,\n        37.777338\n      ],\n      \"text\": \"The EndUp\"\n    },\n    \"Monroe SF (San Francisco)\": {\n      \"coordinates\": [\n        -122.405067,\n        37.79808\n      ],\n      \"text\": \"Monroe\"\n    },\n    \"Mars Bar (San Francisco)\": {\n      \"coordinates\": [\n        -122.4032609,\n        37.7732839\n      ]\n    },\n    \"F8 (San Francisco)\": {\n      \"coordinates\": [\n        -122.409973,\n        37.77526\n      ],\n      \"text\": \"F8   1192 Folsom\"\n    },\n    \"F8 1192 Folsom (San Francisco)\": {\n      \"coordinates\": [\n        -122.409973,\n        37.77526\n      ],\n      \"text\": \"F8   1192 Folsom\"\n    },\n    \"Rio Theater, Santa Cruz\": {\n      \"coordinates\": [\n        -122.010467,\n        36.9799735\n      ],\n      \"text\": \"Rio Theatre\"\n    },\n    \"Zanzi (Oakland)\": {\n      \"coordinates\": [\n        -122.2663121,\n        37.8112817\n      ]\n    },\n    \"The Valencia Room (San Francisco)\": {\n      \"coordinates\": [\n        -122.421559,\n        37.762505\n      ],\n      \"text\": \"The Valencia Room\"\n    },\n    \"DNA Lounge (San Francisco)\": {\n      \"coordinates\": [\n        -122.4126915,\n        37.770982000000004\n      ],\n      \"text\": \"DNA Lounge\"\n    },\n    \"Ashkenaz, Berkeley\": {\n      \"coordinates\": [\n        -122.2957155,\n        37.8801265\n      ],\n      \"text\": \"Ashkenaz\"\n    },\n    \"Catalyst, Santa Cruz\": {\n      \"coordinates\": [\n        -122.025597,\n        36.971359\n      ],\n      \"text\": \"The Catalyst\"\n    },\n    \"Knockout, S.F.\": {\n      \"coordinates\": [\n        -122.420015,\n        37.745174\n      ],\n      \"text\": \"The Knockout\"\n    },\n    \"Regency Ballroom, S.F.\": {\n      \"coordinates\": [\n        -122.421384,\n        37.787763\n      ],\n      \"text\": \"The Regency Ballroom\"\n    },\n    \"New Parish, Oakland\": {\n      \"coordinates\": [\n        -122.272751,\n        37.807796\n      ],\n      \"text\": \"The New Parish\"\n    },\n    \"The Continental Bar Lounge &amp; Patio (San Jose)\": {\n      \"coordinates\": [\n        -121.886756,\n        37.330589\n      ],\n      \"text\": \"The Continental Bar & Lounge\"\n    },\n    \"Crepe Place, Santa Cruz\": {\n      \"coordinates\": [\n        -122.010887,\n        36.979573\n      ]\n    },\n    \"Empress Theater, Vallejo\": {\n      \"coordinates\": [\n        -122.257631,\n        38.1022315\n      ],\n      \"text\": \"Empress Theatre\"\n    },\n    \"Make-Out Room (San Francisco)\": {\n      \"coordinates\": [\n        -122.419419,\n        37.75537\n      ],\n      \"text\": \"Make-Out Room\"\n    },\n    \"924 Gilman Street, Berkeley\": {\n      \"coordinates\": [\n        -122.299317,\n        37.8795805\n      ],\n      \"text\": \"924 Gilman Street\"\n    },\n    \"Almost Famous Wine Lounge, Livermore\": {\n      \"coordinates\": [\n        -121.769592,\n        37.683284\n      ],\n      \"text\": \"Swirl on the Square\"\n    },\n    \"Great American Music Hall, S.F.\": {\n      \"coordinates\": [\n        -122.418953,\n        37.78498999999999\n      ],\n      \"text\": \"Great American Music Hall\"\n    },\n    \"Hopmonk Tavern, Novato\": {\n      \"coordinates\": [\n        -122.822841,\n        38.401164\n      ],\n      \"text\": \"HopMonk Tavern\"\n    },\n    \"Fillmore, S.F.\": {\n      \"coordinates\": [\n        -122.4330825,\n        37.784025\n      ],\n      \"text\": \"The Fillmore Auditorium\"\n    },\n    \"Radio Habana Social Club, S.F.\": {\n      \"coordinates\": [\n        -122.420913,\n        37.755237\n      ]\n    },\n    \"Ritz, San Jose\": {\n      \"coordinates\": [\n        -121.88583,\n        37.32997\n      ],\n      \"text\": \"The Ritz\"\n    },\n    \"August Hall (San Francisco)\": {\n      \"coordinates\": [\n        -122.409894,\n        37.787443\n      ],\n      \"text\": \"August Hall\"\n    },\n    \"Stork Club, Oakland\": {\n      \"coordinates\": [\n        -122.2683657,\n        37.8131757\n      ]\n    },\n    \"Pop's Bar (San Francisco)\": {\n      \"coordinates\": [\n        -122.408297,\n        37.753024\n      ],\n      \"text\": \"Pop's Bar\"\n    },\n    \"Chapel, S.F.\": {\n      \"coordinates\": [\n        -122.42138,\n        37.76052\n      ],\n      \"text\": \"The Chapel\"\n    },\n    \"DNA Lounge Above, S.F.\": {\n      \"coordinates\": [\n        -122.4126915,\n        37.770982000000004\n      ],\n      \"text\": \"DNA Lounge\"\n    },\n    \"Guild Theater, Menlo Park\": {\n      \"coordinates\": [\n        -122.181271,\n        37.452414\n      ],\n      \"text\": \"Guild Theatre\"\n    },\n    \"Cornerstone, Berkeley\": {\n      \"coordinates\": [\n        -122.267336,\n        37.866325\n      ],\n      \"text\": \"Cornerstone\"\n    },\n    \"DNA Lounge, S.F.\": {\n      \"coordinates\": [\n        -122.4126915,\n        37.770982000000004\n      ],\n      \"text\": \"DNA Lounge\"\n    },\n    \"Rickshaw Stop, S.F.\": {\n      \"coordinates\": [\n        -122.420431,\n        37.776105\n      ],\n      \"text\": \"Rickshaw Stop\"\n    },\n    \"Independent, S.F.\": {\n      \"coordinates\": [\n        -122.437835,\n        37.775573\n      ],\n      \"text\": \"The Independent\"\n    },\n    \"Uptown Theater, Napa\": {\n      \"coordinates\": [\n        -122.287376,\n        38.29635\n      ],\n      \"text\": \"Uptown Theatre\"\n    },\n    \"Phoenix Theater, Petaluma\": {\n      \"coordinates\": [\n        -122.64300349999999,\n        38.234977\n      ],\n      \"text\": \"Phoenix Theater\"\n    },\n    \"The Continental Bar (San Jose)\": {\n      \"coordinates\": [\n        -121.886756,\n        37.330589\n      ],\n      \"text\": \"The Continental Bar & Lounge\"\n    },\n    \"Plough\": {\n      \"coordinates\": [\n        -122.460546,\n        37.783194\n      ],\n      \"text\": \"Plough & Stars\"\n    },\n    \"Caravan Lounge, San Jose\": {\n      \"coordinates\": [\n        -121.892253,\n        37.332907\n      ],\n      \"text\": \"The Caravan Lounge\"\n    },\n    \"The Foundry (San Francisco)\": {\n      \"coordinates\": [\n        -122.4130137,\n        37.7723519\n      ]\n    },\n    \"The Midway (San Francisco)\": {\n      \"coordinates\": [\n        -122.3856944,\n        37.7492774\n      ]\n    },\n    \"Envelop at The Midway (San Francisco)\": {\n      \"coordinates\": [\n        -122.3856944,\n        37.7492774\n      ]\n    },\n    \"The Midway Patio (San Francisco)\": {\n      \"coordinates\": [\n        -122.3856944,\n        37.7492774\n      ]\n    },\n    \"Crybaby, Oakland\": {\n      \"coordinates\": [\n        -122.2694797,\n        37.8085784\n      ]\n    },\n    \"Hawthorn (San Francisco)\": {\n      \"coordinates\": [\n        -122.404167,\n        37.787846\n      ],\n      \"text\": \"Hawthorn\"\n    },\n    \"Great Northern, S.F\": {\n      \"coordinates\": [\n        -122.406406,\n        37.767478\n      ],\n      \"text\": \"The Great Northern\"\n    },\n    \"Peacock Lounge, 552 Haight Street, S.F.\": {\n      \"coordinates\": [\n        -122.431239,\n        37.772039\n      ],\n      \"text\": \"Peacock Lounge\"\n    },\n    \"Halcyon (San Francisco)\": {\n      \"coordinates\": [\n        -122.413905,\n        37.771575\n      ],\n      \"text\": \"Halcyon\"\n    },\n    \"El Rio (San Francisco)\": {\n      \"coordinates\": [\n        -122.419465,\n        37.746845\n      ],\n      \"text\": \"El Rio\"\n    },\n    \"Parliament Event Venue (Oakland)\": {\n      \"coordinates\": [\n        -122.2750478,\n        37.8010164\n      ],\n      \"text\": \"The Armory\"\n    },\n    \"Lowbrau (Sacramento)\": {\n      \"coordinates\": [\n        -121.48042,\n        38.575804\n      ],\n      \"text\": \"LowBrau\"\n    },\n    \"Mothership Bar (San Francisco)\": {\n      \"coordinates\": [\n        -122.419351,\n        37.7469249\n      ]\n    },\n    \"Luxx Event Space (San Francisco)\": {\n      \"coordinates\": [\n        -122.409551,\n        37.7813734\n      ]\n    },\n    \"The Great Northern (San Francisco)\": {\n      \"coordinates\": [\n        -122.406406,\n        37.767478\n      ],\n      \"text\": \"The Great Northern\"\n    },\n    \"1015 Folsom (San Francisco)\": {\n      \"coordinates\": [\n        -122.405774,\n        37.778204\n      ],\n      \"text\": \"1015 Folsom\"\n    },\n    \"Pure Nightclub (Sunnyvale)\": {\n      \"coordinates\": [\n        -122.0298038,\n        37.3768037\n      ]\n    },\n    \"Yolo Nightclub (San Francisco)\": {\n      \"coordinates\": [\n        -122.4133157,\n        37.7715426\n      ]\n    },\n    \"Public Works (San Francisco)\": {\n      \"coordinates\": [\n        -122.419391,\n        37.768948\n      ],\n      \"text\": \"Public Works\"\n    },\n    \"Public Works Loft (San Francisco)\": {\n      \"coordinates\": [\n        -122.419391,\n        37.768948\n      ],\n      \"text\": \"Public Works\"\n    },\n    \"Temple Nightclub (San Francisco)\": {\n      \"coordinates\": [\n        -122.397227,\n        37.787898\n      ],\n      \"text\": \"Temple Nightclub\"\n    },\n    \"Temple (San Francisco)\": {\n      \"coordinates\": [\n        -122.397227,\n        37.787898\n      ],\n      \"text\": \"Temple Nightclub\"\n    },\n    \"Elbo Room, Oakland\": {\n      \"coordinates\": [\n        -119.770712,\n        39.535467\n      ],\n      \"text\": \"Elbow Room\"\n    },\n    \"The Record Bar (San Francisco)\": {\n      \"coordinates\": [\n        -122.4100788,\n        37.7841668\n      ]\n    },\n    \"Pure Night Club (Sunnyvale)\": {\n      \"coordinates\": [\n        -122.419391,\n        37.768948\n      ],\n      \"text\": \"Toyota's Waiting Room\"\n    },\n    \"Henry Miller Library, Big Sur\": {\n      \"coordinates\": [\n        -121.753744,\n        36.220643\n      ],\n      \"text\": \"Henry Miller Memorial Library\"\n    },\n    \"The Regency Ballroom (San Francisco)\": {\n      \"coordinates\": [\n        -122.421384,\n        37.787763\n      ],\n      \"text\": \"The Regency Ballroom\"\n    },\n    \"Ivy Room, Albany\": {\n      \"coordinates\": [\n        -122.299128,\n        37.890431\n      ],\n      \"text\": \"Ivy Room\"\n    },\n    \"Club Six (San Francisco)\": {\n      \"coordinates\": [\n        -122.4096056,\n        37.7813345\n      ]\n    },\n    \"Fulton 55 (Fresno)\": {\n      \"coordinates\": [\n        -119.800556,\n        36.74374\n      ],\n      \"text\": \"Fulton 55\"\n    },\n    \"Thee Parkside, S.F.\": {\n      \"coordinates\": [\n        -122.399842,\n        37.765067\n      ],\n      \"text\": \"Thee Parkside\"\n    },\n    \"Thrillhouse Records, S.F.\": {\n      \"coordinates\": [\n        -122.422312,\n        37.742173\n      ],\n      \"text\": \"Thrillhouse Records\"\n    },\n    \"Harlow's, Sacramento\": {\n      \"coordinates\": [\n        -121.469989,\n        38.573963\n      ],\n      \"text\": \"Harlow's\"\n    },\n    \"The Warfield (San Francisco)\": {\n      \"coordinates\": [\n        -122.410151,\n        37.782675499999996\n      ],\n      \"text\": \"The Warfield\"\n    },\n    \"Warfield, S.F.\": {\n      \"coordinates\": [\n        -122.410151,\n        37.782675499999996\n      ],\n      \"text\": \"The Warfield\"\n    },\n    \"Cat Club (San Francisco)\": {\n      \"coordinates\": [\n        -122.409901,\n        37.775324\n      ],\n      \"text\": \"Cat Club\"\n    },\n    \"Elbo Room Jack London (Oakland)\": {\n      \"coordinates\": [\n        -122.275896,\n        37.796961\n      ],\n      \"text\": \"Elbo Room Jack London\"\n    },\n    \"Rickshaw Stop (San Francisco)\": {\n      \"coordinates\": [\n        -122.420431,\n        37.776105\n      ],\n      \"text\": \"Rickshaw Stop\"\n    },\n    \"Audio Nightclub (San Francisco)\": {\n      \"coordinates\": [\n        -122.413832,\n        37.771378\n      ],\n      \"text\": \"Audio Nightclub\"\n    },\n    \"Audio (San Francisco)\": {\n      \"coordinates\": [\n        -122.413832,\n        37.771378\n      ],\n      \"text\": \"Audio Nightclub\"\n    },\n    \"Bottom Of The Hill (San Francisco)\": {\n      \"coordinates\": [\n        -122.396109,\n        37.765108\n      ],\n      \"text\": \"Bottom of the Hill\"\n    },\n    \"BRIX 581 (Oakland)\": {\n      \"coordinates\": [\n        -122.27835,\n        37.79926\n      ],\n      \"text\": \"BRIX 581\"\n    },\n    \"Origin (San Francisco)\": {\n      \"coordinates\": [\n        -122.432804,\n        37.783863\n      ],\n      \"text\": \"Origin\"\n    },\n    \"The Independent (San Francisco)\": {\n      \"coordinates\": [\n        -122.437835,\n        37.775573\n      ],\n      \"text\": \"The Independent\"\n    },\n    \"Bimbo's 365 Club, S.F.\": {\n      \"coordinates\": [\n        -122.41565750000001,\n        37.803768500000004\n      ],\n      \"text\": \"Bimbo's 365 Club\"\n    },\n    \"Regency Ballroom (San Francisco)\": {\n      \"coordinates\": [\n        -122.421384,\n        37.787763\n      ],\n      \"text\": \"The Regency Ballroom\"\n    },\n    \"Bill Graham Civic Auditorium (San Francisco)\": {\n      \"coordinates\": [\n        -122.4171575,\n        37.778162\n      ],\n      \"text\": \"Bill Graham Civic Auditorium\"\n    },\n    \"Faces Nightclub (Sacramento)\": {\n      \"coordinates\": [\n        -121.4802576,\n        38.5752187\n      ]\n    },\n    \"Greek Theatre (Berkeley)\": {\n      \"coordinates\": [\n        -122.2542195,\n        37.873721\n      ],\n      \"text\": \"Hearst Greek Theatre\"\n    },\n    \"The Uc Theatre (Berkeley)\": {\n      \"coordinates\": [\n        -122.269954,\n        37.871631\n      ],\n      \"text\": \"UC Theatre\"\n    },\n    \"Record Bar (San Francisco)\": {\n      \"coordinates\": [\n        -122.4100788,\n        37.7841668\n      ]\n    },\n    \"The Fillmore (San Francisco)\": {\n      \"coordinates\": [\n        -122.4330825,\n        37.784025\n      ],\n      \"text\": \"The Fillmore Auditorium\"\n    },\n    \"The Knockout (San Francisco)\": {\n      \"coordinates\": [\n        -122.420015,\n        37.745174\n      ],\n      \"text\": \"The Knockout\"\n    },\n    \"Neck Of The Woods (San Francisco)\": {\n      \"coordinates\": [\n        -122.463689,\n        37.783052\n      ],\n      \"text\": \"Neck of the Woods\"\n    },\n    \"Grace Cathedral (San Francisco)\": {\n      \"coordinates\": [\n        -122.413174,\n        37.791782999999995\n      ],\n      \"text\": \"Grace Cathedral\"\n    },\n    \"Madrone Art Bar (San Francisco)\": {\n      \"coordinates\": [\n        -122.43743,\n        37.774025\n      ],\n      \"text\": \"Madrone Art Bar\"\n    },\n    \"The Center SF (San Francisco)\": {\n      \"coordinates\": [\n        -122.4307162,\n        37.7744549\n      ]\n    },\n    \"UC Theater, Berkeley\": {\n      \"coordinates\": [\n        -122.269958,\n        37.871601\n      ],\n      \"text\": \"Uc Theater\"\n    },\n    \"Midtown Barfly (Sacramento)\": {\n      \"coordinates\": [\n        -121.479138,\n        38.574531\n      ],\n      \"text\": \"Midtown BarFly\"\n    },\n    \"The Catalyst Club (Santa Cruz)\": {\n      \"coordinates\": [\n        -122.025597,\n        36.971359\n      ],\n      \"text\": \"The Catalyst\"\n    },\n    \"The Colonial Theatre (Sacramento)\": {\n      \"coordinates\": [\n        -121.4515798,\n        38.5424065\n      ]\n    },\n    \"Goldfield Trading Post (Roseville)\": {\n      \"coordinates\": [\n        -121.484119,\n        38.577715\n      ],\n      \"text\": \"Goldfield Trading Post\"\n    },\n    \"Svn West (San Francisco)\": {\n      \"coordinates\": [\n        -122.419648,\n        37.774356\n      ],\n      \"text\": \"SVN West\"\n    },\n    \"Goldfield Trading Post, Sacramento\": {\n      \"coordinates\": [\n        -121.484119,\n        38.577715\n      ],\n      \"text\": \"Goldfield Trading Post\"\n    },\n    \"Chase Center (San Francisco)\": {\n      \"coordinates\": [\n        -122.387426,\n        37.7678485\n      ],\n      \"text\": \"Chase Center\"\n    },\n    \"Stay Gold Deli, Oakland\": {\n      \"coordinates\": [\n        -122.275856,\n        37.817699\n      ]\n    },\n    \"Freight and Salvage, Berkeley\": {\n      \"coordinates\": [\n        -122.2695846,\n        37.8708514\n      ]\n    },\n    \"Sweetwater Music Hall, Mill Valley\": {\n      \"coordinates\": [\n        -122.547954,\n        37.907057\n      ]\n    },\n    \"Ace Of Spades (Sacramento)\": {\n      \"coordinates\": [\n        -121.4909317,\n        38.5699587\n      ]\n    },\n    \"Underground (San Francisco)\": {\n      \"coordinates\": [\n        -122.429336,\n        37.772305\n      ]\n    },\n    \"Bergerac (San Francisco)\": {\n      \"coordinates\": [\n        -122.413712,\n        37.771563\n      ]\n    },\n    \"Emporium SF (San Francisco)\": {\n      \"coordinates\": [\n        -122.437701,\n        37.775316\n      ]\n    },\n    \"Gray Area (San Francisco)\": {\n      \"coordinates\": [\n        -122.41848,\n        37.754367\n      ]\n    },\n    \"Cafe Du Nord, S.F.\": {\n      \"coordinates\": [\n        -122.43010000000001,\n        37.766594999999995\n      ]\n    },\n    \"Cafe du Nord, S.F.\": {\n      \"coordinates\": [\n        -122.43010000000001,\n        37.766594999999995\n      ]\n    }\n  }\n}\n", "// these aren't really private, but nor are they really useful to document\n\n/**\n * @private\n */\nclass LuxonError extends Error {}\n\n/**\n * @private\n */\nexport class InvalidDateTimeError extends LuxonError {\n  constructor(reason) {\n    super(`Invalid DateTime: ${reason.toMessage()}`);\n  }\n}\n\n/**\n * @private\n */\nexport class InvalidIntervalError extends LuxonError {\n  constructor(reason) {\n    super(`Invalid Interval: ${reason.toMessage()}`);\n  }\n}\n\n/**\n * @private\n */\nexport class InvalidDurationError extends LuxonError {\n  constructor(reason) {\n    super(`Invalid Duration: ${reason.toMessage()}`);\n  }\n}\n\n/**\n * @private\n */\nexport class ConflictingSpecificationError extends LuxonError {}\n\n/**\n * @private\n */\nexport class InvalidUnitError extends LuxonError {\n  constructor(unit) {\n    super(`Invalid unit ${unit}`);\n  }\n}\n\n/**\n * @private\n */\nexport class InvalidArgumentError extends LuxonError {}\n\n/**\n * @private\n */\nexport class ZoneIsAbstractError extends LuxonError {\n  constructor() {\n    super(\"Zone is an abstract class\");\n  }\n}\n", "/**\n * @private\n */\n\nconst n = \"numeric\",\n  s = \"short\",\n  l = \"long\";\n\nexport const DATE_SHORT = {\n  year: n,\n  month: n,\n  day: n,\n};\n\nexport const DATE_MED = {\n  year: n,\n  month: s,\n  day: n,\n};\n\nexport const DATE_MED_WITH_WEEKDAY = {\n  year: n,\n  month: s,\n  day: n,\n  weekday: s,\n};\n\nexport const DATE_FULL = {\n  year: n,\n  month: l,\n  day: n,\n};\n\nexport const DATE_HUGE = {\n  year: n,\n  month: l,\n  day: n,\n  weekday: l,\n};\n\nexport const TIME_SIMPLE = {\n  hour: n,\n  minute: n,\n};\n\nexport const TIME_WITH_SECONDS = {\n  hour: n,\n  minute: n,\n  second: n,\n};\n\nexport const TIME_WITH_SHORT_OFFSET = {\n  hour: n,\n  minute: n,\n  second: n,\n  timeZoneName: s,\n};\n\nexport const TIME_WITH_LONG_OFFSET = {\n  hour: n,\n  minute: n,\n  second: n,\n  timeZoneName: l,\n};\n\nexport const TIME_24_SIMPLE = {\n  hour: n,\n  minute: n,\n  hourCycle: \"h23\",\n};\n\nexport const TIME_24_WITH_SECONDS = {\n  hour: n,\n  minute: n,\n  second: n,\n  hourCycle: \"h23\",\n};\n\nexport const TIME_24_WITH_SHORT_OFFSET = {\n  hour: n,\n  minute: n,\n  second: n,\n  hourCycle: \"h23\",\n  timeZoneName: s,\n};\n\nexport const TIME_24_WITH_LONG_OFFSET = {\n  hour: n,\n  minute: n,\n  second: n,\n  hourCycle: \"h23\",\n  timeZoneName: l,\n};\n\nexport const DATETIME_SHORT = {\n  year: n,\n  month: n,\n  day: n,\n  hour: n,\n  minute: n,\n};\n\nexport const DATETIME_SHORT_WITH_SECONDS = {\n  year: n,\n  month: n,\n  day: n,\n  hour: n,\n  minute: n,\n  second: n,\n};\n\nexport const DATETIME_MED = {\n  year: n,\n  month: s,\n  day: n,\n  hour: n,\n  minute: n,\n};\n\nexport const DATETIME_MED_WITH_SECONDS = {\n  year: n,\n  month: s,\n  day: n,\n  hour: n,\n  minute: n,\n  second: n,\n};\n\nexport const DATETIME_MED_WITH_WEEKDAY = {\n  year: n,\n  month: s,\n  day: n,\n  weekday: s,\n  hour: n,\n  minute: n,\n};\n\nexport const DATETIME_FULL = {\n  year: n,\n  month: l,\n  day: n,\n  hour: n,\n  minute: n,\n  timeZoneName: s,\n};\n\nexport const DATETIME_FULL_WITH_SECONDS = {\n  year: n,\n  month: l,\n  day: n,\n  hour: n,\n  minute: n,\n  second: n,\n  timeZoneName: s,\n};\n\nexport const DATETIME_HUGE = {\n  year: n,\n  month: l,\n  day: n,\n  weekday: l,\n  hour: n,\n  minute: n,\n  timeZoneName: l,\n};\n\nexport const DATETIME_HUGE_WITH_SECONDS = {\n  year: n,\n  month: l,\n  day: n,\n  weekday: l,\n  hour: n,\n  minute: n,\n  second: n,\n  timeZoneName: l,\n};\n", "import { ZoneIsAbstractError } from \"./errors.js\";\n\n/**\n * @interface\n */\nexport default class Zone {\n  /**\n   * The type of zone\n   * @abstract\n   * @type {string}\n   */\n  get type() {\n    throw new ZoneIsAbstractError();\n  }\n\n  /**\n   * The name of this zone.\n   * @abstract\n   * @type {string}\n   */\n  get name() {\n    throw new ZoneIsAbstractError();\n  }\n\n  get ianaName() {\n    return this.name;\n  }\n\n  /**\n   * Returns whether the offset is known to be fixed for the whole year.\n   * @abstract\n   * @type {boolean}\n   */\n  get isUniversal() {\n    throw new ZoneIsAbstractError();\n  }\n\n  /**\n   * Returns the offset's common name (such as EST) at the specified timestamp\n   * @abstract\n   * @param {number} ts - Epoch milliseconds for which to get the name\n   * @param {Object} opts - Options to affect the format\n   * @param {string} opts.format - What style of offset to return. Accepts 'long' or 'short'.\n   * @param {string} opts.locale - What locale to return the offset name in.\n   * @return {string}\n   */\n  offsetName(ts, opts) {\n    throw new ZoneIsAbstractError();\n  }\n\n  /**\n   * Returns the offset's value as a string\n   * @abstract\n   * @param {number} ts - Epoch milliseconds for which to get the offset\n   * @param {string} format - What style of offset to return.\n   *                          Accepts 'narrow', 'short', or 'techie'. Returning '+6', '+06:00', or '+0600' respectively\n   * @return {string}\n   */\n  formatOffset(ts, format) {\n    throw new ZoneIsAbstractError();\n  }\n\n  /**\n   * Return the offset in minutes for this zone at the specified timestamp.\n   * @abstract\n   * @param {number} ts - Epoch milliseconds for which to compute the offset\n   * @return {number}\n   */\n  offset(ts) {\n    throw new ZoneIsAbstractError();\n  }\n\n  /**\n   * Return whether this Zone is equal to another zone\n   * @abstract\n   * @param {Zone} otherZone - the zone to compare\n   * @return {boolean}\n   */\n  equals(otherZone) {\n    throw new ZoneIsAbstractError();\n  }\n\n  /**\n   * Return whether this Zone is valid.\n   * @abstract\n   * @type {boolean}\n   */\n  get isValid() {\n    throw new ZoneIsAbstractError();\n  }\n}\n", "import { formatOffset, parseZoneInfo } from \"../impl/util.js\";\nimport Zone from \"../zone.js\";\n\nlet singleton = null;\n\n/**\n * Represents the local zone for this JavaScript environment.\n * @implements {Zone}\n */\nexport default class SystemZone extends Zone {\n  /**\n   * Get a singleton instance of the local zone\n   * @return {SystemZone}\n   */\n  static get instance() {\n    if (singleton === null) {\n      singleton = new SystemZone();\n    }\n    return singleton;\n  }\n\n  /** @override **/\n  get type() {\n    return \"system\";\n  }\n\n  /** @override **/\n  get name() {\n    return new Intl.DateTimeFormat().resolvedOptions().timeZone;\n  }\n\n  /** @override **/\n  get isUniversal() {\n    return false;\n  }\n\n  /** @override **/\n  offsetName(ts, { format, locale }) {\n    return parseZoneInfo(ts, format, locale);\n  }\n\n  /** @override **/\n  formatOffset(ts, format) {\n    return formatOffset(this.offset(ts), format);\n  }\n\n  /** @override **/\n  offset(ts) {\n    return -new Date(ts).getTimezoneOffset();\n  }\n\n  /** @override **/\n  equals(otherZone) {\n    return otherZone.type === \"system\";\n  }\n\n  /** @override **/\n  get isValid() {\n    return true;\n  }\n}\n", "import { formatOffset, parseZoneInfo, isUndefined, objToLocalTS } from \"../impl/util.js\";\nimport Zone from \"../zone.js\";\n\nlet dtfCache = {};\nfunction makeDTF(zone) {\n  if (!dtfCache[zone]) {\n    dtfCache[zone] = new Intl.DateTimeFormat(\"en-US\", {\n      hour12: false,\n      timeZone: zone,\n      year: \"numeric\",\n      month: \"2-digit\",\n      day: \"2-digit\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      second: \"2-digit\",\n      era: \"short\",\n    });\n  }\n  return dtfCache[zone];\n}\n\nconst typeToPos = {\n  year: 0,\n  month: 1,\n  day: 2,\n  era: 3,\n  hour: 4,\n  minute: 5,\n  second: 6,\n};\n\nfunction hackyOffset(dtf, date) {\n  const formatted = dtf.format(date).replace(/\\u200E/g, \"\"),\n    parsed = /(\\d+)\\/(\\d+)\\/(\\d+) (AD|BC),? (\\d+):(\\d+):(\\d+)/.exec(formatted),\n    [, fMonth, fDay, fYear, fadOrBc, fHour, fMinute, fSecond] = parsed;\n  return [fYear, fMonth, fDay, fadOrBc, fHour, fMinute, fSecond];\n}\n\nfunction partsOffset(dtf, date) {\n  const formatted = dtf.formatToParts(date);\n  const filled = [];\n  for (let i = 0; i < formatted.length; i++) {\n    const { type, value } = formatted[i];\n    const pos = typeToPos[type];\n\n    if (type === \"era\") {\n      filled[pos] = value;\n    } else if (!isUndefined(pos)) {\n      filled[pos] = parseInt(value, 10);\n    }\n  }\n  return filled;\n}\n\nlet ianaZoneCache = {};\n/**\n * A zone identified by an IANA identifier, like America/New_York\n * @implements {Zone}\n */\nexport default class IANAZone extends Zone {\n  /**\n   * @param {string} name - Zone name\n   * @return {IANAZone}\n   */\n  static create(name) {\n    if (!ianaZoneCache[name]) {\n      ianaZoneCache[name] = new IANAZone(name);\n    }\n    return ianaZoneCache[name];\n  }\n\n  /**\n   * Reset local caches. Should only be necessary in testing scenarios.\n   * @return {void}\n   */\n  static resetCache() {\n    ianaZoneCache = {};\n    dtfCache = {};\n  }\n\n  /**\n   * Returns whether the provided string is a valid specifier. This only checks the string's format, not that the specifier identifies a known zone; see isValidZone for that.\n   * @param {string} s - The string to check validity on\n   * @example IANAZone.isValidSpecifier(\"America/New_York\") //=> true\n   * @example IANAZone.isValidSpecifier(\"Sport~~blorp\") //=> false\n   * @deprecated This method returns false for some valid IANA names. Use isValidZone instead.\n   * @return {boolean}\n   */\n  static isValidSpecifier(s) {\n    return this.isValidZone(s);\n  }\n\n  /**\n   * Returns whether the provided string identifies a real zone\n   * @param {string} zone - The string to check\n   * @example IANAZone.isValidZone(\"America/New_York\") //=> true\n   * @example IANAZone.isValidZone(\"Fantasia/Castle\") //=> false\n   * @example IANAZone.isValidZone(\"Sport~~blorp\") //=> false\n   * @return {boolean}\n   */\n  static isValidZone(zone) {\n    if (!zone) {\n      return false;\n    }\n    try {\n      new Intl.DateTimeFormat(\"en-US\", { timeZone: zone }).format();\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  constructor(name) {\n    super();\n    /** @private **/\n    this.zoneName = name;\n    /** @private **/\n    this.valid = IANAZone.isValidZone(name);\n  }\n\n  /** @override **/\n  get type() {\n    return \"iana\";\n  }\n\n  /** @override **/\n  get name() {\n    return this.zoneName;\n  }\n\n  /** @override **/\n  get isUniversal() {\n    return false;\n  }\n\n  /** @override **/\n  offsetName(ts, { format, locale }) {\n    return parseZoneInfo(ts, format, locale, this.name);\n  }\n\n  /** @override **/\n  formatOffset(ts, format) {\n    return formatOffset(this.offset(ts), format);\n  }\n\n  /** @override **/\n  offset(ts) {\n    const date = new Date(ts);\n\n    if (isNaN(date)) return NaN;\n\n    const dtf = makeDTF(this.name);\n    let [year, month, day, adOrBc, hour, minute, second] = dtf.formatToParts\n      ? partsOffset(dtf, date)\n      : hackyOffset(dtf, date);\n\n    if (adOrBc === \"BC\") {\n      year = -Math.abs(year) + 1;\n    }\n\n    // because we're using hour12 and https://bugs.chromium.org/p/chromium/issues/detail?id=1025564&can=2&q=%2224%3A00%22%20datetimeformat\n    const adjustedHour = hour === 24 ? 0 : hour;\n\n    const asUTC = objToLocalTS({\n      year,\n      month,\n      day,\n      hour: adjustedHour,\n      minute,\n      second,\n      millisecond: 0,\n    });\n\n    let asTS = +date;\n    const over = asTS % 1000;\n    asTS -= over >= 0 ? over : 1000 + over;\n    return (asUTC - asTS) / (60 * 1000);\n  }\n\n  /** @override **/\n  equals(otherZone) {\n    return otherZone.type === \"iana\" && otherZone.name === this.name;\n  }\n\n  /** @override **/\n  get isValid() {\n    return this.valid;\n  }\n}\n", "import { padStart, roundTo, hasRelative } from \"./util.js\";\nimport * as English from \"./english.js\";\nimport Settings from \"../settings.js\";\nimport DateTime from \"../datetime.js\";\nimport IANAZone from \"../zones/IANAZone.js\";\n\n// todo - remap caching\n\nlet intlLFCache = {};\nfunction getCachedLF(locString, opts = {}) {\n  const key = JSON.stringify([locString, opts]);\n  let dtf = intlLFCache[key];\n  if (!dtf) {\n    dtf = new Intl.ListFormat(locString, opts);\n    intlLFCache[key] = dtf;\n  }\n  return dtf;\n}\n\nlet intlDTCache = {};\nfunction getCachedDTF(locString, opts = {}) {\n  const key = JSON.stringify([locString, opts]);\n  let dtf = intlDTCache[key];\n  if (!dtf) {\n    dtf = new Intl.DateTimeFormat(locString, opts);\n    intlDTCache[key] = dtf;\n  }\n  return dtf;\n}\n\nlet intlNumCache = {};\nfunction getCachedINF(locString, opts = {}) {\n  const key = JSON.stringify([locString, opts]);\n  let inf = intlNumCache[key];\n  if (!inf) {\n    inf = new Intl.NumberFormat(locString, opts);\n    intlNumCache[key] = inf;\n  }\n  return inf;\n}\n\nlet intlRelCache = {};\nfunction getCachedRTF(locString, opts = {}) {\n  const { base, ...cacheKeyOpts } = opts; // exclude `base` from the options\n  const key = JSON.stringify([locString, cacheKeyOpts]);\n  let inf = intlRelCache[key];\n  if (!inf) {\n    inf = new Intl.RelativeTimeFormat(locString, opts);\n    intlRelCache[key] = inf;\n  }\n  return inf;\n}\n\nlet sysLocaleCache = null;\nfunction systemLocale() {\n  if (sysLocaleCache) {\n    return sysLocaleCache;\n  } else {\n    sysLocaleCache = new Intl.DateTimeFormat().resolvedOptions().locale;\n    return sysLocaleCache;\n  }\n}\n\nfunction parseLocaleString(localeStr) {\n  // I really want to avoid writing a BCP 47 parser\n  // see, e.g. https://github.com/wooorm/bcp-47\n  // Instead, we'll do this:\n\n  // a) if the string has no -u extensions, just leave it alone\n  // b) if it does, use Intl to resolve everything\n  // c) if Intl fails, try again without the -u\n\n  // private subtags and unicode subtags have ordering requirements,\n  // and we're not properly parsing this, so just strip out the\n  // private ones if they exist.\n  const xIndex = localeStr.indexOf(\"-x-\");\n  if (xIndex !== -1) {\n    localeStr = localeStr.substring(0, xIndex);\n  }\n\n  const uIndex = localeStr.indexOf(\"-u-\");\n  if (uIndex === -1) {\n    return [localeStr];\n  } else {\n    let options;\n    let selectedStr;\n    try {\n      options = getCachedDTF(localeStr).resolvedOptions();\n      selectedStr = localeStr;\n    } catch (e) {\n      const smaller = localeStr.substring(0, uIndex);\n      options = getCachedDTF(smaller).resolvedOptions();\n      selectedStr = smaller;\n    }\n\n    const { numberingSystem, calendar } = options;\n    return [selectedStr, numberingSystem, calendar];\n  }\n}\n\nfunction intlConfigString(localeStr, numberingSystem, outputCalendar) {\n  if (outputCalendar || numberingSystem) {\n    if (!localeStr.includes(\"-u-\")) {\n      localeStr += \"-u\";\n    }\n\n    if (outputCalendar) {\n      localeStr += `-ca-${outputCalendar}`;\n    }\n\n    if (numberingSystem) {\n      localeStr += `-nu-${numberingSystem}`;\n    }\n    return localeStr;\n  } else {\n    return localeStr;\n  }\n}\n\nfunction mapMonths(f) {\n  const ms = [];\n  for (let i = 1; i <= 12; i++) {\n    const dt = DateTime.utc(2016, i, 1);\n    ms.push(f(dt));\n  }\n  return ms;\n}\n\nfunction mapWeekdays(f) {\n  const ms = [];\n  for (let i = 1; i <= 7; i++) {\n    const dt = DateTime.utc(2016, 11, 13 + i);\n    ms.push(f(dt));\n  }\n  return ms;\n}\n\nfunction listStuff(loc, length, defaultOK, englishFn, intlFn) {\n  const mode = loc.listingMode(defaultOK);\n\n  if (mode === \"error\") {\n    return null;\n  } else if (mode === \"en\") {\n    return englishFn(length);\n  } else {\n    return intlFn(length);\n  }\n}\n\nfunction supportsFastNumbers(loc) {\n  if (loc.numberingSystem && loc.numberingSystem !== \"latn\") {\n    return false;\n  } else {\n    return (\n      loc.numberingSystem === \"latn\" ||\n      !loc.locale ||\n      loc.locale.startsWith(\"en\") ||\n      new Intl.DateTimeFormat(loc.intl).resolvedOptions().numberingSystem === \"latn\"\n    );\n  }\n}\n\n/**\n * @private\n */\n\nclass PolyNumberFormatter {\n  constructor(intl, forceSimple, opts) {\n    this.padTo = opts.padTo || 0;\n    this.floor = opts.floor || false;\n\n    const { padTo, floor, ...otherOpts } = opts;\n\n    if (!forceSimple || Object.keys(otherOpts).length > 0) {\n      const intlOpts = { useGrouping: false, ...opts };\n      if (opts.padTo > 0) intlOpts.minimumIntegerDigits = opts.padTo;\n      this.inf = getCachedINF(intl, intlOpts);\n    }\n  }\n\n  format(i) {\n    if (this.inf) {\n      const fixed = this.floor ? Math.floor(i) : i;\n      return this.inf.format(fixed);\n    } else {\n      // to match the browser's numberformatter defaults\n      const fixed = this.floor ? Math.floor(i) : roundTo(i, 3);\n      return padStart(fixed, this.padTo);\n    }\n  }\n}\n\n/**\n * @private\n */\n\nclass PolyDateFormatter {\n  constructor(dt, intl, opts) {\n    this.opts = opts;\n\n    let z = undefined;\n    if (dt.zone.isUniversal) {\n      // UTC-8 or Etc/UTC-8 are not part of tzdata, only Etc/GMT+8 and the like.\n      // That is why fixed-offset TZ is set to that unless it is:\n      // 1. Representing offset 0 when UTC is used to maintain previous behavior and does not become GMT.\n      // 2. Unsupported by the browser:\n      //    - some do not support Etc/\n      //    - < Etc/GMT-14, > Etc/GMT+12, and 30-minute or 45-minute offsets are not part of tzdata\n      const gmtOffset = -1 * (dt.offset / 60);\n      const offsetZ = gmtOffset >= 0 ? `Etc/GMT+${gmtOffset}` : `Etc/GMT${gmtOffset}`;\n      if (dt.offset !== 0 && IANAZone.create(offsetZ).valid) {\n        z = offsetZ;\n        this.dt = dt;\n      } else {\n        // Not all fixed-offset zones like Etc/+4:30 are present in tzdata.\n        // So we have to make do. Two cases:\n        // 1. The format options tell us to show the zone. We can't do that, so the best\n        // we can do is format the date in UTC.\n        // 2. The format options don't tell us to show the zone. Then we can adjust them\n        // the time and tell the formatter to show it to us in UTC, so that the time is right\n        // and the bad zone doesn't show up.\n        z = \"UTC\";\n        if (opts.timeZoneName) {\n          this.dt = dt;\n        } else {\n          this.dt = dt.offset === 0 ? dt : DateTime.fromMillis(dt.ts + dt.offset * 60 * 1000);\n        }\n      }\n    } else if (dt.zone.type === \"system\") {\n      this.dt = dt;\n    } else {\n      this.dt = dt;\n      z = dt.zone.name;\n    }\n\n    const intlOpts = { ...this.opts };\n    intlOpts.timeZone = intlOpts.timeZone || z;\n    this.dtf = getCachedDTF(intl, intlOpts);\n  }\n\n  format() {\n    return this.dtf.format(this.dt.toJSDate());\n  }\n\n  formatToParts() {\n    return this.dtf.formatToParts(this.dt.toJSDate());\n  }\n\n  resolvedOptions() {\n    return this.dtf.resolvedOptions();\n  }\n}\n\n/**\n * @private\n */\nclass PolyRelFormatter {\n  constructor(intl, isEnglish, opts) {\n    this.opts = { style: \"long\", ...opts };\n    if (!isEnglish && hasRelative()) {\n      this.rtf = getCachedRTF(intl, opts);\n    }\n  }\n\n  format(count, unit) {\n    if (this.rtf) {\n      return this.rtf.format(count, unit);\n    } else {\n      return English.formatRelativeTime(unit, count, this.opts.numeric, this.opts.style !== \"long\");\n    }\n  }\n\n  formatToParts(count, unit) {\n    if (this.rtf) {\n      return this.rtf.formatToParts(count, unit);\n    } else {\n      return [];\n    }\n  }\n}\n\n/**\n * @private\n */\n\nexport default class Locale {\n  static fromOpts(opts) {\n    return Locale.create(opts.locale, opts.numberingSystem, opts.outputCalendar, opts.defaultToEN);\n  }\n\n  static create(locale, numberingSystem, outputCalendar, defaultToEN = false) {\n    const specifiedLocale = locale || Settings.defaultLocale;\n    // the system locale is useful for human readable strings but annoying for parsing/formatting known formats\n    const localeR = specifiedLocale || (defaultToEN ? \"en-US\" : systemLocale());\n    const numberingSystemR = numberingSystem || Settings.defaultNumberingSystem;\n    const outputCalendarR = outputCalendar || Settings.defaultOutputCalendar;\n    return new Locale(localeR, numberingSystemR, outputCalendarR, specifiedLocale);\n  }\n\n  static resetCache() {\n    sysLocaleCache = null;\n    intlDTCache = {};\n    intlNumCache = {};\n    intlRelCache = {};\n  }\n\n  static fromObject({ locale, numberingSystem, outputCalendar } = {}) {\n    return Locale.create(locale, numberingSystem, outputCalendar);\n  }\n\n  constructor(locale, numbering, outputCalendar, specifiedLocale) {\n    const [parsedLocale, parsedNumberingSystem, parsedOutputCalendar] = parseLocaleString(locale);\n\n    this.locale = parsedLocale;\n    this.numberingSystem = numbering || parsedNumberingSystem || null;\n    this.outputCalendar = outputCalendar || parsedOutputCalendar || null;\n    this.intl = intlConfigString(this.locale, this.numberingSystem, this.outputCalendar);\n\n    this.weekdaysCache = { format: {}, standalone: {} };\n    this.monthsCache = { format: {}, standalone: {} };\n    this.meridiemCache = null;\n    this.eraCache = {};\n\n    this.specifiedLocale = specifiedLocale;\n    this.fastNumbersCached = null;\n  }\n\n  get fastNumbers() {\n    if (this.fastNumbersCached == null) {\n      this.fastNumbersCached = supportsFastNumbers(this);\n    }\n\n    return this.fastNumbersCached;\n  }\n\n  listingMode() {\n    const isActuallyEn = this.isEnglish();\n    const hasNoWeirdness =\n      (this.numberingSystem === null || this.numberingSystem === \"latn\") &&\n      (this.outputCalendar === null || this.outputCalendar === \"gregory\");\n    return isActuallyEn && hasNoWeirdness ? \"en\" : \"intl\";\n  }\n\n  clone(alts) {\n    if (!alts || Object.getOwnPropertyNames(alts).length === 0) {\n      return this;\n    } else {\n      return Locale.create(\n        alts.locale || this.specifiedLocale,\n        alts.numberingSystem || this.numberingSystem,\n        alts.outputCalendar || this.outputCalendar,\n        alts.defaultToEN || false\n      );\n    }\n  }\n\n  redefaultToEN(alts = {}) {\n    return this.clone({ ...alts, defaultToEN: true });\n  }\n\n  redefaultToSystem(alts = {}) {\n    return this.clone({ ...alts, defaultToEN: false });\n  }\n\n  months(length, format = false, defaultOK = true) {\n    return listStuff(this, length, defaultOK, English.months, () => {\n      const intl = format ? { month: length, day: \"numeric\" } : { month: length },\n        formatStr = format ? \"format\" : \"standalone\";\n      if (!this.monthsCache[formatStr][length]) {\n        this.monthsCache[formatStr][length] = mapMonths((dt) => this.extract(dt, intl, \"month\"));\n      }\n      return this.monthsCache[formatStr][length];\n    });\n  }\n\n  weekdays(length, format = false, defaultOK = true) {\n    return listStuff(this, length, defaultOK, English.weekdays, () => {\n      const intl = format\n          ? { weekday: length, year: \"numeric\", month: \"long\", day: \"numeric\" }\n          : { weekday: length },\n        formatStr = format ? \"format\" : \"standalone\";\n      if (!this.weekdaysCache[formatStr][length]) {\n        this.weekdaysCache[formatStr][length] = mapWeekdays((dt) =>\n          this.extract(dt, intl, \"weekday\")\n        );\n      }\n      return this.weekdaysCache[formatStr][length];\n    });\n  }\n\n  meridiems(defaultOK = true) {\n    return listStuff(\n      this,\n      undefined,\n      defaultOK,\n      () => English.meridiems,\n      () => {\n        // In theory there could be aribitrary day periods. We're gonna assume there are exactly two\n        // for AM and PM. This is probably wrong, but it's makes parsing way easier.\n        if (!this.meridiemCache) {\n          const intl = { hour: \"numeric\", hourCycle: \"h12\" };\n          this.meridiemCache = [DateTime.utc(2016, 11, 13, 9), DateTime.utc(2016, 11, 13, 19)].map(\n            (dt) => this.extract(dt, intl, \"dayperiod\")\n          );\n        }\n\n        return this.meridiemCache;\n      }\n    );\n  }\n\n  eras(length, defaultOK = true) {\n    return listStuff(this, length, defaultOK, English.eras, () => {\n      const intl = { era: length };\n\n      // This is problematic. Different calendars are going to define eras totally differently. What I need is the minimum set of dates\n      // to definitely enumerate them.\n      if (!this.eraCache[length]) {\n        this.eraCache[length] = [DateTime.utc(-40, 1, 1), DateTime.utc(2017, 1, 1)].map((dt) =>\n          this.extract(dt, intl, \"era\")\n        );\n      }\n\n      return this.eraCache[length];\n    });\n  }\n\n  extract(dt, intlOpts, field) {\n    const df = this.dtFormatter(dt, intlOpts),\n      results = df.formatToParts(),\n      matching = results.find((m) => m.type.toLowerCase() === field);\n    return matching ? matching.value : null;\n  }\n\n  numberFormatter(opts = {}) {\n    // this forcesimple option is never used (the only caller short-circuits on it, but it seems safer to leave)\n    // (in contrast, the rest of the condition is used heavily)\n    return new PolyNumberFormatter(this.intl, opts.forceSimple || this.fastNumbers, opts);\n  }\n\n  dtFormatter(dt, intlOpts = {}) {\n    return new PolyDateFormatter(dt, this.intl, intlOpts);\n  }\n\n  relFormatter(opts = {}) {\n    return new PolyRelFormatter(this.intl, this.isEnglish(), opts);\n  }\n\n  listFormatter(opts = {}) {\n    return getCachedLF(this.intl, opts);\n  }\n\n  isEnglish() {\n    return (\n      this.locale === \"en\" ||\n      this.locale.toLowerCase() === \"en-us\" ||\n      new Intl.DateTimeFormat(this.intl).resolvedOptions().locale.startsWith(\"en-us\")\n    );\n  }\n\n  equals(other) {\n    return (\n      this.locale === other.locale &&\n      this.numberingSystem === other.numberingSystem &&\n      this.outputCalendar === other.outputCalendar\n    );\n  }\n}\n", "import { formatOffset, signedOffset } from \"../impl/util.js\";\nimport Zone from \"../zone.js\";\n\nlet singleton = null;\n\n/**\n * A zone with a fixed offset (meaning no DST)\n * @implements {Zone}\n */\nexport default class FixedOffsetZone extends Zone {\n  /**\n   * Get a singleton instance of UTC\n   * @return {FixedOffsetZone}\n   */\n  static get utcInstance() {\n    if (singleton === null) {\n      singleton = new FixedOffsetZone(0);\n    }\n    return singleton;\n  }\n\n  /**\n   * Get an instance with a specified offset\n   * @param {number} offset - The offset in minutes\n   * @return {FixedOffsetZone}\n   */\n  static instance(offset) {\n    return offset === 0 ? FixedOffsetZone.utcInstance : new FixedOffsetZone(offset);\n  }\n\n  /**\n   * Get an instance of FixedOffsetZone from a UTC offset string, like \"UTC+6\"\n   * @param {string} s - The offset string to parse\n   * @example FixedOffsetZone.parseSpecifier(\"UTC+6\")\n   * @example FixedOffsetZone.parseSpecifier(\"UTC+06\")\n   * @example FixedOffsetZone.parseSpecifier(\"UTC-6:00\")\n   * @return {FixedOffsetZone}\n   */\n  static parseSpecifier(s) {\n    if (s) {\n      const r = s.match(/^utc(?:([+-]\\d{1,2})(?::(\\d{2}))?)?$/i);\n      if (r) {\n        return new FixedOffsetZone(signedOffset(r[1], r[2]));\n      }\n    }\n    return null;\n  }\n\n  constructor(offset) {\n    super();\n    /** @private **/\n    this.fixed = offset;\n  }\n\n  /** @override **/\n  get type() {\n    return \"fixed\";\n  }\n\n  /** @override **/\n  get name() {\n    return this.fixed === 0 ? \"UTC\" : `UTC${formatOffset(this.fixed, \"narrow\")}`;\n  }\n\n  get ianaName() {\n    if (this.fixed === 0) {\n      return \"Etc/UTC\";\n    } else {\n      return `Etc/GMT${formatOffset(-this.fixed, \"narrow\")}`;\n    }\n  }\n\n  /** @override **/\n  offsetName() {\n    return this.name;\n  }\n\n  /** @override **/\n  formatOffset(ts, format) {\n    return formatOffset(this.fixed, format);\n  }\n\n  /** @override **/\n  get isUniversal() {\n    return true;\n  }\n\n  /** @override **/\n  offset() {\n    return this.fixed;\n  }\n\n  /** @override **/\n  equals(otherZone) {\n    return otherZone.type === \"fixed\" && otherZone.fixed === this.fixed;\n  }\n\n  /** @override **/\n  get isValid() {\n    return true;\n  }\n}\n", "import Zone from \"../zone.js\";\n\n/**\n * A zone that failed to parse. You should never need to instantiate this.\n * @implements {Zone}\n */\nexport default class InvalidZone extends Zone {\n  constructor(zoneName) {\n    super();\n    /**  @private */\n    this.zoneName = zoneName;\n  }\n\n  /** @override **/\n  get type() {\n    return \"invalid\";\n  }\n\n  /** @override **/\n  get name() {\n    return this.zoneName;\n  }\n\n  /** @override **/\n  get isUniversal() {\n    return false;\n  }\n\n  /** @override **/\n  offsetName() {\n    return null;\n  }\n\n  /** @override **/\n  formatOffset() {\n    return \"\";\n  }\n\n  /** @override **/\n  offset() {\n    return NaN;\n  }\n\n  /** @override **/\n  equals() {\n    return false;\n  }\n\n  /** @override **/\n  get isValid() {\n    return false;\n  }\n}\n", "/**\n * @private\n */\n\nimport Zone from \"../zone.js\";\nimport IANAZone from \"../zones/IANAZone.js\";\nimport FixedOffsetZone from \"../zones/fixedOffsetZone.js\";\nimport InvalidZone from \"../zones/invalidZone.js\";\n\nimport { isUndefined, isString, isNumber } from \"./util.js\";\nimport SystemZone from \"../zones/systemZone.js\";\n\nexport function normalizeZone(input, defaultZone) {\n  let offset;\n  if (isUndefined(input) || input === null) {\n    return defaultZone;\n  } else if (input instanceof Zone) {\n    return input;\n  } else if (isString(input)) {\n    const lowered = input.toLowerCase();\n    if (lowered === \"default\") return defaultZone;\n    else if (lowered === \"local\" || lowered === \"system\") return SystemZone.instance;\n    else if (lowered === \"utc\" || lowered === \"gmt\") return FixedOffsetZone.utcInstance;\n    else return FixedOffsetZone.parseSpecifier(lowered) || IANAZone.create(input);\n  } else if (isNumber(input)) {\n    return FixedOffsetZone.instance(input);\n  } else if (typeof input === \"object\" && input.offset && typeof input.offset === \"number\") {\n    // This is dumb, but the instanceof check above doesn't seem to really work\n    // so we're duck checking it\n    return input;\n  } else {\n    return new InvalidZone(input);\n  }\n}\n", "import SystemZone from \"./zones/systemZone.js\";\nimport IANAZone from \"./zones/IANAZone.js\";\nimport Locale from \"./impl/locale.js\";\n\nimport { normalizeZone } from \"./impl/zoneUtil.js\";\n\nlet now = () => Date.now(),\n  defaultZone = \"system\",\n  defaultLocale = null,\n  defaultNumberingSystem = null,\n  defaultOutputCalendar = null,\n  twoDigitCutoffYear = 60,\n  throwOnInvalid;\n\n/**\n * Settings contains static getters and setters that control Luxon's overall behavior. Luxon is a simple library with few options, but the ones it does have live here.\n */\nexport default class Settings {\n  /**\n   * Get the callback for returning the current timestamp.\n   * @type {function}\n   */\n  static get now() {\n    return now;\n  }\n\n  /**\n   * Set the callback for returning the current timestamp.\n   * The function should return a number, which will be interpreted as an Epoch millisecond count\n   * @type {function}\n   * @example Settings.now = () => Date.now() + 3000 // pretend it is 3 seconds in the future\n   * @example Settings.now = () => 0 // always pretend it's Jan 1, 1970 at midnight in UTC time\n   */\n  static set now(n) {\n    now = n;\n  }\n\n  /**\n   * Set the default time zone to create DateTimes in. Does not affect existing instances.\n   * Use the value \"system\" to reset this value to the system's time zone.\n   * @type {string}\n   */\n  static set defaultZone(zone) {\n    defaultZone = zone;\n  }\n\n  /**\n   * Get the default time zone object currently used to create DateTimes. Does not affect existing instances.\n   * The default value is the system's time zone (the one set on the machine that runs this code).\n   * @type {Zone}\n   */\n  static get defaultZone() {\n    return normalizeZone(defaultZone, SystemZone.instance);\n  }\n\n  /**\n   * Get the default locale to create DateTimes with. Does not affect existing instances.\n   * @type {string}\n   */\n  static get defaultLocale() {\n    return defaultLocale;\n  }\n\n  /**\n   * Set the default locale to create DateTimes with. Does not affect existing instances.\n   * @type {string}\n   */\n  static set defaultLocale(locale) {\n    defaultLocale = locale;\n  }\n\n  /**\n   * Get the default numbering system to create DateTimes with. Does not affect existing instances.\n   * @type {string}\n   */\n  static get defaultNumberingSystem() {\n    return defaultNumberingSystem;\n  }\n\n  /**\n   * Set the default numbering system to create DateTimes with. Does not affect existing instances.\n   * @type {string}\n   */\n  static set defaultNumberingSystem(numberingSystem) {\n    defaultNumberingSystem = numberingSystem;\n  }\n\n  /**\n   * Get the default output calendar to create DateTimes with. Does not affect existing instances.\n   * @type {string}\n   */\n  static get defaultOutputCalendar() {\n    return defaultOutputCalendar;\n  }\n\n  /**\n   * Set the default output calendar to create DateTimes with. Does not affect existing instances.\n   * @type {string}\n   */\n  static set defaultOutputCalendar(outputCalendar) {\n    defaultOutputCalendar = outputCalendar;\n  }\n\n  /**\n   * Get the cutoff year after which a string encoding a year as two digits is interpreted to occur in the current century.\n   * @type {number}\n   */\n  static get twoDigitCutoffYear() {\n    return twoDigitCutoffYear;\n  }\n\n  /**\n   * Set the cutoff year after which a string encoding a year as two digits is interpreted to occur in the current century.\n   * @type {number}\n   * @example Settings.twoDigitCutoffYear = 0 // cut-off year is 0, so all 'yy' are interpretted as current century\n   * @example Settings.twoDigitCutoffYear = 50 // '49' -> 1949; '50' -> 2050\n   * @example Settings.twoDigitCutoffYear = 1950 // interpretted as 50\n   * @example Settings.twoDigitCutoffYear = 2050 // ALSO interpretted as 50\n   */\n  static set twoDigitCutoffYear(cutoffYear) {\n    twoDigitCutoffYear = cutoffYear % 100;\n  }\n\n  /**\n   * Get whether Luxon will throw when it encounters invalid DateTimes, Durations, or Intervals\n   * @type {boolean}\n   */\n  static get throwOnInvalid() {\n    return throwOnInvalid;\n  }\n\n  /**\n   * Set whether Luxon will throw when it encounters invalid DateTimes, Durations, or Intervals\n   * @type {boolean}\n   */\n  static set throwOnInvalid(t) {\n    throwOnInvalid = t;\n  }\n\n  /**\n   * Reset Luxon's global caches. Should only be necessary in testing scenarios.\n   * @return {void}\n   */\n  static resetCaches() {\n    Locale.resetCache();\n    IANAZone.resetCache();\n  }\n}\n", "/*\n  This is just a junk drawer, containing anything used across multiple classes.\n  Because Luxon is small(ish), this should stay small and we won't worry about splitting\n  it up into, say, parsingUtil.js and basicUtil.js and so on. But they are divided up by feature area.\n*/\n\nimport { InvalidArgumentError } from \"../errors.js\";\nimport Settings from \"../settings.js\";\n\n/**\n * @private\n */\n\n// TYPES\n\nexport function isUndefined(o) {\n  return typeof o === \"undefined\";\n}\n\nexport function isNumber(o) {\n  return typeof o === \"number\";\n}\n\nexport function isInteger(o) {\n  return typeof o === \"number\" && o % 1 === 0;\n}\n\nexport function isString(o) {\n  return typeof o === \"string\";\n}\n\nexport function isDate(o) {\n  return Object.prototype.toString.call(o) === \"[object Date]\";\n}\n\n// CAPABILITIES\n\nexport function hasRelative() {\n  try {\n    return typeof Intl !== \"undefined\" && !!Intl.RelativeTimeFormat;\n  } catch (e) {\n    return false;\n  }\n}\n\n// OBJECTS AND ARRAYS\n\nexport function maybeArray(thing) {\n  return Array.isArray(thing) ? thing : [thing];\n}\n\nexport function bestBy(arr, by, compare) {\n  if (arr.length === 0) {\n    return undefined;\n  }\n  return arr.reduce((best, next) => {\n    const pair = [by(next), next];\n    if (!best) {\n      return pair;\n    } else if (compare(best[0], pair[0]) === best[0]) {\n      return best;\n    } else {\n      return pair;\n    }\n  }, null)[1];\n}\n\nexport function pick(obj, keys) {\n  return keys.reduce((a, k) => {\n    a[k] = obj[k];\n    return a;\n  }, {});\n}\n\nexport function hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\n// NUMBERS AND STRINGS\n\nexport function integerBetween(thing, bottom, top) {\n  return isInteger(thing) && thing >= bottom && thing <= top;\n}\n\n// x % n but takes the sign of n instead of x\nexport function floorMod(x, n) {\n  return x - n * Math.floor(x / n);\n}\n\nexport function padStart(input, n = 2) {\n  const isNeg = input < 0;\n  let padded;\n  if (isNeg) {\n    padded = \"-\" + (\"\" + -input).padStart(n, \"0\");\n  } else {\n    padded = (\"\" + input).padStart(n, \"0\");\n  }\n  return padded;\n}\n\nexport function parseInteger(string) {\n  if (isUndefined(string) || string === null || string === \"\") {\n    return undefined;\n  } else {\n    return parseInt(string, 10);\n  }\n}\n\nexport function parseFloating(string) {\n  if (isUndefined(string) || string === null || string === \"\") {\n    return undefined;\n  } else {\n    return parseFloat(string);\n  }\n}\n\nexport function parseMillis(fraction) {\n  // Return undefined (instead of 0) in these cases, where fraction is not set\n  if (isUndefined(fraction) || fraction === null || fraction === \"\") {\n    return undefined;\n  } else {\n    const f = parseFloat(\"0.\" + fraction) * 1000;\n    return Math.floor(f);\n  }\n}\n\nexport function roundTo(number, digits, towardZero = false) {\n  const factor = 10 ** digits,\n    rounder = towardZero ? Math.trunc : Math.round;\n  return rounder(number * factor) / factor;\n}\n\n// DATE BASICS\n\nexport function isLeapYear(year) {\n  return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n}\n\nexport function daysInYear(year) {\n  return isLeapYear(year) ? 366 : 365;\n}\n\nexport function daysInMonth(year, month) {\n  const modMonth = floorMod(month - 1, 12) + 1,\n    modYear = year + (month - modMonth) / 12;\n\n  if (modMonth === 2) {\n    return isLeapYear(modYear) ? 29 : 28;\n  } else {\n    return [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][modMonth - 1];\n  }\n}\n\n// covert a calendar object to a local timestamp (epoch, but with the offset baked in)\nexport function objToLocalTS(obj) {\n  let d = Date.UTC(\n    obj.year,\n    obj.month - 1,\n    obj.day,\n    obj.hour,\n    obj.minute,\n    obj.second,\n    obj.millisecond\n  );\n\n  // for legacy reasons, years between 0 and 99 are interpreted as 19XX; revert that\n  if (obj.year < 100 && obj.year >= 0) {\n    d = new Date(d);\n    d.setUTCFullYear(d.getUTCFullYear() - 1900);\n  }\n  return +d;\n}\n\nexport function weeksInWeekYear(weekYear) {\n  const p1 =\n      (weekYear +\n        Math.floor(weekYear / 4) -\n        Math.floor(weekYear / 100) +\n        Math.floor(weekYear / 400)) %\n      7,\n    last = weekYear - 1,\n    p2 = (last + Math.floor(last / 4) - Math.floor(last / 100) + Math.floor(last / 400)) % 7;\n  return p1 === 4 || p2 === 3 ? 53 : 52;\n}\n\nexport function untruncateYear(year) {\n  if (year > 99) {\n    return year;\n  } else return year > Settings.twoDigitCutoffYear ? 1900 + year : 2000 + year;\n}\n\n// PARSING\n\nexport function parseZoneInfo(ts, offsetFormat, locale, timeZone = null) {\n  const date = new Date(ts),\n    intlOpts = {\n      hourCycle: \"h23\",\n      year: \"numeric\",\n      month: \"2-digit\",\n      day: \"2-digit\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n    };\n\n  if (timeZone) {\n    intlOpts.timeZone = timeZone;\n  }\n\n  const modified = { timeZoneName: offsetFormat, ...intlOpts };\n\n  const parsed = new Intl.DateTimeFormat(locale, modified)\n    .formatToParts(date)\n    .find((m) => m.type.toLowerCase() === \"timezonename\");\n  return parsed ? parsed.value : null;\n}\n\n// signedOffset('-5', '30') -> -330\nexport function signedOffset(offHourStr, offMinuteStr) {\n  let offHour = parseInt(offHourStr, 10);\n\n  // don't || this because we want to preserve -0\n  if (Number.isNaN(offHour)) {\n    offHour = 0;\n  }\n\n  const offMin = parseInt(offMinuteStr, 10) || 0,\n    offMinSigned = offHour < 0 || Object.is(offHour, -0) ? -offMin : offMin;\n  return offHour * 60 + offMinSigned;\n}\n\n// COERCION\n\nexport function asNumber(value) {\n  const numericValue = Number(value);\n  if (typeof value === \"boolean\" || value === \"\" || Number.isNaN(numericValue))\n    throw new InvalidArgumentError(`Invalid unit value ${value}`);\n  return numericValue;\n}\n\nexport function normalizeObject(obj, normalizer) {\n  const normalized = {};\n  for (const u in obj) {\n    if (hasOwnProperty(obj, u)) {\n      const v = obj[u];\n      if (v === undefined || v === null) continue;\n      normalized[normalizer(u)] = asNumber(v);\n    }\n  }\n  return normalized;\n}\n\nexport function formatOffset(offset, format) {\n  const hours = Math.trunc(Math.abs(offset / 60)),\n    minutes = Math.trunc(Math.abs(offset % 60)),\n    sign = offset >= 0 ? \"+\" : \"-\";\n\n  switch (format) {\n    case \"short\":\n      return `${sign}${padStart(hours, 2)}:${padStart(minutes, 2)}`;\n    case \"narrow\":\n      return `${sign}${hours}${minutes > 0 ? `:${minutes}` : \"\"}`;\n    case \"techie\":\n      return `${sign}${padStart(hours, 2)}${padStart(minutes, 2)}`;\n    default:\n      throw new RangeError(`Value format ${format} is out of range for property format`);\n  }\n}\n\nexport function timeObject(obj) {\n  return pick(obj, [\"hour\", \"minute\", \"second\", \"millisecond\"]);\n}\n", "import * as Formats from \"./formats.js\";\nimport { pick } from \"./util.js\";\n\nfunction stringify(obj) {\n  return JSON.stringify(obj, Object.keys(obj).sort());\n}\n\n/**\n * @private\n */\n\nexport const monthsLong = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\",\n];\n\nexport const monthsShort = [\n  \"Jan\",\n  \"Feb\",\n  \"Mar\",\n  \"Apr\",\n  \"May\",\n  \"Jun\",\n  \"Jul\",\n  \"Aug\",\n  \"Sep\",\n  \"Oct\",\n  \"Nov\",\n  \"Dec\",\n];\n\nexport const monthsNarrow = [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"];\n\nexport function months(length) {\n  switch (length) {\n    case \"narrow\":\n      return [...monthsNarrow];\n    case \"short\":\n      return [...monthsShort];\n    case \"long\":\n      return [...monthsLong];\n    case \"numeric\":\n      return [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\"];\n    case \"2-digit\":\n      return [\"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\"];\n    default:\n      return null;\n  }\n}\n\nexport const weekdaysLong = [\n  \"Monday\",\n  \"Tuesday\",\n  \"Wednesday\",\n  \"Thursday\",\n  \"Friday\",\n  \"Saturday\",\n  \"Sunday\",\n];\n\nexport const weekdaysShort = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\n\nexport const weekdaysNarrow = [\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"];\n\nexport function weekdays(length) {\n  switch (length) {\n    case \"narrow\":\n      return [...weekdaysNarrow];\n    case \"short\":\n      return [...weekdaysShort];\n    case \"long\":\n      return [...weekdaysLong];\n    case \"numeric\":\n      return [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\"];\n    default:\n      return null;\n  }\n}\n\nexport const meridiems = [\"AM\", \"PM\"];\n\nexport const erasLong = [\"Before Christ\", \"Anno Domini\"];\n\nexport const erasShort = [\"BC\", \"AD\"];\n\nexport const erasNarrow = [\"B\", \"A\"];\n\nexport function eras(length) {\n  switch (length) {\n    case \"narrow\":\n      return [...erasNarrow];\n    case \"short\":\n      return [...erasShort];\n    case \"long\":\n      return [...erasLong];\n    default:\n      return null;\n  }\n}\n\nexport function meridiemForDateTime(dt) {\n  return meridiems[dt.hour < 12 ? 0 : 1];\n}\n\nexport function weekdayForDateTime(dt, length) {\n  return weekdays(length)[dt.weekday - 1];\n}\n\nexport function monthForDateTime(dt, length) {\n  return months(length)[dt.month - 1];\n}\n\nexport function eraForDateTime(dt, length) {\n  return eras(length)[dt.year < 0 ? 0 : 1];\n}\n\nexport function formatRelativeTime(unit, count, numeric = \"always\", narrow = false) {\n  const units = {\n    years: [\"year\", \"yr.\"],\n    quarters: [\"quarter\", \"qtr.\"],\n    months: [\"month\", \"mo.\"],\n    weeks: [\"week\", \"wk.\"],\n    days: [\"day\", \"day\", \"days\"],\n    hours: [\"hour\", \"hr.\"],\n    minutes: [\"minute\", \"min.\"],\n    seconds: [\"second\", \"sec.\"],\n  };\n\n  const lastable = [\"hours\", \"minutes\", \"seconds\"].indexOf(unit) === -1;\n\n  if (numeric === \"auto\" && lastable) {\n    const isDay = unit === \"days\";\n    switch (count) {\n      case 1:\n        return isDay ? \"tomorrow\" : `next ${units[unit][0]}`;\n      case -1:\n        return isDay ? \"yesterday\" : `last ${units[unit][0]}`;\n      case 0:\n        return isDay ? \"today\" : `this ${units[unit][0]}`;\n      default: // fall through\n    }\n  }\n\n  const isInPast = Object.is(count, -0) || count < 0,\n    fmtValue = Math.abs(count),\n    singular = fmtValue === 1,\n    lilUnits = units[unit],\n    fmtUnit = narrow\n      ? singular\n        ? lilUnits[1]\n        : lilUnits[2] || lilUnits[1]\n      : singular\n      ? units[unit][0]\n      : unit;\n  return isInPast ? `${fmtValue} ${fmtUnit} ago` : `in ${fmtValue} ${fmtUnit}`;\n}\n\nexport function formatString(knownFormat) {\n  // these all have the offsets removed because we don't have access to them\n  // without all the intl stuff this is backfilling\n  const filtered = pick(knownFormat, [\n      \"weekday\",\n      \"era\",\n      \"year\",\n      \"month\",\n      \"day\",\n      \"hour\",\n      \"minute\",\n      \"second\",\n      \"timeZoneName\",\n      \"hourCycle\",\n    ]),\n    key = stringify(filtered),\n    dateTimeHuge = \"EEEE, LLLL d, yyyy, h:mm a\";\n  switch (key) {\n    case stringify(Formats.DATE_SHORT):\n      return \"M/d/yyyy\";\n    case stringify(Formats.DATE_MED):\n      return \"LLL d, yyyy\";\n    case stringify(Formats.DATE_MED_WITH_WEEKDAY):\n      return \"EEE, LLL d, yyyy\";\n    case stringify(Formats.DATE_FULL):\n      return \"LLLL d, yyyy\";\n    case stringify(Formats.DATE_HUGE):\n      return \"EEEE, LLLL d, yyyy\";\n    case stringify(Formats.TIME_SIMPLE):\n      return \"h:mm a\";\n    case stringify(Formats.TIME_WITH_SECONDS):\n      return \"h:mm:ss a\";\n    case stringify(Formats.TIME_WITH_SHORT_OFFSET):\n      return \"h:mm a\";\n    case stringify(Formats.TIME_WITH_LONG_OFFSET):\n      return \"h:mm a\";\n    case stringify(Formats.TIME_24_SIMPLE):\n      return \"HH:mm\";\n    case stringify(Formats.TIME_24_WITH_SECONDS):\n      return \"HH:mm:ss\";\n    case stringify(Formats.TIME_24_WITH_SHORT_OFFSET):\n      return \"HH:mm\";\n    case stringify(Formats.TIME_24_WITH_LONG_OFFSET):\n      return \"HH:mm\";\n    case stringify(Formats.DATETIME_SHORT):\n      return \"M/d/yyyy, h:mm a\";\n    case stringify(Formats.DATETIME_MED):\n      return \"LLL d, yyyy, h:mm a\";\n    case stringify(Formats.DATETIME_FULL):\n      return \"LLLL d, yyyy, h:mm a\";\n    case stringify(Formats.DATETIME_HUGE):\n      return dateTimeHuge;\n    case stringify(Formats.DATETIME_SHORT_WITH_SECONDS):\n      return \"M/d/yyyy, h:mm:ss a\";\n    case stringify(Formats.DATETIME_MED_WITH_SECONDS):\n      return \"LLL d, yyyy, h:mm:ss a\";\n    case stringify(Formats.DATETIME_MED_WITH_WEEKDAY):\n      return \"EEE, d LLL yyyy, h:mm a\";\n    case stringify(Formats.DATETIME_FULL_WITH_SECONDS):\n      return \"LLLL d, yyyy, h:mm:ss a\";\n    case stringify(Formats.DATETIME_HUGE_WITH_SECONDS):\n      return \"EEEE, LLLL d, yyyy, h:mm:ss a\";\n    default:\n      return dateTimeHuge;\n  }\n}\n", "import * as English from \"./english.js\";\nimport * as Formats from \"./formats.js\";\nimport { padStart } from \"./util.js\";\n\nfunction stringifyTokens(splits, tokenToString) {\n  let s = \"\";\n  for (const token of splits) {\n    if (token.literal) {\n      s += token.val;\n    } else {\n      s += tokenToString(token.val);\n    }\n  }\n  return s;\n}\n\nconst macroTokenToFormatOpts = {\n  D: Formats.DATE_SHORT,\n  DD: Formats.DATE_MED,\n  DDD: Formats.DATE_FULL,\n  DDDD: Formats.DATE_HUGE,\n  t: Formats.TIME_SIMPLE,\n  tt: Formats.TIME_WITH_SECONDS,\n  ttt: Formats.TIME_WITH_SHORT_OFFSET,\n  tttt: Formats.TIME_WITH_LONG_OFFSET,\n  T: Formats.TIME_24_SIMPLE,\n  TT: Formats.TIME_24_WITH_SECONDS,\n  TTT: Formats.TIME_24_WITH_SHORT_OFFSET,\n  TTTT: Formats.TIME_24_WITH_LONG_OFFSET,\n  f: Formats.DATETIME_SHORT,\n  ff: Formats.DATETIME_MED,\n  fff: Formats.DATETIME_FULL,\n  ffff: Formats.DATETIME_HUGE,\n  F: Formats.DATETIME_SHORT_WITH_SECONDS,\n  FF: Formats.DATETIME_MED_WITH_SECONDS,\n  FFF: Formats.DATETIME_FULL_WITH_SECONDS,\n  FFFF: Formats.DATETIME_HUGE_WITH_SECONDS,\n};\n\n/**\n * @private\n */\n\nexport default class Formatter {\n  static create(locale, opts = {}) {\n    return new Formatter(locale, opts);\n  }\n\n  static parseFormat(fmt) {\n    let current = null,\n      currentFull = \"\",\n      bracketed = false;\n    const splits = [];\n    for (let i = 0; i < fmt.length; i++) {\n      const c = fmt.charAt(i);\n      if (c === \"'\") {\n        if (currentFull.length > 0) {\n          splits.push({ literal: bracketed, val: currentFull });\n        }\n        current = null;\n        currentFull = \"\";\n        bracketed = !bracketed;\n      } else if (bracketed) {\n        currentFull += c;\n      } else if (c === current) {\n        currentFull += c;\n      } else {\n        if (currentFull.length > 0) {\n          splits.push({ literal: false, val: currentFull });\n        }\n        currentFull = c;\n        current = c;\n      }\n    }\n\n    if (currentFull.length > 0) {\n      splits.push({ literal: bracketed, val: currentFull });\n    }\n\n    return splits;\n  }\n\n  static macroTokenToFormatOpts(token) {\n    return macroTokenToFormatOpts[token];\n  }\n\n  constructor(locale, formatOpts) {\n    this.opts = formatOpts;\n    this.loc = locale;\n    this.systemLoc = null;\n  }\n\n  formatWithSystemDefault(dt, opts) {\n    if (this.systemLoc === null) {\n      this.systemLoc = this.loc.redefaultToSystem();\n    }\n    const df = this.systemLoc.dtFormatter(dt, { ...this.opts, ...opts });\n    return df.format();\n  }\n\n  formatDateTime(dt, opts = {}) {\n    const df = this.loc.dtFormatter(dt, { ...this.opts, ...opts });\n    return df.format();\n  }\n\n  formatDateTimeParts(dt, opts = {}) {\n    const df = this.loc.dtFormatter(dt, { ...this.opts, ...opts });\n    return df.formatToParts();\n  }\n\n  formatInterval(interval, opts = {}) {\n    const df = this.loc.dtFormatter(interval.start, { ...this.opts, ...opts });\n    return df.dtf.formatRange(interval.start.toJSDate(), interval.end.toJSDate());\n  }\n\n  resolvedOptions(dt, opts = {}) {\n    const df = this.loc.dtFormatter(dt, { ...this.opts, ...opts });\n    return df.resolvedOptions();\n  }\n\n  num(n, p = 0) {\n    // we get some perf out of doing this here, annoyingly\n    if (this.opts.forceSimple) {\n      return padStart(n, p);\n    }\n\n    const opts = { ...this.opts };\n\n    if (p > 0) {\n      opts.padTo = p;\n    }\n\n    return this.loc.numberFormatter(opts).format(n);\n  }\n\n  formatDateTimeFromString(dt, fmt) {\n    const knownEnglish = this.loc.listingMode() === \"en\",\n      useDateTimeFormatter = this.loc.outputCalendar && this.loc.outputCalendar !== \"gregory\",\n      string = (opts, extract) => this.loc.extract(dt, opts, extract),\n      formatOffset = (opts) => {\n        if (dt.isOffsetFixed && dt.offset === 0 && opts.allowZ) {\n          return \"Z\";\n        }\n\n        return dt.isValid ? dt.zone.formatOffset(dt.ts, opts.format) : \"\";\n      },\n      meridiem = () =>\n        knownEnglish\n          ? English.meridiemForDateTime(dt)\n          : string({ hour: \"numeric\", hourCycle: \"h12\" }, \"dayperiod\"),\n      month = (length, standalone) =>\n        knownEnglish\n          ? English.monthForDateTime(dt, length)\n          : string(standalone ? { month: length } : { month: length, day: \"numeric\" }, \"month\"),\n      weekday = (length, standalone) =>\n        knownEnglish\n          ? English.weekdayForDateTime(dt, length)\n          : string(\n              standalone ? { weekday: length } : { weekday: length, month: \"long\", day: \"numeric\" },\n              \"weekday\"\n            ),\n      maybeMacro = (token) => {\n        const formatOpts = Formatter.macroTokenToFormatOpts(token);\n        if (formatOpts) {\n          return this.formatWithSystemDefault(dt, formatOpts);\n        } else {\n          return token;\n        }\n      },\n      era = (length) =>\n        knownEnglish ? English.eraForDateTime(dt, length) : string({ era: length }, \"era\"),\n      tokenToString = (token) => {\n        // Where possible: http://cldr.unicode.org/translation/date-time-1/date-time#TOC-Standalone-vs.-Format-Styles\n        switch (token) {\n          // ms\n          case \"S\":\n            return this.num(dt.millisecond);\n          case \"u\":\n          // falls through\n          case \"SSS\":\n            return this.num(dt.millisecond, 3);\n          // seconds\n          case \"s\":\n            return this.num(dt.second);\n          case \"ss\":\n            return this.num(dt.second, 2);\n          // fractional seconds\n          case \"uu\":\n            return this.num(Math.floor(dt.millisecond / 10), 2);\n          case \"uuu\":\n            return this.num(Math.floor(dt.millisecond / 100));\n          // minutes\n          case \"m\":\n            return this.num(dt.minute);\n          case \"mm\":\n            return this.num(dt.minute, 2);\n          // hours\n          case \"h\":\n            return this.num(dt.hour % 12 === 0 ? 12 : dt.hour % 12);\n          case \"hh\":\n            return this.num(dt.hour % 12 === 0 ? 12 : dt.hour % 12, 2);\n          case \"H\":\n            return this.num(dt.hour);\n          case \"HH\":\n            return this.num(dt.hour, 2);\n          // offset\n          case \"Z\":\n            // like +6\n            return formatOffset({ format: \"narrow\", allowZ: this.opts.allowZ });\n          case \"ZZ\":\n            // like +06:00\n            return formatOffset({ format: \"short\", allowZ: this.opts.allowZ });\n          case \"ZZZ\":\n            // like +0600\n            return formatOffset({ format: \"techie\", allowZ: this.opts.allowZ });\n          case \"ZZZZ\":\n            // like EST\n            return dt.zone.offsetName(dt.ts, { format: \"short\", locale: this.loc.locale });\n          case \"ZZZZZ\":\n            // like Eastern Standard Time\n            return dt.zone.offsetName(dt.ts, { format: \"long\", locale: this.loc.locale });\n          // zone\n          case \"z\":\n            // like America/New_York\n            return dt.zoneName;\n          // meridiems\n          case \"a\":\n            return meridiem();\n          // dates\n          case \"d\":\n            return useDateTimeFormatter ? string({ day: \"numeric\" }, \"day\") : this.num(dt.day);\n          case \"dd\":\n            return useDateTimeFormatter ? string({ day: \"2-digit\" }, \"day\") : this.num(dt.day, 2);\n          // weekdays - standalone\n          case \"c\":\n            // like 1\n            return this.num(dt.weekday);\n          case \"ccc\":\n            // like 'Tues'\n            return weekday(\"short\", true);\n          case \"cccc\":\n            // like 'Tuesday'\n            return weekday(\"long\", true);\n          case \"ccccc\":\n            // like 'T'\n            return weekday(\"narrow\", true);\n          // weekdays - format\n          case \"E\":\n            // like 1\n            return this.num(dt.weekday);\n          case \"EEE\":\n            // like 'Tues'\n            return weekday(\"short\", false);\n          case \"EEEE\":\n            // like 'Tuesday'\n            return weekday(\"long\", false);\n          case \"EEEEE\":\n            // like 'T'\n            return weekday(\"narrow\", false);\n          // months - standalone\n          case \"L\":\n            // like 1\n            return useDateTimeFormatter\n              ? string({ month: \"numeric\", day: \"numeric\" }, \"month\")\n              : this.num(dt.month);\n          case \"LL\":\n            // like 01, doesn't seem to work\n            return useDateTimeFormatter\n              ? string({ month: \"2-digit\", day: \"numeric\" }, \"month\")\n              : this.num(dt.month, 2);\n          case \"LLL\":\n            // like Jan\n            return month(\"short\", true);\n          case \"LLLL\":\n            // like January\n            return month(\"long\", true);\n          case \"LLLLL\":\n            // like J\n            return month(\"narrow\", true);\n          // months - format\n          case \"M\":\n            // like 1\n            return useDateTimeFormatter\n              ? string({ month: \"numeric\" }, \"month\")\n              : this.num(dt.month);\n          case \"MM\":\n            // like 01\n            return useDateTimeFormatter\n              ? string({ month: \"2-digit\" }, \"month\")\n              : this.num(dt.month, 2);\n          case \"MMM\":\n            // like Jan\n            return month(\"short\", false);\n          case \"MMMM\":\n            // like January\n            return month(\"long\", false);\n          case \"MMMMM\":\n            // like J\n            return month(\"narrow\", false);\n          // years\n          case \"y\":\n            // like 2014\n            return useDateTimeFormatter ? string({ year: \"numeric\" }, \"year\") : this.num(dt.year);\n          case \"yy\":\n            // like 14\n            return useDateTimeFormatter\n              ? string({ year: \"2-digit\" }, \"year\")\n              : this.num(dt.year.toString().slice(-2), 2);\n          case \"yyyy\":\n            // like 0012\n            return useDateTimeFormatter\n              ? string({ year: \"numeric\" }, \"year\")\n              : this.num(dt.year, 4);\n          case \"yyyyyy\":\n            // like 000012\n            return useDateTimeFormatter\n              ? string({ year: \"numeric\" }, \"year\")\n              : this.num(dt.year, 6);\n          // eras\n          case \"G\":\n            // like AD\n            return era(\"short\");\n          case \"GG\":\n            // like Anno Domini\n            return era(\"long\");\n          case \"GGGGG\":\n            return era(\"narrow\");\n          case \"kk\":\n            return this.num(dt.weekYear.toString().slice(-2), 2);\n          case \"kkkk\":\n            return this.num(dt.weekYear, 4);\n          case \"W\":\n            return this.num(dt.weekNumber);\n          case \"WW\":\n            return this.num(dt.weekNumber, 2);\n          case \"o\":\n            return this.num(dt.ordinal);\n          case \"ooo\":\n            return this.num(dt.ordinal, 3);\n          case \"q\":\n            // like 1\n            return this.num(dt.quarter);\n          case \"qq\":\n            // like 01\n            return this.num(dt.quarter, 2);\n          case \"X\":\n            return this.num(Math.floor(dt.ts / 1000));\n          case \"x\":\n            return this.num(dt.ts);\n          default:\n            return maybeMacro(token);\n        }\n      };\n\n    return stringifyTokens(Formatter.parseFormat(fmt), tokenToString);\n  }\n\n  formatDurationFromString(dur, fmt) {\n    const tokenToField = (token) => {\n        switch (token[0]) {\n          case \"S\":\n            return \"millisecond\";\n          case \"s\":\n            return \"second\";\n          case \"m\":\n            return \"minute\";\n          case \"h\":\n            return \"hour\";\n          case \"d\":\n            return \"day\";\n          case \"w\":\n            return \"week\";\n          case \"M\":\n            return \"month\";\n          case \"y\":\n            return \"year\";\n          default:\n            return null;\n        }\n      },\n      tokenToString = (lildur) => (token) => {\n        const mapped = tokenToField(token);\n        if (mapped) {\n          return this.num(lildur.get(mapped), token.length);\n        } else {\n          return token;\n        }\n      },\n      tokens = Formatter.parseFormat(fmt),\n      realTokens = tokens.reduce(\n        (found, { literal, val }) => (literal ? found : found.concat(val)),\n        []\n      ),\n      collapsed = dur.shiftTo(...realTokens.map(tokenToField).filter((t) => t));\n    return stringifyTokens(tokens, tokenToString(collapsed));\n  }\n}\n", "export default class Invalid {\n  constructor(reason, explanation) {\n    this.reason = reason;\n    this.explanation = explanation;\n  }\n\n  toMessage() {\n    if (this.explanation) {\n      return `${this.reason}: ${this.explanation}`;\n    } else {\n      return this.reason;\n    }\n  }\n}\n", "import {\n  untruncateYear,\n  signedOffset,\n  parseInteger,\n  parseMillis,\n  isUndefined,\n  parseFloating,\n} from \"./util.js\";\nimport * as English from \"./english.js\";\nimport FixedOffsetZone from \"../zones/fixedOffsetZone.js\";\nimport IANAZone from \"../zones/IANAZone.js\";\n\n/*\n * This file handles parsing for well-specified formats. Here's how it works:\n * Two things go into parsing: a regex to match with and an extractor to take apart the groups in the match.\n * An extractor is just a function that takes a regex match array and returns a { year: ..., month: ... } object\n * parse() does the work of executing the regex and applying the extractor. It takes multiple regex/extractor pairs to try in sequence.\n * Extractors can take a \"cursor\" representing the offset in the match to look at. This makes it easy to combine extractors.\n * combineExtractors() does the work of combining them, keeping track of the cursor through multiple extractions.\n * Some extractions are super dumb and simpleParse and fromStrings help DRY them.\n */\n\nconst ianaRegex = /[A-Za-z_+-]{1,256}(?::?\\/[A-Za-z0-9_+-]{1,256}(?:\\/[A-Za-z0-9_+-]{1,256})?)?/;\n\nfunction combineRegexes(...regexes) {\n  const full = regexes.reduce((f, r) => f + r.source, \"\");\n  return RegExp(`^${full}$`);\n}\n\nfunction combineExtractors(...extractors) {\n  return (m) =>\n    extractors\n      .reduce(\n        ([mergedVals, mergedZone, cursor], ex) => {\n          const [val, zone, next] = ex(m, cursor);\n          return [{ ...mergedVals, ...val }, zone || mergedZone, next];\n        },\n        [{}, null, 1]\n      )\n      .slice(0, 2);\n}\n\nfunction parse(s, ...patterns) {\n  if (s == null) {\n    return [null, null];\n  }\n\n  for (const [regex, extractor] of patterns) {\n    const m = regex.exec(s);\n    if (m) {\n      return extractor(m);\n    }\n  }\n  return [null, null];\n}\n\nfunction simpleParse(...keys) {\n  return (match, cursor) => {\n    const ret = {};\n    let i;\n\n    for (i = 0; i < keys.length; i++) {\n      ret[keys[i]] = parseInteger(match[cursor + i]);\n    }\n    return [ret, null, cursor + i];\n  };\n}\n\n// ISO and SQL parsing\nconst offsetRegex = /(?:(Z)|([+-]\\d\\d)(?::?(\\d\\d))?)/;\nconst isoExtendedZone = `(?:${offsetRegex.source}?(?:\\\\[(${ianaRegex.source})\\\\])?)?`;\nconst isoTimeBaseRegex = /(\\d\\d)(?::?(\\d\\d)(?::?(\\d\\d)(?:[.,](\\d{1,30}))?)?)?/;\nconst isoTimeRegex = RegExp(`${isoTimeBaseRegex.source}${isoExtendedZone}`);\nconst isoTimeExtensionRegex = RegExp(`(?:T${isoTimeRegex.source})?`);\nconst isoYmdRegex = /([+-]\\d{6}|\\d{4})(?:-?(\\d\\d)(?:-?(\\d\\d))?)?/;\nconst isoWeekRegex = /(\\d{4})-?W(\\d\\d)(?:-?(\\d))?/;\nconst isoOrdinalRegex = /(\\d{4})-?(\\d{3})/;\nconst extractISOWeekData = simpleParse(\"weekYear\", \"weekNumber\", \"weekDay\");\nconst extractISOOrdinalData = simpleParse(\"year\", \"ordinal\");\nconst sqlYmdRegex = /(\\d{4})-(\\d\\d)-(\\d\\d)/; // dumbed-down version of the ISO one\nconst sqlTimeRegex = RegExp(\n  `${isoTimeBaseRegex.source} ?(?:${offsetRegex.source}|(${ianaRegex.source}))?`\n);\nconst sqlTimeExtensionRegex = RegExp(`(?: ${sqlTimeRegex.source})?`);\n\nfunction int(match, pos, fallback) {\n  const m = match[pos];\n  return isUndefined(m) ? fallback : parseInteger(m);\n}\n\nfunction extractISOYmd(match, cursor) {\n  const item = {\n    year: int(match, cursor),\n    month: int(match, cursor + 1, 1),\n    day: int(match, cursor + 2, 1),\n  };\n\n  return [item, null, cursor + 3];\n}\n\nfunction extractISOTime(match, cursor) {\n  const item = {\n    hours: int(match, cursor, 0),\n    minutes: int(match, cursor + 1, 0),\n    seconds: int(match, cursor + 2, 0),\n    milliseconds: parseMillis(match[cursor + 3]),\n  };\n\n  return [item, null, cursor + 4];\n}\n\nfunction extractISOOffset(match, cursor) {\n  const local = !match[cursor] && !match[cursor + 1],\n    fullOffset = signedOffset(match[cursor + 1], match[cursor + 2]),\n    zone = local ? null : FixedOffsetZone.instance(fullOffset);\n  return [{}, zone, cursor + 3];\n}\n\nfunction extractIANAZone(match, cursor) {\n  const zone = match[cursor] ? IANAZone.create(match[cursor]) : null;\n  return [{}, zone, cursor + 1];\n}\n\n// ISO time parsing\n\nconst isoTimeOnly = RegExp(`^T?${isoTimeBaseRegex.source}$`);\n\n// ISO duration parsing\n\nconst isoDuration =\n  /^-?P(?:(?:(-?\\d{1,20}(?:\\.\\d{1,20})?)Y)?(?:(-?\\d{1,20}(?:\\.\\d{1,20})?)M)?(?:(-?\\d{1,20}(?:\\.\\d{1,20})?)W)?(?:(-?\\d{1,20}(?:\\.\\d{1,20})?)D)?(?:T(?:(-?\\d{1,20}(?:\\.\\d{1,20})?)H)?(?:(-?\\d{1,20}(?:\\.\\d{1,20})?)M)?(?:(-?\\d{1,20})(?:[.,](-?\\d{1,20}))?S)?)?)$/;\n\nfunction extractISODuration(match) {\n  const [s, yearStr, monthStr, weekStr, dayStr, hourStr, minuteStr, secondStr, millisecondsStr] =\n    match;\n\n  const hasNegativePrefix = s[0] === \"-\";\n  const negativeSeconds = secondStr && secondStr[0] === \"-\";\n\n  const maybeNegate = (num, force = false) =>\n    num !== undefined && (force || (num && hasNegativePrefix)) ? -num : num;\n\n  return [\n    {\n      years: maybeNegate(parseFloating(yearStr)),\n      months: maybeNegate(parseFloating(monthStr)),\n      weeks: maybeNegate(parseFloating(weekStr)),\n      days: maybeNegate(parseFloating(dayStr)),\n      hours: maybeNegate(parseFloating(hourStr)),\n      minutes: maybeNegate(parseFloating(minuteStr)),\n      seconds: maybeNegate(parseFloating(secondStr), secondStr === \"-0\"),\n      milliseconds: maybeNegate(parseMillis(millisecondsStr), negativeSeconds),\n    },\n  ];\n}\n\n// These are a little braindead. EDT *should* tell us that we're in, say, America/New_York\n// and not just that we're in -240 *right now*. But since I don't think these are used that often\n// I'm just going to ignore that\nconst obsOffsets = {\n  GMT: 0,\n  EDT: -4 * 60,\n  EST: -5 * 60,\n  CDT: -5 * 60,\n  CST: -6 * 60,\n  MDT: -6 * 60,\n  MST: -7 * 60,\n  PDT: -7 * 60,\n  PST: -8 * 60,\n};\n\nfunction fromStrings(weekdayStr, yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n  const result = {\n    year: yearStr.length === 2 ? untruncateYear(parseInteger(yearStr)) : parseInteger(yearStr),\n    month: English.monthsShort.indexOf(monthStr) + 1,\n    day: parseInteger(dayStr),\n    hour: parseInteger(hourStr),\n    minute: parseInteger(minuteStr),\n  };\n\n  if (secondStr) result.second = parseInteger(secondStr);\n  if (weekdayStr) {\n    result.weekday =\n      weekdayStr.length > 3\n        ? English.weekdaysLong.indexOf(weekdayStr) + 1\n        : English.weekdaysShort.indexOf(weekdayStr) + 1;\n  }\n\n  return result;\n}\n\n// RFC 2822/5322\nconst rfc2822 =\n  /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|(?:([+-]\\d\\d)(\\d\\d)))$/;\n\nfunction extractRFC2822(match) {\n  const [\n      ,\n      weekdayStr,\n      dayStr,\n      monthStr,\n      yearStr,\n      hourStr,\n      minuteStr,\n      secondStr,\n      obsOffset,\n      milOffset,\n      offHourStr,\n      offMinuteStr,\n    ] = match,\n    result = fromStrings(weekdayStr, yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr);\n\n  let offset;\n  if (obsOffset) {\n    offset = obsOffsets[obsOffset];\n  } else if (milOffset) {\n    offset = 0;\n  } else {\n    offset = signedOffset(offHourStr, offMinuteStr);\n  }\n\n  return [result, new FixedOffsetZone(offset)];\n}\n\nfunction preprocessRFC2822(s) {\n  // Remove comments and folding whitespace and replace multiple-spaces with a single space\n  return s\n    .replace(/\\([^()]*\\)|[\\n\\t]/g, \" \")\n    .replace(/(\\s\\s+)/g, \" \")\n    .trim();\n}\n\n// http date\n\nconst rfc1123 =\n    /^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), (\\d\\d) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) (\\d{4}) (\\d\\d):(\\d\\d):(\\d\\d) GMT$/,\n  rfc850 =\n    /^(Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sunday), (\\d\\d)-(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)-(\\d\\d) (\\d\\d):(\\d\\d):(\\d\\d) GMT$/,\n  ascii =\n    /^(Mon|Tue|Wed|Thu|Fri|Sat|Sun) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) ( \\d|\\d\\d) (\\d\\d):(\\d\\d):(\\d\\d) (\\d{4})$/;\n\nfunction extractRFC1123Or850(match) {\n  const [, weekdayStr, dayStr, monthStr, yearStr, hourStr, minuteStr, secondStr] = match,\n    result = fromStrings(weekdayStr, yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr);\n  return [result, FixedOffsetZone.utcInstance];\n}\n\nfunction extractASCII(match) {\n  const [, weekdayStr, monthStr, dayStr, hourStr, minuteStr, secondStr, yearStr] = match,\n    result = fromStrings(weekdayStr, yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr);\n  return [result, FixedOffsetZone.utcInstance];\n}\n\nconst isoYmdWithTimeExtensionRegex = combineRegexes(isoYmdRegex, isoTimeExtensionRegex);\nconst isoWeekWithTimeExtensionRegex = combineRegexes(isoWeekRegex, isoTimeExtensionRegex);\nconst isoOrdinalWithTimeExtensionRegex = combineRegexes(isoOrdinalRegex, isoTimeExtensionRegex);\nconst isoTimeCombinedRegex = combineRegexes(isoTimeRegex);\n\nconst extractISOYmdTimeAndOffset = combineExtractors(\n  extractISOYmd,\n  extractISOTime,\n  extractISOOffset,\n  extractIANAZone\n);\nconst extractISOWeekTimeAndOffset = combineExtractors(\n  extractISOWeekData,\n  extractISOTime,\n  extractISOOffset,\n  extractIANAZone\n);\nconst extractISOOrdinalDateAndTime = combineExtractors(\n  extractISOOrdinalData,\n  extractISOTime,\n  extractISOOffset,\n  extractIANAZone\n);\nconst extractISOTimeAndOffset = combineExtractors(\n  extractISOTime,\n  extractISOOffset,\n  extractIANAZone\n);\n\n/*\n * @private\n */\n\nexport function parseISODate(s) {\n  return parse(\n    s,\n    [isoYmdWithTimeExtensionRegex, extractISOYmdTimeAndOffset],\n    [isoWeekWithTimeExtensionRegex, extractISOWeekTimeAndOffset],\n    [isoOrdinalWithTimeExtensionRegex, extractISOOrdinalDateAndTime],\n    [isoTimeCombinedRegex, extractISOTimeAndOffset]\n  );\n}\n\nexport function parseRFC2822Date(s) {\n  return parse(preprocessRFC2822(s), [rfc2822, extractRFC2822]);\n}\n\nexport function parseHTTPDate(s) {\n  return parse(\n    s,\n    [rfc1123, extractRFC1123Or850],\n    [rfc850, extractRFC1123Or850],\n    [ascii, extractASCII]\n  );\n}\n\nexport function parseISODuration(s) {\n  return parse(s, [isoDuration, extractISODuration]);\n}\n\nconst extractISOTimeOnly = combineExtractors(extractISOTime);\n\nexport function parseISOTimeOnly(s) {\n  return parse(s, [isoTimeOnly, extractISOTimeOnly]);\n}\n\nconst sqlYmdWithTimeExtensionRegex = combineRegexes(sqlYmdRegex, sqlTimeExtensionRegex);\nconst sqlTimeCombinedRegex = combineRegexes(sqlTimeRegex);\n\nconst extractISOTimeOffsetAndIANAZone = combineExtractors(\n  extractISOTime,\n  extractISOOffset,\n  extractIANAZone\n);\n\nexport function parseSQL(s) {\n  return parse(\n    s,\n    [sqlYmdWithTimeExtensionRegex, extractISOYmdTimeAndOffset],\n    [sqlTimeCombinedRegex, extractISOTimeOffsetAndIANAZone]\n  );\n}\n", "import { InvalidArgumentError, InvalidDurationError, InvalidUnitError } from \"./errors.js\";\nimport Formatter from \"./impl/formatter.js\";\nimport Invalid from \"./impl/invalid.js\";\nimport Locale from \"./impl/locale.js\";\nimport { parseISODuration, parseISOTimeOnly } from \"./impl/regexParser.js\";\nimport {\n  asNumber,\n  hasOwnProperty,\n  isNumber,\n  isUndefined,\n  normalizeObject,\n  roundTo,\n} from \"./impl/util.js\";\nimport Settings from \"./settings.js\";\n\nconst INVALID = \"Invalid Duration\";\n\n// unit conversion constants\nexport const lowOrderMatrix = {\n    weeks: {\n      days: 7,\n      hours: 7 * 24,\n      minutes: 7 * 24 * 60,\n      seconds: 7 * 24 * 60 * 60,\n      milliseconds: 7 * 24 * 60 * 60 * 1000,\n    },\n    days: {\n      hours: 24,\n      minutes: 24 * 60,\n      seconds: 24 * 60 * 60,\n      milliseconds: 24 * 60 * 60 * 1000,\n    },\n    hours: { minutes: 60, seconds: 60 * 60, milliseconds: 60 * 60 * 1000 },\n    minutes: { seconds: 60, milliseconds: 60 * 1000 },\n    seconds: { milliseconds: 1000 },\n  },\n  casualMatrix = {\n    years: {\n      quarters: 4,\n      months: 12,\n      weeks: 52,\n      days: 365,\n      hours: 365 * 24,\n      minutes: 365 * 24 * 60,\n      seconds: 365 * 24 * 60 * 60,\n      milliseconds: 365 * 24 * 60 * 60 * 1000,\n    },\n    quarters: {\n      months: 3,\n      weeks: 13,\n      days: 91,\n      hours: 91 * 24,\n      minutes: 91 * 24 * 60,\n      seconds: 91 * 24 * 60 * 60,\n      milliseconds: 91 * 24 * 60 * 60 * 1000,\n    },\n    months: {\n      weeks: 4,\n      days: 30,\n      hours: 30 * 24,\n      minutes: 30 * 24 * 60,\n      seconds: 30 * 24 * 60 * 60,\n      milliseconds: 30 * 24 * 60 * 60 * 1000,\n    },\n\n    ...lowOrderMatrix,\n  },\n  daysInYearAccurate = 146097.0 / 400,\n  daysInMonthAccurate = 146097.0 / 4800,\n  accurateMatrix = {\n    years: {\n      quarters: 4,\n      months: 12,\n      weeks: daysInYearAccurate / 7,\n      days: daysInYearAccurate,\n      hours: daysInYearAccurate * 24,\n      minutes: daysInYearAccurate * 24 * 60,\n      seconds: daysInYearAccurate * 24 * 60 * 60,\n      milliseconds: daysInYearAccurate * 24 * 60 * 60 * 1000,\n    },\n    quarters: {\n      months: 3,\n      weeks: daysInYearAccurate / 28,\n      days: daysInYearAccurate / 4,\n      hours: (daysInYearAccurate * 24) / 4,\n      minutes: (daysInYearAccurate * 24 * 60) / 4,\n      seconds: (daysInYearAccurate * 24 * 60 * 60) / 4,\n      milliseconds: (daysInYearAccurate * 24 * 60 * 60 * 1000) / 4,\n    },\n    months: {\n      weeks: daysInMonthAccurate / 7,\n      days: daysInMonthAccurate,\n      hours: daysInMonthAccurate * 24,\n      minutes: daysInMonthAccurate * 24 * 60,\n      seconds: daysInMonthAccurate * 24 * 60 * 60,\n      milliseconds: daysInMonthAccurate * 24 * 60 * 60 * 1000,\n    },\n    ...lowOrderMatrix,\n  };\n\n// units ordered by size\nconst orderedUnits = [\n  \"years\",\n  \"quarters\",\n  \"months\",\n  \"weeks\",\n  \"days\",\n  \"hours\",\n  \"minutes\",\n  \"seconds\",\n  \"milliseconds\",\n];\n\nconst reverseUnits = orderedUnits.slice(0).reverse();\n\n// clone really means \"create another instance just like this one, but with these changes\"\nfunction clone(dur, alts, clear = false) {\n  // deep merge for vals\n  const conf = {\n    values: clear ? alts.values : { ...dur.values, ...(alts.values || {}) },\n    loc: dur.loc.clone(alts.loc),\n    conversionAccuracy: alts.conversionAccuracy || dur.conversionAccuracy,\n    matrix: alts.matrix || dur.matrix,\n  };\n  return new Duration(conf);\n}\n\nfunction antiTrunc(n) {\n  return n < 0 ? Math.floor(n) : Math.ceil(n);\n}\n\n// NB: mutates parameters\nfunction convert(matrix, fromMap, fromUnit, toMap, toUnit) {\n  const conv = matrix[toUnit][fromUnit],\n    raw = fromMap[fromUnit] / conv,\n    sameSign = Math.sign(raw) === Math.sign(toMap[toUnit]),\n    // ok, so this is wild, but see the matrix in the tests\n    added =\n      !sameSign && toMap[toUnit] !== 0 && Math.abs(raw) <= 1 ? antiTrunc(raw) : Math.trunc(raw);\n  toMap[toUnit] += added;\n  fromMap[fromUnit] -= added * conv;\n}\n\n// NB: mutates parameters\nfunction normalizeValues(matrix, vals) {\n  reverseUnits.reduce((previous, current) => {\n    if (!isUndefined(vals[current])) {\n      if (previous) {\n        convert(matrix, vals, previous, vals, current);\n      }\n      return current;\n    } else {\n      return previous;\n    }\n  }, null);\n}\n\n// Remove all properties with a value of 0 from an object\nfunction removeZeroes(vals) {\n  const newVals = {};\n  for (const [key, value] of Object.entries(vals)) {\n    if (value !== 0) {\n      newVals[key] = value;\n    }\n  }\n  return newVals;\n}\n\n/**\n * A Duration object represents a period of time, like \"2 months\" or \"1 day, 1 hour\". Conceptually, it's just a map of units to their quantities, accompanied by some additional configuration and methods for creating, parsing, interrogating, transforming, and formatting them. They can be used on their own or in conjunction with other Luxon types; for example, you can use {@link DateTime#plus} to add a Duration object to a DateTime, producing another DateTime.\n *\n * Here is a brief overview of commonly used methods and getters in Duration:\n *\n * * **Creation** To create a Duration, use {@link Duration.fromMillis}, {@link Duration.fromObject}, or {@link Duration.fromISO}.\n * * **Unit values** See the {@link Duration#years}, {@link Duration#months}, {@link Duration#weeks}, {@link Duration#days}, {@link Duration#hours}, {@link Duration#minutes}, {@link Duration#seconds}, {@link Duration#milliseconds} accessors.\n * * **Configuration** See  {@link Duration#locale} and {@link Duration#numberingSystem} accessors.\n * * **Transformation** To create new Durations out of old ones use {@link Duration#plus}, {@link Duration#minus}, {@link Duration#normalize}, {@link Duration#set}, {@link Duration#reconfigure}, {@link Duration#shiftTo}, and {@link Duration#negate}.\n * * **Output** To convert the Duration into other representations, see {@link Duration#as}, {@link Duration#toISO}, {@link Duration#toFormat}, and {@link Duration#toJSON}\n *\n * There's are more methods documented below. In addition, for more information on subtler topics like internationalization and validity, see the external documentation.\n */\nexport default class Duration {\n  /**\n   * @private\n   */\n  constructor(config) {\n    const accurate = config.conversionAccuracy === \"longterm\" || false;\n    let matrix = accurate ? accurateMatrix : casualMatrix;\n\n    if (config.matrix) {\n      matrix = config.matrix;\n    }\n\n    /**\n     * @access private\n     */\n    this.values = config.values;\n    /**\n     * @access private\n     */\n    this.loc = config.loc || Locale.create();\n    /**\n     * @access private\n     */\n    this.conversionAccuracy = accurate ? \"longterm\" : \"casual\";\n    /**\n     * @access private\n     */\n    this.invalid = config.invalid || null;\n    /**\n     * @access private\n     */\n    this.matrix = matrix;\n    /**\n     * @access private\n     */\n    this.isLuxonDuration = true;\n  }\n\n  /**\n   * Create Duration from a number of milliseconds.\n   * @param {number} count of milliseconds\n   * @param {Object} opts - options for parsing\n   * @param {string} [opts.locale='en-US'] - the locale to use\n   * @param {string} opts.numberingSystem - the numbering system to use\n   * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use\n   * @return {Duration}\n   */\n  static fromMillis(count, opts) {\n    return Duration.fromObject({ milliseconds: count }, opts);\n  }\n\n  /**\n   * Create a Duration from a JavaScript object with keys like 'years' and 'hours'.\n   * If this object is empty then a zero milliseconds duration is returned.\n   * @param {Object} obj - the object to create the DateTime from\n   * @param {number} obj.years\n   * @param {number} obj.quarters\n   * @param {number} obj.months\n   * @param {number} obj.weeks\n   * @param {number} obj.days\n   * @param {number} obj.hours\n   * @param {number} obj.minutes\n   * @param {number} obj.seconds\n   * @param {number} obj.milliseconds\n   * @param {Object} [opts=[]] - options for creating this Duration\n   * @param {string} [opts.locale='en-US'] - the locale to use\n   * @param {string} opts.numberingSystem - the numbering system to use\n   * @param {string} [opts.conversionAccuracy='casual'] - the preset conversion system to use\n   * @param {string} [opts.matrix=Object] - the custom conversion system to use\n   * @return {Duration}\n   */\n  static fromObject(obj, opts = {}) {\n    if (obj == null || typeof obj !== \"object\") {\n      throw new InvalidArgumentError(\n        `Duration.fromObject: argument expected to be an object, got ${\n          obj === null ? \"null\" : typeof obj\n        }`\n      );\n    }\n\n    return new Duration({\n      values: normalizeObject(obj, Duration.normalizeUnit),\n      loc: Locale.fromObject(opts),\n      conversionAccuracy: opts.conversionAccuracy,\n      matrix: opts.matrix,\n    });\n  }\n\n  /**\n   * Create a Duration from DurationLike.\n   *\n   * @param {Object | number | Duration} durationLike\n   * One of:\n   * - object with keys like 'years' and 'hours'.\n   * - number representing milliseconds\n   * - Duration instance\n   * @return {Duration}\n   */\n  static fromDurationLike(durationLike) {\n    if (isNumber(durationLike)) {\n      return Duration.fromMillis(durationLike);\n    } else if (Duration.isDuration(durationLike)) {\n      return durationLike;\n    } else if (typeof durationLike === \"object\") {\n      return Duration.fromObject(durationLike);\n    } else {\n      throw new InvalidArgumentError(\n        `Unknown duration argument ${durationLike} of type ${typeof durationLike}`\n      );\n    }\n  }\n\n  /**\n   * Create a Duration from an ISO 8601 duration string.\n   * @param {string} text - text to parse\n   * @param {Object} opts - options for parsing\n   * @param {string} [opts.locale='en-US'] - the locale to use\n   * @param {string} opts.numberingSystem - the numbering system to use\n   * @param {string} [opts.conversionAccuracy='casual'] - the preset conversion system to use\n   * @param {string} [opts.matrix=Object] - the preset conversion system to use\n   * @see https://en.wikipedia.org/wiki/ISO_8601#Durations\n   * @example Duration.fromISO('P3Y6M1W4DT12H30M5S').toObject() //=> { years: 3, months: 6, weeks: 1, days: 4, hours: 12, minutes: 30, seconds: 5 }\n   * @example Duration.fromISO('PT23H').toObject() //=> { hours: 23 }\n   * @example Duration.fromISO('P5Y3M').toObject() //=> { years: 5, months: 3 }\n   * @return {Duration}\n   */\n  static fromISO(text, opts) {\n    const [parsed] = parseISODuration(text);\n    if (parsed) {\n      return Duration.fromObject(parsed, opts);\n    } else {\n      return Duration.invalid(\"unparsable\", `the input \"${text}\" can't be parsed as ISO 8601`);\n    }\n  }\n\n  /**\n   * Create a Duration from an ISO 8601 time string.\n   * @param {string} text - text to parse\n   * @param {Object} opts - options for parsing\n   * @param {string} [opts.locale='en-US'] - the locale to use\n   * @param {string} opts.numberingSystem - the numbering system to use\n   * @param {string} [opts.conversionAccuracy='casual'] - the preset conversion system to use\n   * @param {string} [opts.matrix=Object] - the conversion system to use\n   * @see https://en.wikipedia.org/wiki/ISO_8601#Times\n   * @example Duration.fromISOTime('11:22:33.444').toObject() //=> { hours: 11, minutes: 22, seconds: 33, milliseconds: 444 }\n   * @example Duration.fromISOTime('11:00').toObject() //=> { hours: 11, minutes: 0, seconds: 0 }\n   * @example Duration.fromISOTime('T11:00').toObject() //=> { hours: 11, minutes: 0, seconds: 0 }\n   * @example Duration.fromISOTime('1100').toObject() //=> { hours: 11, minutes: 0, seconds: 0 }\n   * @example Duration.fromISOTime('T1100').toObject() //=> { hours: 11, minutes: 0, seconds: 0 }\n   * @return {Duration}\n   */\n  static fromISOTime(text, opts) {\n    const [parsed] = parseISOTimeOnly(text);\n    if (parsed) {\n      return Duration.fromObject(parsed, opts);\n    } else {\n      return Duration.invalid(\"unparsable\", `the input \"${text}\" can't be parsed as ISO 8601`);\n    }\n  }\n\n  /**\n   * Create an invalid Duration.\n   * @param {string} reason - simple string of why this datetime is invalid. Should not contain parameters or anything else data-dependent\n   * @param {string} [explanation=null] - longer explanation, may include parameters and other useful debugging information\n   * @return {Duration}\n   */\n  static invalid(reason, explanation = null) {\n    if (!reason) {\n      throw new InvalidArgumentError(\"need to specify a reason the Duration is invalid\");\n    }\n\n    const invalid = reason instanceof Invalid ? reason : new Invalid(reason, explanation);\n\n    if (Settings.throwOnInvalid) {\n      throw new InvalidDurationError(invalid);\n    } else {\n      return new Duration({ invalid });\n    }\n  }\n\n  /**\n   * @private\n   */\n  static normalizeUnit(unit) {\n    const normalized = {\n      year: \"years\",\n      years: \"years\",\n      quarter: \"quarters\",\n      quarters: \"quarters\",\n      month: \"months\",\n      months: \"months\",\n      week: \"weeks\",\n      weeks: \"weeks\",\n      day: \"days\",\n      days: \"days\",\n      hour: \"hours\",\n      hours: \"hours\",\n      minute: \"minutes\",\n      minutes: \"minutes\",\n      second: \"seconds\",\n      seconds: \"seconds\",\n      millisecond: \"milliseconds\",\n      milliseconds: \"milliseconds\",\n    }[unit ? unit.toLowerCase() : unit];\n\n    if (!normalized) throw new InvalidUnitError(unit);\n\n    return normalized;\n  }\n\n  /**\n   * Check if an object is a Duration. Works across context boundaries\n   * @param {object} o\n   * @return {boolean}\n   */\n  static isDuration(o) {\n    return (o && o.isLuxonDuration) || false;\n  }\n\n  /**\n   * Get  the locale of a Duration, such 'en-GB'\n   * @type {string}\n   */\n  get locale() {\n    return this.isValid ? this.loc.locale : null;\n  }\n\n  /**\n   * Get the numbering system of a Duration, such 'beng'. The numbering system is used when formatting the Duration\n   *\n   * @type {string}\n   */\n  get numberingSystem() {\n    return this.isValid ? this.loc.numberingSystem : null;\n  }\n\n  /**\n   * Returns a string representation of this Duration formatted according to the specified format string. You may use these tokens:\n   * * `S` for milliseconds\n   * * `s` for seconds\n   * * `m` for minutes\n   * * `h` for hours\n   * * `d` for days\n   * * `w` for weeks\n   * * `M` for months\n   * * `y` for years\n   * Notes:\n   * * Add padding by repeating the token, e.g. \"yy\" pads the years to two digits, \"hhhh\" pads the hours out to four digits\n   * * Tokens can be escaped by wrapping with single quotes.\n   * * The duration will be converted to the set of units in the format string using {@link Duration#shiftTo} and the Durations's conversion accuracy setting.\n   * @param {string} fmt - the format string\n   * @param {Object} opts - options\n   * @param {boolean} [opts.floor=true] - floor numerical values\n   * @example Duration.fromObject({ years: 1, days: 6, seconds: 2 }).toFormat(\"y d s\") //=> \"1 6 2\"\n   * @example Duration.fromObject({ years: 1, days: 6, seconds: 2 }).toFormat(\"yy dd sss\") //=> \"01 06 002\"\n   * @example Duration.fromObject({ years: 1, days: 6, seconds: 2 }).toFormat(\"M S\") //=> \"12 518402000\"\n   * @return {string}\n   */\n  toFormat(fmt, opts = {}) {\n    // reverse-compat since 1.2; we always round down now, never up, and we do it by default\n    const fmtOpts = {\n      ...opts,\n      floor: opts.round !== false && opts.floor !== false,\n    };\n    return this.isValid\n      ? Formatter.create(this.loc, fmtOpts).formatDurationFromString(this, fmt)\n      : INVALID;\n  }\n\n  /**\n   * Returns a string representation of a Duration with all units included.\n   * To modify its behavior use the `listStyle` and any Intl.NumberFormat option, though `unitDisplay` is especially relevant.\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat\n   * @param opts - On option object to override the formatting. Accepts the same keys as the options parameter of the native `Int.NumberFormat` constructor, as well as `listStyle`.\n   * @example\n   * ```js\n   * var dur = Duration.fromObject({ days: 1, hours: 5, minutes: 6 })\n   * dur.toHuman() //=> '1 day, 5 hours, 6 minutes'\n   * dur.toHuman({ listStyle: \"long\" }) //=> '1 day, 5 hours, and 6 minutes'\n   * dur.toHuman({ unitDisplay: \"short\" }) //=> '1 day, 5 hr, 6 min'\n   * ```\n   */\n  toHuman(opts = {}) {\n    const l = orderedUnits\n      .map((unit) => {\n        const val = this.values[unit];\n        if (isUndefined(val)) {\n          return null;\n        }\n        return this.loc\n          .numberFormatter({ style: \"unit\", unitDisplay: \"long\", ...opts, unit: unit.slice(0, -1) })\n          .format(val);\n      })\n      .filter((n) => n);\n\n    return this.loc\n      .listFormatter({ type: \"conjunction\", style: opts.listStyle || \"narrow\", ...opts })\n      .format(l);\n  }\n\n  /**\n   * Returns a JavaScript object with this Duration's values.\n   * @example Duration.fromObject({ years: 1, days: 6, seconds: 2 }).toObject() //=> { years: 1, days: 6, seconds: 2 }\n   * @return {Object}\n   */\n  toObject() {\n    if (!this.isValid) return {};\n    return { ...this.values };\n  }\n\n  /**\n   * Returns an ISO 8601-compliant string representation of this Duration.\n   * @see https://en.wikipedia.org/wiki/ISO_8601#Durations\n   * @example Duration.fromObject({ years: 3, seconds: 45 }).toISO() //=> 'P3YT45S'\n   * @example Duration.fromObject({ months: 4, seconds: 45 }).toISO() //=> 'P4MT45S'\n   * @example Duration.fromObject({ months: 5 }).toISO() //=> 'P5M'\n   * @example Duration.fromObject({ minutes: 5 }).toISO() //=> 'PT5M'\n   * @example Duration.fromObject({ milliseconds: 6 }).toISO() //=> 'PT0.006S'\n   * @return {string}\n   */\n  toISO() {\n    // we could use the formatter, but this is an easier way to get the minimum string\n    if (!this.isValid) return null;\n\n    let s = \"P\";\n    if (this.years !== 0) s += this.years + \"Y\";\n    if (this.months !== 0 || this.quarters !== 0) s += this.months + this.quarters * 3 + \"M\";\n    if (this.weeks !== 0) s += this.weeks + \"W\";\n    if (this.days !== 0) s += this.days + \"D\";\n    if (this.hours !== 0 || this.minutes !== 0 || this.seconds !== 0 || this.milliseconds !== 0)\n      s += \"T\";\n    if (this.hours !== 0) s += this.hours + \"H\";\n    if (this.minutes !== 0) s += this.minutes + \"M\";\n    if (this.seconds !== 0 || this.milliseconds !== 0)\n      // this will handle \"floating point madness\" by removing extra decimal places\n      // https://stackoverflow.com/questions/588004/is-floating-point-math-broken\n      s += roundTo(this.seconds + this.milliseconds / 1000, 3) + \"S\";\n    if (s === \"P\") s += \"T0S\";\n    return s;\n  }\n\n  /**\n   * Returns an ISO 8601-compliant string representation of this Duration, formatted as a time of day.\n   * Note that this will return null if the duration is invalid, negative, or equal to or greater than 24 hours.\n   * @see https://en.wikipedia.org/wiki/ISO_8601#Times\n   * @param {Object} opts - options\n   * @param {boolean} [opts.suppressMilliseconds=false] - exclude milliseconds from the format if they're 0\n   * @param {boolean} [opts.suppressSeconds=false] - exclude seconds from the format if they're 0\n   * @param {boolean} [opts.includePrefix=false] - include the `T` prefix\n   * @param {string} [opts.format='extended'] - choose between the basic and extended format\n   * @example Duration.fromObject({ hours: 11 }).toISOTime() //=> '11:00:00.000'\n   * @example Duration.fromObject({ hours: 11 }).toISOTime({ suppressMilliseconds: true }) //=> '11:00:00'\n   * @example Duration.fromObject({ hours: 11 }).toISOTime({ suppressSeconds: true }) //=> '11:00'\n   * @example Duration.fromObject({ hours: 11 }).toISOTime({ includePrefix: true }) //=> 'T11:00:00.000'\n   * @example Duration.fromObject({ hours: 11 }).toISOTime({ format: 'basic' }) //=> '110000.000'\n   * @return {string}\n   */\n  toISOTime(opts = {}) {\n    if (!this.isValid) return null;\n\n    const millis = this.toMillis();\n    if (millis < 0 || millis >= 86400000) return null;\n\n    opts = {\n      suppressMilliseconds: false,\n      suppressSeconds: false,\n      includePrefix: false,\n      format: \"extended\",\n      ...opts,\n    };\n\n    const value = this.shiftTo(\"hours\", \"minutes\", \"seconds\", \"milliseconds\");\n\n    let fmt = opts.format === \"basic\" ? \"hhmm\" : \"hh:mm\";\n\n    if (!opts.suppressSeconds || value.seconds !== 0 || value.milliseconds !== 0) {\n      fmt += opts.format === \"basic\" ? \"ss\" : \":ss\";\n      if (!opts.suppressMilliseconds || value.milliseconds !== 0) {\n        fmt += \".SSS\";\n      }\n    }\n\n    let str = value.toFormat(fmt);\n\n    if (opts.includePrefix) {\n      str = \"T\" + str;\n    }\n\n    return str;\n  }\n\n  /**\n   * Returns an ISO 8601 representation of this Duration appropriate for use in JSON.\n   * @return {string}\n   */\n  toJSON() {\n    return this.toISO();\n  }\n\n  /**\n   * Returns an ISO 8601 representation of this Duration appropriate for use in debugging.\n   * @return {string}\n   */\n  toString() {\n    return this.toISO();\n  }\n\n  /**\n   * Returns an milliseconds value of this Duration.\n   * @return {number}\n   */\n  toMillis() {\n    return this.as(\"milliseconds\");\n  }\n\n  /**\n   * Returns an milliseconds value of this Duration. Alias of {@link toMillis}\n   * @return {number}\n   */\n  valueOf() {\n    return this.toMillis();\n  }\n\n  /**\n   * Make this Duration longer by the specified amount. Return a newly-constructed Duration.\n   * @param {Duration|Object|number} duration - The amount to add. Either a Luxon Duration, a number of milliseconds, the object argument to Duration.fromObject()\n   * @return {Duration}\n   */\n  plus(duration) {\n    if (!this.isValid) return this;\n\n    const dur = Duration.fromDurationLike(duration),\n      result = {};\n\n    for (const k of orderedUnits) {\n      if (hasOwnProperty(dur.values, k) || hasOwnProperty(this.values, k)) {\n        result[k] = dur.get(k) + this.get(k);\n      }\n    }\n\n    return clone(this, { values: result }, true);\n  }\n\n  /**\n   * Make this Duration shorter by the specified amount. Return a newly-constructed Duration.\n   * @param {Duration|Object|number} duration - The amount to subtract. Either a Luxon Duration, a number of milliseconds, the object argument to Duration.fromObject()\n   * @return {Duration}\n   */\n  minus(duration) {\n    if (!this.isValid) return this;\n\n    const dur = Duration.fromDurationLike(duration);\n    return this.plus(dur.negate());\n  }\n\n  /**\n   * Scale this Duration by the specified amount. Return a newly-constructed Duration.\n   * @param {function} fn - The function to apply to each unit. Arity is 1 or 2: the value of the unit and, optionally, the unit name. Must return a number.\n   * @example Duration.fromObject({ hours: 1, minutes: 30 }).mapUnits(x => x * 2) //=> { hours: 2, minutes: 60 }\n   * @example Duration.fromObject({ hours: 1, minutes: 30 }).mapUnits((x, u) => u === \"hours\" ? x * 2 : x) //=> { hours: 2, minutes: 30 }\n   * @return {Duration}\n   */\n  mapUnits(fn) {\n    if (!this.isValid) return this;\n    const result = {};\n    for (const k of Object.keys(this.values)) {\n      result[k] = asNumber(fn(this.values[k], k));\n    }\n    return clone(this, { values: result }, true);\n  }\n\n  /**\n   * Get the value of unit.\n   * @param {string} unit - a unit such as 'minute' or 'day'\n   * @example Duration.fromObject({years: 2, days: 3}).get('years') //=> 2\n   * @example Duration.fromObject({years: 2, days: 3}).get('months') //=> 0\n   * @example Duration.fromObject({years: 2, days: 3}).get('days') //=> 3\n   * @return {number}\n   */\n  get(unit) {\n    return this[Duration.normalizeUnit(unit)];\n  }\n\n  /**\n   * \"Set\" the values of specified units. Return a newly-constructed Duration.\n   * @param {Object} values - a mapping of units to numbers\n   * @example dur.set({ years: 2017 })\n   * @example dur.set({ hours: 8, minutes: 30 })\n   * @return {Duration}\n   */\n  set(values) {\n    if (!this.isValid) return this;\n\n    const mixed = { ...this.values, ...normalizeObject(values, Duration.normalizeUnit) };\n    return clone(this, { values: mixed });\n  }\n\n  /**\n   * \"Set\" the locale and/or numberingSystem.  Returns a newly-constructed Duration.\n   * @example dur.reconfigure({ locale: 'en-GB' })\n   * @return {Duration}\n   */\n  reconfigure({ locale, numberingSystem, conversionAccuracy, matrix } = {}) {\n    const loc = this.loc.clone({ locale, numberingSystem });\n    const opts = { loc, matrix, conversionAccuracy };\n    return clone(this, opts);\n  }\n\n  /**\n   * Return the length of the duration in the specified unit.\n   * @param {string} unit - a unit such as 'minutes' or 'days'\n   * @example Duration.fromObject({years: 1}).as('days') //=> 365\n   * @example Duration.fromObject({years: 1}).as('months') //=> 12\n   * @example Duration.fromObject({hours: 60}).as('days') //=> 2.5\n   * @return {number}\n   */\n  as(unit) {\n    return this.isValid ? this.shiftTo(unit).get(unit) : NaN;\n  }\n\n  /**\n   * Reduce this Duration to its canonical representation in its current units.\n   * @example Duration.fromObject({ years: 2, days: 5000 }).normalize().toObject() //=> { years: 15, days: 255 }\n   * @example Duration.fromObject({ hours: 12, minutes: -45 }).normalize().toObject() //=> { hours: 11, minutes: 15 }\n   * @return {Duration}\n   */\n  normalize() {\n    if (!this.isValid) return this;\n    const vals = this.toObject();\n    normalizeValues(this.matrix, vals);\n    return clone(this, { values: vals }, true);\n  }\n\n  /**\n   * Rescale units to its largest representation\n   * @example Duration.fromObject({ milliseconds: 90000 }).rescale().toObject() //=> { minutes: 1, seconds: 30 }\n   * @return {Duration}\n   */\n  rescale() {\n    if (!this.isValid) return this;\n    const vals = removeZeroes(this.normalize().shiftToAll().toObject());\n    return clone(this, { values: vals }, true);\n  }\n\n  /**\n   * Convert this Duration into its representation in a different set of units.\n   * @example Duration.fromObject({ hours: 1, seconds: 30 }).shiftTo('minutes', 'milliseconds').toObject() //=> { minutes: 60, milliseconds: 30000 }\n   * @return {Duration}\n   */\n  shiftTo(...units) {\n    if (!this.isValid) return this;\n\n    if (units.length === 0) {\n      return this;\n    }\n\n    units = units.map((u) => Duration.normalizeUnit(u));\n\n    const built = {},\n      accumulated = {},\n      vals = this.toObject();\n    let lastUnit;\n\n    for (const k of orderedUnits) {\n      if (units.indexOf(k) >= 0) {\n        lastUnit = k;\n\n        let own = 0;\n\n        // anything we haven't boiled down yet should get boiled to this unit\n        for (const ak in accumulated) {\n          own += this.matrix[ak][k] * accumulated[ak];\n          accumulated[ak] = 0;\n        }\n\n        // plus anything that's already in this unit\n        if (isNumber(vals[k])) {\n          own += vals[k];\n        }\n\n        const i = Math.trunc(own);\n        built[k] = i;\n        accumulated[k] = (own * 1000 - i * 1000) / 1000;\n\n        // plus anything further down the chain that should be rolled up in to this\n        for (const down in vals) {\n          if (orderedUnits.indexOf(down) > orderedUnits.indexOf(k)) {\n            convert(this.matrix, vals, down, built, k);\n          }\n        }\n        // otherwise, keep it in the wings to boil it later\n      } else if (isNumber(vals[k])) {\n        accumulated[k] = vals[k];\n      }\n    }\n\n    // anything leftover becomes the decimal for the last unit\n    // lastUnit must be defined since units is not empty\n    for (const key in accumulated) {\n      if (accumulated[key] !== 0) {\n        built[lastUnit] +=\n          key === lastUnit ? accumulated[key] : accumulated[key] / this.matrix[lastUnit][key];\n      }\n    }\n\n    return clone(this, { values: built }, true).normalize();\n  }\n\n  /**\n   * Shift this Duration to all available units.\n   * Same as shiftTo(\"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", \"seconds\", \"milliseconds\")\n   * @return {Duration}\n   */\n  shiftToAll() {\n    if (!this.isValid) return this;\n    return this.shiftTo(\n      \"years\",\n      \"months\",\n      \"weeks\",\n      \"days\",\n      \"hours\",\n      \"minutes\",\n      \"seconds\",\n      \"milliseconds\"\n    );\n  }\n\n  /**\n   * Return the negative of this Duration.\n   * @example Duration.fromObject({ hours: 1, seconds: 30 }).negate().toObject() //=> { hours: -1, seconds: -30 }\n   * @return {Duration}\n   */\n  negate() {\n    if (!this.isValid) return this;\n    const negated = {};\n    for (const k of Object.keys(this.values)) {\n      negated[k] = this.values[k] === 0 ? 0 : -this.values[k];\n    }\n    return clone(this, { values: negated }, true);\n  }\n\n  /**\n   * Get the years.\n   * @type {number}\n   */\n  get years() {\n    return this.isValid ? this.values.years || 0 : NaN;\n  }\n\n  /**\n   * Get the quarters.\n   * @type {number}\n   */\n  get quarters() {\n    return this.isValid ? this.values.quarters || 0 : NaN;\n  }\n\n  /**\n   * Get the months.\n   * @type {number}\n   */\n  get months() {\n    return this.isValid ? this.values.months || 0 : NaN;\n  }\n\n  /**\n   * Get the weeks\n   * @type {number}\n   */\n  get weeks() {\n    return this.isValid ? this.values.weeks || 0 : NaN;\n  }\n\n  /**\n   * Get the days.\n   * @type {number}\n   */\n  get days() {\n    return this.isValid ? this.values.days || 0 : NaN;\n  }\n\n  /**\n   * Get the hours.\n   * @type {number}\n   */\n  get hours() {\n    return this.isValid ? this.values.hours || 0 : NaN;\n  }\n\n  /**\n   * Get the minutes.\n   * @type {number}\n   */\n  get minutes() {\n    return this.isValid ? this.values.minutes || 0 : NaN;\n  }\n\n  /**\n   * Get the seconds.\n   * @return {number}\n   */\n  get seconds() {\n    return this.isValid ? this.values.seconds || 0 : NaN;\n  }\n\n  /**\n   * Get the milliseconds.\n   * @return {number}\n   */\n  get milliseconds() {\n    return this.isValid ? this.values.milliseconds || 0 : NaN;\n  }\n\n  /**\n   * Returns whether the Duration is invalid. Invalid durations are returned by diff operations\n   * on invalid DateTimes or Intervals.\n   * @return {boolean}\n   */\n  get isValid() {\n    return this.invalid === null;\n  }\n\n  /**\n   * Returns an error code if this Duration became invalid, or null if the Duration is valid\n   * @return {string}\n   */\n  get invalidReason() {\n    return this.invalid ? this.invalid.reason : null;\n  }\n\n  /**\n   * Returns an explanation of why this Duration became invalid, or null if the Duration is valid\n   * @type {string}\n   */\n  get invalidExplanation() {\n    return this.invalid ? this.invalid.explanation : null;\n  }\n\n  /**\n   * Equality check\n   * Two Durations are equal iff they have the same units and the same values for each unit.\n   * @param {Duration} other\n   * @return {boolean}\n   */\n  equals(other) {\n    if (!this.isValid || !other.isValid) {\n      return false;\n    }\n\n    if (!this.loc.equals(other.loc)) {\n      return false;\n    }\n\n    function eq(v1, v2) {\n      // Consider 0 and undefined as equal\n      if (v1 === undefined || v1 === 0) return v2 === undefined || v2 === 0;\n      return v1 === v2;\n    }\n\n    for (const u of orderedUnits) {\n      if (!eq(this.values[u], other.values[u])) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n", "import DateTime, { friendlyDateTime } from \"./datetime.js\";\nimport Duration from \"./duration.js\";\nimport Settings from \"./settings.js\";\nimport { InvalidArgumentError, InvalidIntervalError } from \"./errors.js\";\nimport Invalid from \"./impl/invalid.js\";\nimport Formatter from \"./impl/formatter.js\";\nimport * as Formats from \"./impl/formats.js\";\n\nconst INVALID = \"Invalid Interval\";\n\n// checks if the start is equal to or before the end\nfunction validateStartEnd(start, end) {\n  if (!start || !start.isValid) {\n    return Interval.invalid(\"missing or invalid start\");\n  } else if (!end || !end.isValid) {\n    return Interval.invalid(\"missing or invalid end\");\n  } else if (end < start) {\n    return Interval.invalid(\n      \"end before start\",\n      `The end of an interval must be after its start, but you had start=${start.toISO()} and end=${end.toISO()}`\n    );\n  } else {\n    return null;\n  }\n}\n\n/**\n * An Interval object represents a half-open interval of time, where each endpoint is a {@link DateTime}. Conceptually, it's a container for those two endpoints, accompanied by methods for creating, parsing, interrogating, comparing, transforming, and formatting them.\n *\n * Here is a brief overview of the most commonly used methods and getters in Interval:\n *\n * * **Creation** To create an Interval, use {@link Interval.fromDateTimes}, {@link Interval.after}, {@link Interval.before}, or {@link Interval.fromISO}.\n * * **Accessors** Use {@link Interval#start} and {@link Interval#end} to get the start and end.\n * * **Interrogation** To analyze the Interval, use {@link Interval#count}, {@link Interval#length}, {@link Interval#hasSame}, {@link Interval#contains}, {@link Interval#isAfter}, or {@link Interval#isBefore}.\n * * **Transformation** To create other Intervals out of this one, use {@link Interval#set}, {@link Interval#splitAt}, {@link Interval#splitBy}, {@link Interval#divideEqually}, {@link Interval.merge}, {@link Interval.xor}, {@link Interval#union}, {@link Interval#intersection}, or {@link Interval#difference}.\n * * **Comparison** To compare this Interval to another one, use {@link Interval#equals}, {@link Interval#overlaps}, {@link Interval#abutsStart}, {@link Interval#abutsEnd}, {@link Interval#engulfs}\n * * **Output** To convert the Interval into other representations, see {@link Interval#toString}, {@link Interval#toLocaleString}, {@link Interval#toISO}, {@link Interval#toISODate}, {@link Interval#toISOTime}, {@link Interval#toFormat}, and {@link Interval#toDuration}.\n */\nexport default class Interval {\n  /**\n   * @private\n   */\n  constructor(config) {\n    /**\n     * @access private\n     */\n    this.s = config.start;\n    /**\n     * @access private\n     */\n    this.e = config.end;\n    /**\n     * @access private\n     */\n    this.invalid = config.invalid || null;\n    /**\n     * @access private\n     */\n    this.isLuxonInterval = true;\n  }\n\n  /**\n   * Create an invalid Interval.\n   * @param {string} reason - simple string of why this Interval is invalid. Should not contain parameters or anything else data-dependent\n   * @param {string} [explanation=null] - longer explanation, may include parameters and other useful debugging information\n   * @return {Interval}\n   */\n  static invalid(reason, explanation = null) {\n    if (!reason) {\n      throw new InvalidArgumentError(\"need to specify a reason the Interval is invalid\");\n    }\n\n    const invalid = reason instanceof Invalid ? reason : new Invalid(reason, explanation);\n\n    if (Settings.throwOnInvalid) {\n      throw new InvalidIntervalError(invalid);\n    } else {\n      return new Interval({ invalid });\n    }\n  }\n\n  /**\n   * Create an Interval from a start DateTime and an end DateTime. Inclusive of the start but not the end.\n   * @param {DateTime|Date|Object} start\n   * @param {DateTime|Date|Object} end\n   * @return {Interval}\n   */\n  static fromDateTimes(start, end) {\n    const builtStart = friendlyDateTime(start),\n      builtEnd = friendlyDateTime(end);\n\n    const validateError = validateStartEnd(builtStart, builtEnd);\n\n    if (validateError == null) {\n      return new Interval({\n        start: builtStart,\n        end: builtEnd,\n      });\n    } else {\n      return validateError;\n    }\n  }\n\n  /**\n   * Create an Interval from a start DateTime and a Duration to extend to.\n   * @param {DateTime|Date|Object} start\n   * @param {Duration|Object|number} duration - the length of the Interval.\n   * @return {Interval}\n   */\n  static after(start, duration) {\n    const dur = Duration.fromDurationLike(duration),\n      dt = friendlyDateTime(start);\n    return Interval.fromDateTimes(dt, dt.plus(dur));\n  }\n\n  /**\n   * Create an Interval from an end DateTime and a Duration to extend backwards to.\n   * @param {DateTime|Date|Object} end\n   * @param {Duration|Object|number} duration - the length of the Interval.\n   * @return {Interval}\n   */\n  static before(end, duration) {\n    const dur = Duration.fromDurationLike(duration),\n      dt = friendlyDateTime(end);\n    return Interval.fromDateTimes(dt.minus(dur), dt);\n  }\n\n  /**\n   * Create an Interval from an ISO 8601 string.\n   * Accepts `<start>/<end>`, `<start>/<duration>`, and `<duration>/<end>` formats.\n   * @param {string} text - the ISO string to parse\n   * @param {Object} [opts] - options to pass {@link DateTime#fromISO} and optionally {@link Duration#fromISO}\n   * @see https://en.wikipedia.org/wiki/ISO_8601#Time_intervals\n   * @return {Interval}\n   */\n  static fromISO(text, opts) {\n    const [s, e] = (text || \"\").split(\"/\", 2);\n    if (s && e) {\n      let start, startIsValid;\n      try {\n        start = DateTime.fromISO(s, opts);\n        startIsValid = start.isValid;\n      } catch (e) {\n        startIsValid = false;\n      }\n\n      let end, endIsValid;\n      try {\n        end = DateTime.fromISO(e, opts);\n        endIsValid = end.isValid;\n      } catch (e) {\n        endIsValid = false;\n      }\n\n      if (startIsValid && endIsValid) {\n        return Interval.fromDateTimes(start, end);\n      }\n\n      if (startIsValid) {\n        const dur = Duration.fromISO(e, opts);\n        if (dur.isValid) {\n          return Interval.after(start, dur);\n        }\n      } else if (endIsValid) {\n        const dur = Duration.fromISO(s, opts);\n        if (dur.isValid) {\n          return Interval.before(end, dur);\n        }\n      }\n    }\n    return Interval.invalid(\"unparsable\", `the input \"${text}\" can't be parsed as ISO 8601`);\n  }\n\n  /**\n   * Check if an object is an Interval. Works across context boundaries\n   * @param {object} o\n   * @return {boolean}\n   */\n  static isInterval(o) {\n    return (o && o.isLuxonInterval) || false;\n  }\n\n  /**\n   * Returns the start of the Interval\n   * @type {DateTime}\n   */\n  get start() {\n    return this.isValid ? this.s : null;\n  }\n\n  /**\n   * Returns the end of the Interval\n   * @type {DateTime}\n   */\n  get end() {\n    return this.isValid ? this.e : null;\n  }\n\n  /**\n   * Returns whether this Interval's end is at least its start, meaning that the Interval isn't 'backwards'.\n   * @type {boolean}\n   */\n  get isValid() {\n    return this.invalidReason === null;\n  }\n\n  /**\n   * Returns an error code if this Interval is invalid, or null if the Interval is valid\n   * @type {string}\n   */\n  get invalidReason() {\n    return this.invalid ? this.invalid.reason : null;\n  }\n\n  /**\n   * Returns an explanation of why this Interval became invalid, or null if the Interval is valid\n   * @type {string}\n   */\n  get invalidExplanation() {\n    return this.invalid ? this.invalid.explanation : null;\n  }\n\n  /**\n   * Returns the length of the Interval in the specified unit.\n   * @param {string} unit - the unit (such as 'hours' or 'days') to return the length in.\n   * @return {number}\n   */\n  length(unit = \"milliseconds\") {\n    return this.isValid ? this.toDuration(...[unit]).get(unit) : NaN;\n  }\n\n  /**\n   * Returns the count of minutes, hours, days, months, or years included in the Interval, even in part.\n   * Unlike {@link Interval#length} this counts sections of the calendar, not periods of time, e.g. specifying 'day'\n   * asks 'what dates are included in this interval?', not 'how many days long is this interval?'\n   * @param {string} [unit='milliseconds'] - the unit of time to count.\n   * @return {number}\n   */\n  count(unit = \"milliseconds\") {\n    if (!this.isValid) return NaN;\n    const start = this.start.startOf(unit),\n      end = this.end.startOf(unit);\n    return Math.floor(end.diff(start, unit).get(unit)) + 1;\n  }\n\n  /**\n   * Returns whether this Interval's start and end are both in the same unit of time\n   * @param {string} unit - the unit of time to check sameness on\n   * @return {boolean}\n   */\n  hasSame(unit) {\n    return this.isValid ? this.isEmpty() || this.e.minus(1).hasSame(this.s, unit) : false;\n  }\n\n  /**\n   * Return whether this Interval has the same start and end DateTimes.\n   * @return {boolean}\n   */\n  isEmpty() {\n    return this.s.valueOf() === this.e.valueOf();\n  }\n\n  /**\n   * Return whether this Interval's start is after the specified DateTime.\n   * @param {DateTime} dateTime\n   * @return {boolean}\n   */\n  isAfter(dateTime) {\n    if (!this.isValid) return false;\n    return this.s > dateTime;\n  }\n\n  /**\n   * Return whether this Interval's end is before the specified DateTime.\n   * @param {DateTime} dateTime\n   * @return {boolean}\n   */\n  isBefore(dateTime) {\n    if (!this.isValid) return false;\n    return this.e <= dateTime;\n  }\n\n  /**\n   * Return whether this Interval contains the specified DateTime.\n   * @param {DateTime} dateTime\n   * @return {boolean}\n   */\n  contains(dateTime) {\n    if (!this.isValid) return false;\n    return this.s <= dateTime && this.e > dateTime;\n  }\n\n  /**\n   * \"Sets\" the start and/or end dates. Returns a newly-constructed Interval.\n   * @param {Object} values - the values to set\n   * @param {DateTime} values.start - the starting DateTime\n   * @param {DateTime} values.end - the ending DateTime\n   * @return {Interval}\n   */\n  set({ start, end } = {}) {\n    if (!this.isValid) return this;\n    return Interval.fromDateTimes(start || this.s, end || this.e);\n  }\n\n  /**\n   * Split this Interval at each of the specified DateTimes\n   * @param {...DateTime} dateTimes - the unit of time to count.\n   * @return {Array}\n   */\n  splitAt(...dateTimes) {\n    if (!this.isValid) return [];\n    const sorted = dateTimes\n        .map(friendlyDateTime)\n        .filter((d) => this.contains(d))\n        .sort(),\n      results = [];\n    let { s } = this,\n      i = 0;\n\n    while (s < this.e) {\n      const added = sorted[i] || this.e,\n        next = +added > +this.e ? this.e : added;\n      results.push(Interval.fromDateTimes(s, next));\n      s = next;\n      i += 1;\n    }\n\n    return results;\n  }\n\n  /**\n   * Split this Interval into smaller Intervals, each of the specified length.\n   * Left over time is grouped into a smaller interval\n   * @param {Duration|Object|number} duration - The length of each resulting interval.\n   * @return {Array}\n   */\n  splitBy(duration) {\n    const dur = Duration.fromDurationLike(duration);\n\n    if (!this.isValid || !dur.isValid || dur.as(\"milliseconds\") === 0) {\n      return [];\n    }\n\n    let { s } = this,\n      idx = 1,\n      next;\n\n    const results = [];\n    while (s < this.e) {\n      const added = this.start.plus(dur.mapUnits((x) => x * idx));\n      next = +added > +this.e ? this.e : added;\n      results.push(Interval.fromDateTimes(s, next));\n      s = next;\n      idx += 1;\n    }\n\n    return results;\n  }\n\n  /**\n   * Split this Interval into the specified number of smaller intervals.\n   * @param {number} numberOfParts - The number of Intervals to divide the Interval into.\n   * @return {Array}\n   */\n  divideEqually(numberOfParts) {\n    if (!this.isValid) return [];\n    return this.splitBy(this.length() / numberOfParts).slice(0, numberOfParts);\n  }\n\n  /**\n   * Return whether this Interval overlaps with the specified Interval\n   * @param {Interval} other\n   * @return {boolean}\n   */\n  overlaps(other) {\n    return this.e > other.s && this.s < other.e;\n  }\n\n  /**\n   * Return whether this Interval's end is adjacent to the specified Interval's start.\n   * @param {Interval} other\n   * @return {boolean}\n   */\n  abutsStart(other) {\n    if (!this.isValid) return false;\n    return +this.e === +other.s;\n  }\n\n  /**\n   * Return whether this Interval's start is adjacent to the specified Interval's end.\n   * @param {Interval} other\n   * @return {boolean}\n   */\n  abutsEnd(other) {\n    if (!this.isValid) return false;\n    return +other.e === +this.s;\n  }\n\n  /**\n   * Return whether this Interval engulfs the start and end of the specified Interval.\n   * @param {Interval} other\n   * @return {boolean}\n   */\n  engulfs(other) {\n    if (!this.isValid) return false;\n    return this.s <= other.s && this.e >= other.e;\n  }\n\n  /**\n   * Return whether this Interval has the same start and end as the specified Interval.\n   * @param {Interval} other\n   * @return {boolean}\n   */\n  equals(other) {\n    if (!this.isValid || !other.isValid) {\n      return false;\n    }\n\n    return this.s.equals(other.s) && this.e.equals(other.e);\n  }\n\n  /**\n   * Return an Interval representing the intersection of this Interval and the specified Interval.\n   * Specifically, the resulting Interval has the maximum start time and the minimum end time of the two Intervals.\n   * Returns null if the intersection is empty, meaning, the intervals don't intersect.\n   * @param {Interval} other\n   * @return {Interval}\n   */\n  intersection(other) {\n    if (!this.isValid) return this;\n    const s = this.s > other.s ? this.s : other.s,\n      e = this.e < other.e ? this.e : other.e;\n\n    if (s >= e) {\n      return null;\n    } else {\n      return Interval.fromDateTimes(s, e);\n    }\n  }\n\n  /**\n   * Return an Interval representing the union of this Interval and the specified Interval.\n   * Specifically, the resulting Interval has the minimum start time and the maximum end time of the two Intervals.\n   * @param {Interval} other\n   * @return {Interval}\n   */\n  union(other) {\n    if (!this.isValid) return this;\n    const s = this.s < other.s ? this.s : other.s,\n      e = this.e > other.e ? this.e : other.e;\n    return Interval.fromDateTimes(s, e);\n  }\n\n  /**\n   * Merge an array of Intervals into a equivalent minimal set of Intervals.\n   * Combines overlapping and adjacent Intervals.\n   * @param {Array} intervals\n   * @return {Array}\n   */\n  static merge(intervals) {\n    const [found, final] = intervals\n      .sort((a, b) => a.s - b.s)\n      .reduce(\n        ([sofar, current], item) => {\n          if (!current) {\n            return [sofar, item];\n          } else if (current.overlaps(item) || current.abutsStart(item)) {\n            return [sofar, current.union(item)];\n          } else {\n            return [sofar.concat([current]), item];\n          }\n        },\n        [[], null]\n      );\n    if (final) {\n      found.push(final);\n    }\n    return found;\n  }\n\n  /**\n   * Return an array of Intervals representing the spans of time that only appear in one of the specified Intervals.\n   * @param {Array} intervals\n   * @return {Array}\n   */\n  static xor(intervals) {\n    let start = null,\n      currentCount = 0;\n    const results = [],\n      ends = intervals.map((i) => [\n        { time: i.s, type: \"s\" },\n        { time: i.e, type: \"e\" },\n      ]),\n      flattened = Array.prototype.concat(...ends),\n      arr = flattened.sort((a, b) => a.time - b.time);\n\n    for (const i of arr) {\n      currentCount += i.type === \"s\" ? 1 : -1;\n\n      if (currentCount === 1) {\n        start = i.time;\n      } else {\n        if (start && +start !== +i.time) {\n          results.push(Interval.fromDateTimes(start, i.time));\n        }\n\n        start = null;\n      }\n    }\n\n    return Interval.merge(results);\n  }\n\n  /**\n   * Return an Interval representing the span of time in this Interval that doesn't overlap with any of the specified Intervals.\n   * @param {...Interval} intervals\n   * @return {Array}\n   */\n  difference(...intervals) {\n    return Interval.xor([this].concat(intervals))\n      .map((i) => this.intersection(i))\n      .filter((i) => i && !i.isEmpty());\n  }\n\n  /**\n   * Returns a string representation of this Interval appropriate for debugging.\n   * @return {string}\n   */\n  toString() {\n    if (!this.isValid) return INVALID;\n    return `[${this.s.toISO()} \u2013 ${this.e.toISO()})`;\n  }\n\n  /**\n   * Returns a localized string representing this Interval. Accepts the same options as the\n   * Intl.DateTimeFormat constructor and any presets defined by Luxon, such as\n   * {@link DateTime.DATE_FULL} or {@link DateTime.TIME_SIMPLE}. The exact behavior of this method\n   * is browser-specific, but in general it will return an appropriate representation of the\n   * Interval in the assigned locale. Defaults to the system's locale if no locale has been\n   * specified.\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat\n   * @param {Object} [formatOpts=DateTime.DATE_SHORT] - Either a DateTime preset or\n   * Intl.DateTimeFormat constructor options.\n   * @param {Object} opts - Options to override the configuration of the start DateTime.\n   * @example Interval.fromISO('2022-11-07T09:00Z/2022-11-08T09:00Z').toLocaleString(); //=> 11/7/2022 \u2013 11/8/2022\n   * @example Interval.fromISO('2022-11-07T09:00Z/2022-11-08T09:00Z').toLocaleString(DateTime.DATE_FULL); //=> November 7 \u2013 8, 2022\n   * @example Interval.fromISO('2022-11-07T09:00Z/2022-11-08T09:00Z').toLocaleString(DateTime.DATE_FULL, { locale: 'fr-FR' }); //=> 7\u20138 novembre 2022\n   * @example Interval.fromISO('2022-11-07T17:00Z/2022-11-07T19:00Z').toLocaleString(DateTime.TIME_SIMPLE); //=> 6:00 \u2013 8:00 PM\n   * @example Interval.fromISO('2022-11-07T17:00Z/2022-11-07T19:00Z').toLocaleString({ weekday: 'short', month: 'short', day: '2-digit', hour: '2-digit', minute: '2-digit' }); //=> Mon, Nov 07, 6:00 \u2013 8:00 p\n   * @return {string}\n   */\n  toLocaleString(formatOpts = Formats.DATE_SHORT, opts = {}) {\n    return this.isValid\n      ? Formatter.create(this.s.loc.clone(opts), formatOpts).formatInterval(this)\n      : INVALID;\n  }\n\n  /**\n   * Returns an ISO 8601-compliant string representation of this Interval.\n   * @see https://en.wikipedia.org/wiki/ISO_8601#Time_intervals\n   * @param {Object} opts - The same options as {@link DateTime#toISO}\n   * @return {string}\n   */\n  toISO(opts) {\n    if (!this.isValid) return INVALID;\n    return `${this.s.toISO(opts)}/${this.e.toISO(opts)}`;\n  }\n\n  /**\n   * Returns an ISO 8601-compliant string representation of date of this Interval.\n   * The time components are ignored.\n   * @see https://en.wikipedia.org/wiki/ISO_8601#Time_intervals\n   * @return {string}\n   */\n  toISODate() {\n    if (!this.isValid) return INVALID;\n    return `${this.s.toISODate()}/${this.e.toISODate()}`;\n  }\n\n  /**\n   * Returns an ISO 8601-compliant string representation of time of this Interval.\n   * The date components are ignored.\n   * @see https://en.wikipedia.org/wiki/ISO_8601#Time_intervals\n   * @param {Object} opts - The same options as {@link DateTime#toISO}\n   * @return {string}\n   */\n  toISOTime(opts) {\n    if (!this.isValid) return INVALID;\n    return `${this.s.toISOTime(opts)}/${this.e.toISOTime(opts)}`;\n  }\n\n  /**\n   * Returns a string representation of this Interval formatted according to the specified format\n   * string. **You may not want this.** See {@link Interval#toLocaleString} for a more flexible\n   * formatting tool.\n   * @param {string} dateFormat - The format string. This string formats the start and end time.\n   * See {@link DateTime#toFormat} for details.\n   * @param {Object} opts - Options.\n   * @param {string} [opts.separator =  ' \u2013 '] - A separator to place between the start and end\n   * representations.\n   * @return {string}\n   */\n  toFormat(dateFormat, { separator = \" \u2013 \" } = {}) {\n    if (!this.isValid) return INVALID;\n    return `${this.s.toFormat(dateFormat)}${separator}${this.e.toFormat(dateFormat)}`;\n  }\n\n  /**\n   * Return a Duration representing the time spanned by this interval.\n   * @param {string|string[]} [unit=['milliseconds']] - the unit or units (such as 'hours' or 'days') to include in the duration.\n   * @param {Object} opts - options that affect the creation of the Duration\n   * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use\n   * @example Interval.fromDateTimes(dt1, dt2).toDuration().toObject() //=> { milliseconds: 88489257 }\n   * @example Interval.fromDateTimes(dt1, dt2).toDuration('days').toObject() //=> { days: 1.0241812152777778 }\n   * @example Interval.fromDateTimes(dt1, dt2).toDuration(['hours', 'minutes']).toObject() //=> { hours: 24, minutes: 34.82095 }\n   * @example Interval.fromDateTimes(dt1, dt2).toDuration(['hours', 'minutes', 'seconds']).toObject() //=> { hours: 24, minutes: 34, seconds: 49.257 }\n   * @example Interval.fromDateTimes(dt1, dt2).toDuration('seconds').toObject() //=> { seconds: 88489.257 }\n   * @return {Duration}\n   */\n  toDuration(unit, opts) {\n    if (!this.isValid) {\n      return Duration.invalid(this.invalidReason);\n    }\n    return this.e.diff(this.s, unit, opts);\n  }\n\n  /**\n   * Run mapFn on the interval start and end, returning a new Interval from the resulting DateTimes\n   * @param {function} mapFn\n   * @return {Interval}\n   * @example Interval.fromDateTimes(dt1, dt2).mapEndpoints(endpoint => endpoint.toUTC())\n   * @example Interval.fromDateTimes(dt1, dt2).mapEndpoints(endpoint => endpoint.plus({ hours: 2 }))\n   */\n  mapEndpoints(mapFn) {\n    return Interval.fromDateTimes(mapFn(this.s), mapFn(this.e));\n  }\n}\n", "import DateTime from \"./datetime.js\";\nimport Settings from \"./settings.js\";\nimport Locale from \"./impl/locale.js\";\nimport IANAZone from \"./zones/IANAZone.js\";\nimport { normalizeZone } from \"./impl/zoneUtil.js\";\n\nimport { hasRelative } from \"./impl/util.js\";\n\n/**\n * The Info class contains static methods for retrieving general time and date related data. For example, it has methods for finding out if a time zone has a DST, for listing the months in any supported locale, and for discovering which of Luxon features are available in the current environment.\n */\nexport default class Info {\n  /**\n   * Return whether the specified zone contains a DST.\n   * @param {string|Zone} [zone='local'] - Zone to check. Defaults to the environment's local zone.\n   * @return {boolean}\n   */\n  static hasDST(zone = Settings.defaultZone) {\n    const proto = DateTime.now().setZone(zone).set({ month: 12 });\n\n    return !zone.isUniversal && proto.offset !== proto.set({ month: 6 }).offset;\n  }\n\n  /**\n   * Return whether the specified zone is a valid IANA specifier.\n   * @param {string} zone - Zone to check\n   * @return {boolean}\n   */\n  static isValidIANAZone(zone) {\n    return IANAZone.isValidZone(zone);\n  }\n\n  /**\n   * Converts the input into a {@link Zone} instance.\n   *\n   * * If `input` is already a Zone instance, it is returned unchanged.\n   * * If `input` is a string containing a valid time zone name, a Zone instance\n   *   with that name is returned.\n   * * If `input` is a string that doesn't refer to a known time zone, a Zone\n   *   instance with {@link Zone#isValid} == false is returned.\n   * * If `input is a number, a Zone instance with the specified fixed offset\n   *   in minutes is returned.\n   * * If `input` is `null` or `undefined`, the default zone is returned.\n   * @param {string|Zone|number} [input] - the value to be converted\n   * @return {Zone}\n   */\n  static normalizeZone(input) {\n    return normalizeZone(input, Settings.defaultZone);\n  }\n\n  /**\n   * Return an array of standalone month names.\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat\n   * @param {string} [length='long'] - the length of the month representation, such as \"numeric\", \"2-digit\", \"narrow\", \"short\", \"long\"\n   * @param {Object} opts - options\n   * @param {string} [opts.locale] - the locale code\n   * @param {string} [opts.numberingSystem=null] - the numbering system\n   * @param {string} [opts.locObj=null] - an existing locale object to use\n   * @param {string} [opts.outputCalendar='gregory'] - the calendar\n   * @example Info.months()[0] //=> 'January'\n   * @example Info.months('short')[0] //=> 'Jan'\n   * @example Info.months('numeric')[0] //=> '1'\n   * @example Info.months('short', { locale: 'fr-CA' } )[0] //=> 'janv.'\n   * @example Info.months('numeric', { locale: 'ar' })[0] //=> '\u0661'\n   * @example Info.months('long', { outputCalendar: 'islamic' })[0] //=> 'Rabi\u02BB I'\n   * @return {Array}\n   */\n  static months(\n    length = \"long\",\n    { locale = null, numberingSystem = null, locObj = null, outputCalendar = \"gregory\" } = {}\n  ) {\n    return (locObj || Locale.create(locale, numberingSystem, outputCalendar)).months(length);\n  }\n\n  /**\n   * Return an array of format month names.\n   * Format months differ from standalone months in that they're meant to appear next to the day of the month. In some languages, that\n   * changes the string.\n   * See {@link Info#months}\n   * @param {string} [length='long'] - the length of the month representation, such as \"numeric\", \"2-digit\", \"narrow\", \"short\", \"long\"\n   * @param {Object} opts - options\n   * @param {string} [opts.locale] - the locale code\n   * @param {string} [opts.numberingSystem=null] - the numbering system\n   * @param {string} [opts.locObj=null] - an existing locale object to use\n   * @param {string} [opts.outputCalendar='gregory'] - the calendar\n   * @return {Array}\n   */\n  static monthsFormat(\n    length = \"long\",\n    { locale = null, numberingSystem = null, locObj = null, outputCalendar = \"gregory\" } = {}\n  ) {\n    return (locObj || Locale.create(locale, numberingSystem, outputCalendar)).months(length, true);\n  }\n\n  /**\n   * Return an array of standalone week names.\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat\n   * @param {string} [length='long'] - the length of the weekday representation, such as \"narrow\", \"short\", \"long\".\n   * @param {Object} opts - options\n   * @param {string} [opts.locale] - the locale code\n   * @param {string} [opts.numberingSystem=null] - the numbering system\n   * @param {string} [opts.locObj=null] - an existing locale object to use\n   * @example Info.weekdays()[0] //=> 'Monday'\n   * @example Info.weekdays('short')[0] //=> 'Mon'\n   * @example Info.weekdays('short', { locale: 'fr-CA' })[0] //=> 'lun.'\n   * @example Info.weekdays('short', { locale: 'ar' })[0] //=> '\u0627\u0644\u0627\u062B\u0646\u064A\u0646'\n   * @return {Array}\n   */\n  static weekdays(length = \"long\", { locale = null, numberingSystem = null, locObj = null } = {}) {\n    return (locObj || Locale.create(locale, numberingSystem, null)).weekdays(length);\n  }\n\n  /**\n   * Return an array of format week names.\n   * Format weekdays differ from standalone weekdays in that they're meant to appear next to more date information. In some languages, that\n   * changes the string.\n   * See {@link Info#weekdays}\n   * @param {string} [length='long'] - the length of the month representation, such as \"narrow\", \"short\", \"long\".\n   * @param {Object} opts - options\n   * @param {string} [opts.locale=null] - the locale code\n   * @param {string} [opts.numberingSystem=null] - the numbering system\n   * @param {string} [opts.locObj=null] - an existing locale object to use\n   * @return {Array}\n   */\n  static weekdaysFormat(\n    length = \"long\",\n    { locale = null, numberingSystem = null, locObj = null } = {}\n  ) {\n    return (locObj || Locale.create(locale, numberingSystem, null)).weekdays(length, true);\n  }\n\n  /**\n   * Return an array of meridiems.\n   * @param {Object} opts - options\n   * @param {string} [opts.locale] - the locale code\n   * @example Info.meridiems() //=> [ 'AM', 'PM' ]\n   * @example Info.meridiems({ locale: 'my' }) //=> [ '\u1014\u1036\u1014\u1000\u103A', '\u100A\u1014\u1031' ]\n   * @return {Array}\n   */\n  static meridiems({ locale = null } = {}) {\n    return Locale.create(locale).meridiems();\n  }\n\n  /**\n   * Return an array of eras, such as ['BC', 'AD']. The locale can be specified, but the calendar system is always Gregorian.\n   * @param {string} [length='short'] - the length of the era representation, such as \"short\" or \"long\".\n   * @param {Object} opts - options\n   * @param {string} [opts.locale] - the locale code\n   * @example Info.eras() //=> [ 'BC', 'AD' ]\n   * @example Info.eras('long') //=> [ 'Before Christ', 'Anno Domini' ]\n   * @example Info.eras('long', { locale: 'fr' }) //=> [ 'avant J\u00E9sus-Christ', 'apr\u00E8s J\u00E9sus-Christ' ]\n   * @return {Array}\n   */\n  static eras(length = \"short\", { locale = null } = {}) {\n    return Locale.create(locale, null, \"gregory\").eras(length);\n  }\n\n  /**\n   * Return the set of available features in this environment.\n   * Some features of Luxon are not available in all environments. For example, on older browsers, relative time formatting support is not available. Use this function to figure out if that's the case.\n   * Keys:\n   * * `relative`: whether this environment supports relative time formatting\n   * @example Info.features() //=> { relative: false }\n   * @return {Object}\n   */\n  static features() {\n    return { relative: hasRelative() };\n  }\n}\n", "import Duration from \"../duration.js\";\n\nfunction dayDiff(earlier, later) {\n  const utcDayStart = (dt) => dt.toUTC(0, { keepLocalTime: true }).startOf(\"day\").valueOf(),\n    ms = utcDayStart(later) - utcDayStart(earlier);\n  return Math.floor(Duration.fromMillis(ms).as(\"days\"));\n}\n\nfunction highOrderDiffs(cursor, later, units) {\n  const differs = [\n    [\"years\", (a, b) => b.year - a.year],\n    [\"quarters\", (a, b) => b.quarter - a.quarter + (b.year - a.year) * 4],\n    [\"months\", (a, b) => b.month - a.month + (b.year - a.year) * 12],\n    [\n      \"weeks\",\n      (a, b) => {\n        const days = dayDiff(a, b);\n        return (days - (days % 7)) / 7;\n      },\n    ],\n    [\"days\", dayDiff],\n  ];\n\n  const results = {};\n  const earlier = cursor;\n  let lowestOrder, highWater;\n\n  for (const [unit, differ] of differs) {\n    if (units.indexOf(unit) >= 0) {\n      lowestOrder = unit;\n\n      results[unit] = differ(cursor, later);\n      highWater = earlier.plus(results);\n\n      if (highWater > later) {\n        results[unit]--;\n        cursor = earlier.plus(results);\n      } else {\n        cursor = highWater;\n      }\n    }\n  }\n\n  return [cursor, results, highWater, lowestOrder];\n}\n\nexport default function (earlier, later, units, opts) {\n  let [cursor, results, highWater, lowestOrder] = highOrderDiffs(earlier, later, units);\n\n  const remainingMillis = later - cursor;\n\n  const lowerOrderUnits = units.filter(\n    (u) => [\"hours\", \"minutes\", \"seconds\", \"milliseconds\"].indexOf(u) >= 0\n  );\n\n  if (lowerOrderUnits.length === 0) {\n    if (highWater < later) {\n      highWater = cursor.plus({ [lowestOrder]: 1 });\n    }\n\n    if (highWater !== cursor) {\n      results[lowestOrder] = (results[lowestOrder] || 0) + remainingMillis / (highWater - cursor);\n    }\n  }\n\n  const duration = Duration.fromObject(results, opts);\n\n  if (lowerOrderUnits.length > 0) {\n    return Duration.fromMillis(remainingMillis, opts)\n      .shiftTo(...lowerOrderUnits)\n      .plus(duration);\n  } else {\n    return duration;\n  }\n}\n", "const numberingSystems = {\n  arab: \"[\\u0660-\\u0669]\",\n  arabext: \"[\\u06F0-\\u06F9]\",\n  bali: \"[\\u1B50-\\u1B59]\",\n  beng: \"[\\u09E6-\\u09EF]\",\n  deva: \"[\\u0966-\\u096F]\",\n  fullwide: \"[\\uFF10-\\uFF19]\",\n  gujr: \"[\\u0AE6-\\u0AEF]\",\n  hanidec: \"[\u3007|\u4E00|\u4E8C|\u4E09|\u56DB|\u4E94|\u516D|\u4E03|\u516B|\u4E5D]\",\n  khmr: \"[\\u17E0-\\u17E9]\",\n  knda: \"[\\u0CE6-\\u0CEF]\",\n  laoo: \"[\\u0ED0-\\u0ED9]\",\n  limb: \"[\\u1946-\\u194F]\",\n  mlym: \"[\\u0D66-\\u0D6F]\",\n  mong: \"[\\u1810-\\u1819]\",\n  mymr: \"[\\u1040-\\u1049]\",\n  orya: \"[\\u0B66-\\u0B6F]\",\n  tamldec: \"[\\u0BE6-\\u0BEF]\",\n  telu: \"[\\u0C66-\\u0C6F]\",\n  thai: \"[\\u0E50-\\u0E59]\",\n  tibt: \"[\\u0F20-\\u0F29]\",\n  latn: \"\\\\d\",\n};\n\nconst numberingSystemsUTF16 = {\n  arab: [1632, 1641],\n  arabext: [1776, 1785],\n  bali: [6992, 7001],\n  beng: [2534, 2543],\n  deva: [2406, 2415],\n  fullwide: [65296, 65303],\n  gujr: [2790, 2799],\n  khmr: [6112, 6121],\n  knda: [3302, 3311],\n  laoo: [3792, 3801],\n  limb: [6470, 6479],\n  mlym: [3430, 3439],\n  mong: [6160, 6169],\n  mymr: [4160, 4169],\n  orya: [2918, 2927],\n  tamldec: [3046, 3055],\n  telu: [3174, 3183],\n  thai: [3664, 3673],\n  tibt: [3872, 3881],\n};\n\nconst hanidecChars = numberingSystems.hanidec.replace(/[\\[|\\]]/g, \"\").split(\"\");\n\nexport function parseDigits(str) {\n  let value = parseInt(str, 10);\n  if (isNaN(value)) {\n    value = \"\";\n    for (let i = 0; i < str.length; i++) {\n      const code = str.charCodeAt(i);\n\n      if (str[i].search(numberingSystems.hanidec) !== -1) {\n        value += hanidecChars.indexOf(str[i]);\n      } else {\n        for (const key in numberingSystemsUTF16) {\n          const [min, max] = numberingSystemsUTF16[key];\n          if (code >= min && code <= max) {\n            value += code - min;\n          }\n        }\n      }\n    }\n    return parseInt(value, 10);\n  } else {\n    return value;\n  }\n}\n\nexport function digitRegex({ numberingSystem }, append = \"\") {\n  return new RegExp(`${numberingSystems[numberingSystem || \"latn\"]}${append}`);\n}\n", "import { parseMillis, isUndefined, untruncateYear, signedOffset, hasOwnProperty } from \"./util.js\";\nimport Formatter from \"./formatter.js\";\nimport FixedOffsetZone from \"../zones/fixedOffsetZone.js\";\nimport IANAZone from \"../zones/IANAZone.js\";\nimport DateTime from \"../datetime.js\";\nimport { digitRegex, parseDigits } from \"./digits.js\";\nimport { ConflictingSpecificationError } from \"../errors.js\";\n\nconst MISSING_FTP = \"missing Intl.DateTimeFormat.formatToParts support\";\n\nfunction intUnit(regex, post = (i) => i) {\n  return { regex, deser: ([s]) => post(parseDigits(s)) };\n}\n\nconst NBSP = String.fromCharCode(160);\nconst spaceOrNBSP = `[ ${NBSP}]`;\nconst spaceOrNBSPRegExp = new RegExp(spaceOrNBSP, \"g\");\n\nfunction fixListRegex(s) {\n  // make dots optional and also make them literal\n  // make space and non breakable space characters interchangeable\n  return s.replace(/\\./g, \"\\\\.?\").replace(spaceOrNBSPRegExp, spaceOrNBSP);\n}\n\nfunction stripInsensitivities(s) {\n  return s\n    .replace(/\\./g, \"\") // ignore dots that were made optional\n    .replace(spaceOrNBSPRegExp, \" \") // interchange space and nbsp\n    .toLowerCase();\n}\n\nfunction oneOf(strings, startIndex) {\n  if (strings === null) {\n    return null;\n  } else {\n    return {\n      regex: RegExp(strings.map(fixListRegex).join(\"|\")),\n      deser: ([s]) =>\n        strings.findIndex((i) => stripInsensitivities(s) === stripInsensitivities(i)) + startIndex,\n    };\n  }\n}\n\nfunction offset(regex, groups) {\n  return { regex, deser: ([, h, m]) => signedOffset(h, m), groups };\n}\n\nfunction simple(regex) {\n  return { regex, deser: ([s]) => s };\n}\n\nfunction escapeToken(value) {\n  return value.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, \"\\\\$&\");\n}\n\nfunction unitForToken(token, loc) {\n  const one = digitRegex(loc),\n    two = digitRegex(loc, \"{2}\"),\n    three = digitRegex(loc, \"{3}\"),\n    four = digitRegex(loc, \"{4}\"),\n    six = digitRegex(loc, \"{6}\"),\n    oneOrTwo = digitRegex(loc, \"{1,2}\"),\n    oneToThree = digitRegex(loc, \"{1,3}\"),\n    oneToSix = digitRegex(loc, \"{1,6}\"),\n    oneToNine = digitRegex(loc, \"{1,9}\"),\n    twoToFour = digitRegex(loc, \"{2,4}\"),\n    fourToSix = digitRegex(loc, \"{4,6}\"),\n    literal = (t) => ({ regex: RegExp(escapeToken(t.val)), deser: ([s]) => s, literal: true }),\n    unitate = (t) => {\n      if (token.literal) {\n        return literal(t);\n      }\n      switch (t.val) {\n        // era\n        case \"G\":\n          return oneOf(loc.eras(\"short\", false), 0);\n        case \"GG\":\n          return oneOf(loc.eras(\"long\", false), 0);\n        // years\n        case \"y\":\n          return intUnit(oneToSix);\n        case \"yy\":\n          return intUnit(twoToFour, untruncateYear);\n        case \"yyyy\":\n          return intUnit(four);\n        case \"yyyyy\":\n          return intUnit(fourToSix);\n        case \"yyyyyy\":\n          return intUnit(six);\n        // months\n        case \"M\":\n          return intUnit(oneOrTwo);\n        case \"MM\":\n          return intUnit(two);\n        case \"MMM\":\n          return oneOf(loc.months(\"short\", true, false), 1);\n        case \"MMMM\":\n          return oneOf(loc.months(\"long\", true, false), 1);\n        case \"L\":\n          return intUnit(oneOrTwo);\n        case \"LL\":\n          return intUnit(two);\n        case \"LLL\":\n          return oneOf(loc.months(\"short\", false, false), 1);\n        case \"LLLL\":\n          return oneOf(loc.months(\"long\", false, false), 1);\n        // dates\n        case \"d\":\n          return intUnit(oneOrTwo);\n        case \"dd\":\n          return intUnit(two);\n        // ordinals\n        case \"o\":\n          return intUnit(oneToThree);\n        case \"ooo\":\n          return intUnit(three);\n        // time\n        case \"HH\":\n          return intUnit(two);\n        case \"H\":\n          return intUnit(oneOrTwo);\n        case \"hh\":\n          return intUnit(two);\n        case \"h\":\n          return intUnit(oneOrTwo);\n        case \"mm\":\n          return intUnit(two);\n        case \"m\":\n          return intUnit(oneOrTwo);\n        case \"q\":\n          return intUnit(oneOrTwo);\n        case \"qq\":\n          return intUnit(two);\n        case \"s\":\n          return intUnit(oneOrTwo);\n        case \"ss\":\n          return intUnit(two);\n        case \"S\":\n          return intUnit(oneToThree);\n        case \"SSS\":\n          return intUnit(three);\n        case \"u\":\n          return simple(oneToNine);\n        case \"uu\":\n          return simple(oneOrTwo);\n        case \"uuu\":\n          return intUnit(one);\n        // meridiem\n        case \"a\":\n          return oneOf(loc.meridiems(), 0);\n        // weekYear (k)\n        case \"kkkk\":\n          return intUnit(four);\n        case \"kk\":\n          return intUnit(twoToFour, untruncateYear);\n        // weekNumber (W)\n        case \"W\":\n          return intUnit(oneOrTwo);\n        case \"WW\":\n          return intUnit(two);\n        // weekdays\n        case \"E\":\n        case \"c\":\n          return intUnit(one);\n        case \"EEE\":\n          return oneOf(loc.weekdays(\"short\", false, false), 1);\n        case \"EEEE\":\n          return oneOf(loc.weekdays(\"long\", false, false), 1);\n        case \"ccc\":\n          return oneOf(loc.weekdays(\"short\", true, false), 1);\n        case \"cccc\":\n          return oneOf(loc.weekdays(\"long\", true, false), 1);\n        // offset/zone\n        case \"Z\":\n        case \"ZZ\":\n          return offset(new RegExp(`([+-]${oneOrTwo.source})(?::(${two.source}))?`), 2);\n        case \"ZZZ\":\n          return offset(new RegExp(`([+-]${oneOrTwo.source})(${two.source})?`), 2);\n        // we don't support ZZZZ (PST) or ZZZZZ (Pacific Standard Time) in parsing\n        // because we don't have any way to figure out what they are\n        case \"z\":\n          return simple(/[a-z_+-/]{1,256}?/i);\n        default:\n          return literal(t);\n      }\n    };\n\n  const unit = unitate(token) || {\n    invalidReason: MISSING_FTP,\n  };\n\n  unit.token = token;\n\n  return unit;\n}\n\nconst partTypeStyleToTokenVal = {\n  year: {\n    \"2-digit\": \"yy\",\n    numeric: \"yyyyy\",\n  },\n  month: {\n    numeric: \"M\",\n    \"2-digit\": \"MM\",\n    short: \"MMM\",\n    long: \"MMMM\",\n  },\n  day: {\n    numeric: \"d\",\n    \"2-digit\": \"dd\",\n  },\n  weekday: {\n    short: \"EEE\",\n    long: \"EEEE\",\n  },\n  dayperiod: \"a\",\n  dayPeriod: \"a\",\n  hour: {\n    numeric: \"h\",\n    \"2-digit\": \"hh\",\n  },\n  minute: {\n    numeric: \"m\",\n    \"2-digit\": \"mm\",\n  },\n  second: {\n    numeric: \"s\",\n    \"2-digit\": \"ss\",\n  },\n  timeZoneName: {\n    long: \"ZZZZZ\",\n    short: \"ZZZ\",\n  },\n};\n\nfunction tokenForPart(part, formatOpts) {\n  const { type, value } = part;\n\n  if (type === \"literal\") {\n    return {\n      literal: true,\n      val: value,\n    };\n  }\n\n  const style = formatOpts[type];\n\n  let val = partTypeStyleToTokenVal[type];\n  if (typeof val === \"object\") {\n    val = val[style];\n  }\n\n  if (val) {\n    return {\n      literal: false,\n      val,\n    };\n  }\n\n  return undefined;\n}\n\nfunction buildRegex(units) {\n  const re = units.map((u) => u.regex).reduce((f, r) => `${f}(${r.source})`, \"\");\n  return [`^${re}$`, units];\n}\n\nfunction match(input, regex, handlers) {\n  const matches = input.match(regex);\n\n  if (matches) {\n    const all = {};\n    let matchIndex = 1;\n    for (const i in handlers) {\n      if (hasOwnProperty(handlers, i)) {\n        const h = handlers[i],\n          groups = h.groups ? h.groups + 1 : 1;\n        if (!h.literal && h.token) {\n          all[h.token.val[0]] = h.deser(matches.slice(matchIndex, matchIndex + groups));\n        }\n        matchIndex += groups;\n      }\n    }\n    return [matches, all];\n  } else {\n    return [matches, {}];\n  }\n}\n\nfunction dateTimeFromMatches(matches) {\n  const toField = (token) => {\n    switch (token) {\n      case \"S\":\n        return \"millisecond\";\n      case \"s\":\n        return \"second\";\n      case \"m\":\n        return \"minute\";\n      case \"h\":\n      case \"H\":\n        return \"hour\";\n      case \"d\":\n        return \"day\";\n      case \"o\":\n        return \"ordinal\";\n      case \"L\":\n      case \"M\":\n        return \"month\";\n      case \"y\":\n        return \"year\";\n      case \"E\":\n      case \"c\":\n        return \"weekday\";\n      case \"W\":\n        return \"weekNumber\";\n      case \"k\":\n        return \"weekYear\";\n      case \"q\":\n        return \"quarter\";\n      default:\n        return null;\n    }\n  };\n\n  let zone = null;\n  let specificOffset;\n  if (!isUndefined(matches.z)) {\n    zone = IANAZone.create(matches.z);\n  }\n\n  if (!isUndefined(matches.Z)) {\n    if (!zone) {\n      zone = new FixedOffsetZone(matches.Z);\n    }\n    specificOffset = matches.Z;\n  }\n\n  if (!isUndefined(matches.q)) {\n    matches.M = (matches.q - 1) * 3 + 1;\n  }\n\n  if (!isUndefined(matches.h)) {\n    if (matches.h < 12 && matches.a === 1) {\n      matches.h += 12;\n    } else if (matches.h === 12 && matches.a === 0) {\n      matches.h = 0;\n    }\n  }\n\n  if (matches.G === 0 && matches.y) {\n    matches.y = -matches.y;\n  }\n\n  if (!isUndefined(matches.u)) {\n    matches.S = parseMillis(matches.u);\n  }\n\n  const vals = Object.keys(matches).reduce((r, k) => {\n    const f = toField(k);\n    if (f) {\n      r[f] = matches[k];\n    }\n\n    return r;\n  }, {});\n\n  return [vals, zone, specificOffset];\n}\n\nlet dummyDateTimeCache = null;\n\nfunction getDummyDateTime() {\n  if (!dummyDateTimeCache) {\n    dummyDateTimeCache = DateTime.fromMillis(1555555555555);\n  }\n\n  return dummyDateTimeCache;\n}\n\nfunction maybeExpandMacroToken(token, locale) {\n  if (token.literal) {\n    return token;\n  }\n\n  const formatOpts = Formatter.macroTokenToFormatOpts(token.val);\n  const tokens = formatOptsToTokens(formatOpts, locale);\n\n  if (tokens == null || tokens.includes(undefined)) {\n    return token;\n  }\n\n  return tokens;\n}\n\nexport function expandMacroTokens(tokens, locale) {\n  return Array.prototype.concat(...tokens.map((t) => maybeExpandMacroToken(t, locale)));\n}\n\n/**\n * @private\n */\n\nexport function explainFromTokens(locale, input, format) {\n  const tokens = expandMacroTokens(Formatter.parseFormat(format), locale),\n    units = tokens.map((t) => unitForToken(t, locale)),\n    disqualifyingUnit = units.find((t) => t.invalidReason);\n\n  if (disqualifyingUnit) {\n    return { input, tokens, invalidReason: disqualifyingUnit.invalidReason };\n  } else {\n    const [regexString, handlers] = buildRegex(units),\n      regex = RegExp(regexString, \"i\"),\n      [rawMatches, matches] = match(input, regex, handlers),\n      [result, zone, specificOffset] = matches\n        ? dateTimeFromMatches(matches)\n        : [null, null, undefined];\n    if (hasOwnProperty(matches, \"a\") && hasOwnProperty(matches, \"H\")) {\n      throw new ConflictingSpecificationError(\n        \"Can't include meridiem when specifying 24-hour format\"\n      );\n    }\n    return { input, tokens, regex, rawMatches, matches, result, zone, specificOffset };\n  }\n}\n\nexport function parseFromTokens(locale, input, format) {\n  const { result, zone, specificOffset, invalidReason } = explainFromTokens(locale, input, format);\n  return [result, zone, specificOffset, invalidReason];\n}\n\nexport function formatOptsToTokens(formatOpts, locale) {\n  if (!formatOpts) {\n    return null;\n  }\n\n  const formatter = Formatter.create(locale, formatOpts);\n  const parts = formatter.formatDateTimeParts(getDummyDateTime());\n  return parts.map((p) => tokenForPart(p, formatOpts));\n}\n", "import {\n  integerBetween,\n  isLeapYear,\n  timeObject,\n  daysInYear,\n  daysInMonth,\n  weeksInWeekYear,\n  isInteger,\n} from \"./util.js\";\nimport Invalid from \"./invalid.js\";\n\nconst nonLeapLadder = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334],\n  leapLadder = [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335];\n\nfunction unitOutOfRange(unit, value) {\n  return new Invalid(\n    \"unit out of range\",\n    `you specified ${value} (of type ${typeof value}) as a ${unit}, which is invalid`\n  );\n}\n\nfunction dayOfWeek(year, month, day) {\n  const d = new Date(Date.UTC(year, month - 1, day));\n\n  if (year < 100 && year >= 0) {\n    d.setUTCFullYear(d.getUTCFullYear() - 1900);\n  }\n\n  const js = d.getUTCDay();\n\n  return js === 0 ? 7 : js;\n}\n\nfunction computeOrdinal(year, month, day) {\n  return day + (isLeapYear(year) ? leapLadder : nonLeapLadder)[month - 1];\n}\n\nfunction uncomputeOrdinal(year, ordinal) {\n  const table = isLeapYear(year) ? leapLadder : nonLeapLadder,\n    month0 = table.findIndex((i) => i < ordinal),\n    day = ordinal - table[month0];\n  return { month: month0 + 1, day };\n}\n\n/**\n * @private\n */\n\nexport function gregorianToWeek(gregObj) {\n  const { year, month, day } = gregObj,\n    ordinal = computeOrdinal(year, month, day),\n    weekday = dayOfWeek(year, month, day);\n\n  let weekNumber = Math.floor((ordinal - weekday + 10) / 7),\n    weekYear;\n\n  if (weekNumber < 1) {\n    weekYear = year - 1;\n    weekNumber = weeksInWeekYear(weekYear);\n  } else if (weekNumber > weeksInWeekYear(year)) {\n    weekYear = year + 1;\n    weekNumber = 1;\n  } else {\n    weekYear = year;\n  }\n\n  return { weekYear, weekNumber, weekday, ...timeObject(gregObj) };\n}\n\nexport function weekToGregorian(weekData) {\n  const { weekYear, weekNumber, weekday } = weekData,\n    weekdayOfJan4 = dayOfWeek(weekYear, 1, 4),\n    yearInDays = daysInYear(weekYear);\n\n  let ordinal = weekNumber * 7 + weekday - weekdayOfJan4 - 3,\n    year;\n\n  if (ordinal < 1) {\n    year = weekYear - 1;\n    ordinal += daysInYear(year);\n  } else if (ordinal > yearInDays) {\n    year = weekYear + 1;\n    ordinal -= daysInYear(weekYear);\n  } else {\n    year = weekYear;\n  }\n\n  const { month, day } = uncomputeOrdinal(year, ordinal);\n  return { year, month, day, ...timeObject(weekData) };\n}\n\nexport function gregorianToOrdinal(gregData) {\n  const { year, month, day } = gregData;\n  const ordinal = computeOrdinal(year, month, day);\n  return { year, ordinal, ...timeObject(gregData) };\n}\n\nexport function ordinalToGregorian(ordinalData) {\n  const { year, ordinal } = ordinalData;\n  const { month, day } = uncomputeOrdinal(year, ordinal);\n  return { year, month, day, ...timeObject(ordinalData) };\n}\n\nexport function hasInvalidWeekData(obj) {\n  const validYear = isInteger(obj.weekYear),\n    validWeek = integerBetween(obj.weekNumber, 1, weeksInWeekYear(obj.weekYear)),\n    validWeekday = integerBetween(obj.weekday, 1, 7);\n\n  if (!validYear) {\n    return unitOutOfRange(\"weekYear\", obj.weekYear);\n  } else if (!validWeek) {\n    return unitOutOfRange(\"week\", obj.week);\n  } else if (!validWeekday) {\n    return unitOutOfRange(\"weekday\", obj.weekday);\n  } else return false;\n}\n\nexport function hasInvalidOrdinalData(obj) {\n  const validYear = isInteger(obj.year),\n    validOrdinal = integerBetween(obj.ordinal, 1, daysInYear(obj.year));\n\n  if (!validYear) {\n    return unitOutOfRange(\"year\", obj.year);\n  } else if (!validOrdinal) {\n    return unitOutOfRange(\"ordinal\", obj.ordinal);\n  } else return false;\n}\n\nexport function hasInvalidGregorianData(obj) {\n  const validYear = isInteger(obj.year),\n    validMonth = integerBetween(obj.month, 1, 12),\n    validDay = integerBetween(obj.day, 1, daysInMonth(obj.year, obj.month));\n\n  if (!validYear) {\n    return unitOutOfRange(\"year\", obj.year);\n  } else if (!validMonth) {\n    return unitOutOfRange(\"month\", obj.month);\n  } else if (!validDay) {\n    return unitOutOfRange(\"day\", obj.day);\n  } else return false;\n}\n\nexport function hasInvalidTimeData(obj) {\n  const { hour, minute, second, millisecond } = obj;\n  const validHour =\n      integerBetween(hour, 0, 23) ||\n      (hour === 24 && minute === 0 && second === 0 && millisecond === 0),\n    validMinute = integerBetween(minute, 0, 59),\n    validSecond = integerBetween(second, 0, 59),\n    validMillisecond = integerBetween(millisecond, 0, 999);\n\n  if (!validHour) {\n    return unitOutOfRange(\"hour\", hour);\n  } else if (!validMinute) {\n    return unitOutOfRange(\"minute\", minute);\n  } else if (!validSecond) {\n    return unitOutOfRange(\"second\", second);\n  } else if (!validMillisecond) {\n    return unitOutOfRange(\"millisecond\", millisecond);\n  } else return false;\n}\n", "import Duration from \"./duration.js\";\nimport Interval from \"./interval.js\";\nimport Settings from \"./settings.js\";\nimport Info from \"./info.js\";\nimport Formatter from \"./impl/formatter.js\";\nimport FixedOffsetZone from \"./zones/fixedOffsetZone.js\";\nimport Locale from \"./impl/locale.js\";\nimport {\n  isUndefined,\n  maybeArray,\n  isDate,\n  isNumber,\n  bestBy,\n  daysInMonth,\n  daysInYear,\n  isLeapYear,\n  weeksInWeekYear,\n  normalizeObject,\n  roundTo,\n  objToLocalTS,\n  padStart,\n} from \"./impl/util.js\";\nimport { normalizeZone } from \"./impl/zoneUtil.js\";\nimport diff from \"./impl/diff.js\";\nimport { parseRFC2822Date, parseISODate, parseHTTPDate, parseSQL } from \"./impl/regexParser.js\";\nimport {\n  parseFromTokens,\n  explainFromTokens,\n  formatOptsToTokens,\n  expandMacroTokens,\n} from \"./impl/tokenParser.js\";\nimport {\n  gregorianToWeek,\n  weekToGregorian,\n  gregorianToOrdinal,\n  ordinalToGregorian,\n  hasInvalidGregorianData,\n  hasInvalidWeekData,\n  hasInvalidOrdinalData,\n  hasInvalidTimeData,\n} from \"./impl/conversions.js\";\nimport * as Formats from \"./impl/formats.js\";\nimport {\n  InvalidArgumentError,\n  ConflictingSpecificationError,\n  InvalidUnitError,\n  InvalidDateTimeError,\n} from \"./errors.js\";\nimport Invalid from \"./impl/invalid.js\";\n\nconst INVALID = \"Invalid DateTime\";\nconst MAX_DATE = 8.64e15;\n\nfunction unsupportedZone(zone) {\n  return new Invalid(\"unsupported zone\", `the zone \"${zone.name}\" is not supported`);\n}\n\n// we cache week data on the DT object and this intermediates the cache\nfunction possiblyCachedWeekData(dt) {\n  if (dt.weekData === null) {\n    dt.weekData = gregorianToWeek(dt.c);\n  }\n  return dt.weekData;\n}\n\n// clone really means, \"make a new object with these modifications\". all \"setters\" really use this\n// to create a new object while only changing some of the properties\nfunction clone(inst, alts) {\n  const current = {\n    ts: inst.ts,\n    zone: inst.zone,\n    c: inst.c,\n    o: inst.o,\n    loc: inst.loc,\n    invalid: inst.invalid,\n  };\n  return new DateTime({ ...current, ...alts, old: current });\n}\n\n// find the right offset a given local time. The o input is our guess, which determines which\n// offset we'll pick in ambiguous cases (e.g. there are two 3 AMs b/c Fallback DST)\nfunction fixOffset(localTS, o, tz) {\n  // Our UTC time is just a guess because our offset is just a guess\n  let utcGuess = localTS - o * 60 * 1000;\n\n  // Test whether the zone matches the offset for this ts\n  const o2 = tz.offset(utcGuess);\n\n  // If so, offset didn't change and we're done\n  if (o === o2) {\n    return [utcGuess, o];\n  }\n\n  // If not, change the ts by the difference in the offset\n  utcGuess -= (o2 - o) * 60 * 1000;\n\n  // If that gives us the local time we want, we're done\n  const o3 = tz.offset(utcGuess);\n  if (o2 === o3) {\n    return [utcGuess, o2];\n  }\n\n  // If it's different, we're in a hole time. The offset has changed, but the we don't adjust the time\n  return [localTS - Math.min(o2, o3) * 60 * 1000, Math.max(o2, o3)];\n}\n\n// convert an epoch timestamp into a calendar object with the given offset\nfunction tsToObj(ts, offset) {\n  ts += offset * 60 * 1000;\n\n  const d = new Date(ts);\n\n  return {\n    year: d.getUTCFullYear(),\n    month: d.getUTCMonth() + 1,\n    day: d.getUTCDate(),\n    hour: d.getUTCHours(),\n    minute: d.getUTCMinutes(),\n    second: d.getUTCSeconds(),\n    millisecond: d.getUTCMilliseconds(),\n  };\n}\n\n// convert a calendar object to a epoch timestamp\nfunction objToTS(obj, offset, zone) {\n  return fixOffset(objToLocalTS(obj), offset, zone);\n}\n\n// create a new DT instance by adding a duration, adjusting for DSTs\nfunction adjustTime(inst, dur) {\n  const oPre = inst.o,\n    year = inst.c.year + Math.trunc(dur.years),\n    month = inst.c.month + Math.trunc(dur.months) + Math.trunc(dur.quarters) * 3,\n    c = {\n      ...inst.c,\n      year,\n      month,\n      day:\n        Math.min(inst.c.day, daysInMonth(year, month)) +\n        Math.trunc(dur.days) +\n        Math.trunc(dur.weeks) * 7,\n    },\n    millisToAdd = Duration.fromObject({\n      years: dur.years - Math.trunc(dur.years),\n      quarters: dur.quarters - Math.trunc(dur.quarters),\n      months: dur.months - Math.trunc(dur.months),\n      weeks: dur.weeks - Math.trunc(dur.weeks),\n      days: dur.days - Math.trunc(dur.days),\n      hours: dur.hours,\n      minutes: dur.minutes,\n      seconds: dur.seconds,\n      milliseconds: dur.milliseconds,\n    }).as(\"milliseconds\"),\n    localTS = objToLocalTS(c);\n\n  let [ts, o] = fixOffset(localTS, oPre, inst.zone);\n\n  if (millisToAdd !== 0) {\n    ts += millisToAdd;\n    // that could have changed the offset by going over a DST, but we want to keep the ts the same\n    o = inst.zone.offset(ts);\n  }\n\n  return { ts, o };\n}\n\n// helper useful in turning the results of parsing into real dates\n// by handling the zone options\nfunction parseDataToDateTime(parsed, parsedZone, opts, format, text, specificOffset) {\n  const { setZone, zone } = opts;\n  if (parsed && Object.keys(parsed).length !== 0) {\n    const interpretationZone = parsedZone || zone,\n      inst = DateTime.fromObject(parsed, {\n        ...opts,\n        zone: interpretationZone,\n        specificOffset,\n      });\n    return setZone ? inst : inst.setZone(zone);\n  } else {\n    return DateTime.invalid(\n      new Invalid(\"unparsable\", `the input \"${text}\" can't be parsed as ${format}`)\n    );\n  }\n}\n\n// if you want to output a technical format (e.g. RFC 2822), this helper\n// helps handle the details\nfunction toTechFormat(dt, format, allowZ = true) {\n  return dt.isValid\n    ? Formatter.create(Locale.create(\"en-US\"), {\n        allowZ,\n        forceSimple: true,\n      }).formatDateTimeFromString(dt, format)\n    : null;\n}\n\nfunction toISODate(o, extended) {\n  const longFormat = o.c.year > 9999 || o.c.year < 0;\n  let c = \"\";\n  if (longFormat && o.c.year >= 0) c += \"+\";\n  c += padStart(o.c.year, longFormat ? 6 : 4);\n\n  if (extended) {\n    c += \"-\";\n    c += padStart(o.c.month);\n    c += \"-\";\n    c += padStart(o.c.day);\n  } else {\n    c += padStart(o.c.month);\n    c += padStart(o.c.day);\n  }\n  return c;\n}\n\nfunction toISOTime(\n  o,\n  extended,\n  suppressSeconds,\n  suppressMilliseconds,\n  includeOffset,\n  extendedZone\n) {\n  let c = padStart(o.c.hour);\n  if (extended) {\n    c += \":\";\n    c += padStart(o.c.minute);\n    if (o.c.second !== 0 || !suppressSeconds) {\n      c += \":\";\n    }\n  } else {\n    c += padStart(o.c.minute);\n  }\n\n  if (o.c.second !== 0 || !suppressSeconds) {\n    c += padStart(o.c.second);\n\n    if (o.c.millisecond !== 0 || !suppressMilliseconds) {\n      c += \".\";\n      c += padStart(o.c.millisecond, 3);\n    }\n  }\n\n  if (includeOffset) {\n    if (o.isOffsetFixed && o.offset === 0 && !extendedZone) {\n      c += \"Z\";\n    } else if (o.o < 0) {\n      c += \"-\";\n      c += padStart(Math.trunc(-o.o / 60));\n      c += \":\";\n      c += padStart(Math.trunc(-o.o % 60));\n    } else {\n      c += \"+\";\n      c += padStart(Math.trunc(o.o / 60));\n      c += \":\";\n      c += padStart(Math.trunc(o.o % 60));\n    }\n  }\n\n  if (extendedZone) {\n    c += \"[\" + o.zone.ianaName + \"]\";\n  }\n  return c;\n}\n\n// defaults for unspecified units in the supported calendars\nconst defaultUnitValues = {\n    month: 1,\n    day: 1,\n    hour: 0,\n    minute: 0,\n    second: 0,\n    millisecond: 0,\n  },\n  defaultWeekUnitValues = {\n    weekNumber: 1,\n    weekday: 1,\n    hour: 0,\n    minute: 0,\n    second: 0,\n    millisecond: 0,\n  },\n  defaultOrdinalUnitValues = {\n    ordinal: 1,\n    hour: 0,\n    minute: 0,\n    second: 0,\n    millisecond: 0,\n  };\n\n// Units in the supported calendars, sorted by bigness\nconst orderedUnits = [\"year\", \"month\", \"day\", \"hour\", \"minute\", \"second\", \"millisecond\"],\n  orderedWeekUnits = [\n    \"weekYear\",\n    \"weekNumber\",\n    \"weekday\",\n    \"hour\",\n    \"minute\",\n    \"second\",\n    \"millisecond\",\n  ],\n  orderedOrdinalUnits = [\"year\", \"ordinal\", \"hour\", \"minute\", \"second\", \"millisecond\"];\n\n// standardize case and plurality in units\nfunction normalizeUnit(unit) {\n  const normalized = {\n    year: \"year\",\n    years: \"year\",\n    month: \"month\",\n    months: \"month\",\n    day: \"day\",\n    days: \"day\",\n    hour: \"hour\",\n    hours: \"hour\",\n    minute: \"minute\",\n    minutes: \"minute\",\n    quarter: \"quarter\",\n    quarters: \"quarter\",\n    second: \"second\",\n    seconds: \"second\",\n    millisecond: \"millisecond\",\n    milliseconds: \"millisecond\",\n    weekday: \"weekday\",\n    weekdays: \"weekday\",\n    weeknumber: \"weekNumber\",\n    weeksnumber: \"weekNumber\",\n    weeknumbers: \"weekNumber\",\n    weekyear: \"weekYear\",\n    weekyears: \"weekYear\",\n    ordinal: \"ordinal\",\n  }[unit.toLowerCase()];\n\n  if (!normalized) throw new InvalidUnitError(unit);\n\n  return normalized;\n}\n\n// this is a dumbed down version of fromObject() that runs about 60% faster\n// but doesn't do any validation, makes a bunch of assumptions about what units\n// are present, and so on.\nfunction quickDT(obj, opts) {\n  const zone = normalizeZone(opts.zone, Settings.defaultZone),\n    loc = Locale.fromObject(opts),\n    tsNow = Settings.now();\n\n  let ts, o;\n\n  // assume we have the higher-order units\n  if (!isUndefined(obj.year)) {\n    for (const u of orderedUnits) {\n      if (isUndefined(obj[u])) {\n        obj[u] = defaultUnitValues[u];\n      }\n    }\n\n    const invalid = hasInvalidGregorianData(obj) || hasInvalidTimeData(obj);\n    if (invalid) {\n      return DateTime.invalid(invalid);\n    }\n\n    const offsetProvis = zone.offset(tsNow);\n    [ts, o] = objToTS(obj, offsetProvis, zone);\n  } else {\n    ts = tsNow;\n  }\n\n  return new DateTime({ ts, zone, loc, o });\n}\n\nfunction diffRelative(start, end, opts) {\n  const round = isUndefined(opts.round) ? true : opts.round,\n    format = (c, unit) => {\n      c = roundTo(c, round || opts.calendary ? 0 : 2, true);\n      const formatter = end.loc.clone(opts).relFormatter(opts);\n      return formatter.format(c, unit);\n    },\n    differ = (unit) => {\n      if (opts.calendary) {\n        if (!end.hasSame(start, unit)) {\n          return end.startOf(unit).diff(start.startOf(unit), unit).get(unit);\n        } else return 0;\n      } else {\n        return end.diff(start, unit).get(unit);\n      }\n    };\n\n  if (opts.unit) {\n    return format(differ(opts.unit), opts.unit);\n  }\n\n  for (const unit of opts.units) {\n    const count = differ(unit);\n    if (Math.abs(count) >= 1) {\n      return format(count, unit);\n    }\n  }\n  return format(start > end ? -0 : 0, opts.units[opts.units.length - 1]);\n}\n\nfunction lastOpts(argList) {\n  let opts = {},\n    args;\n  if (argList.length > 0 && typeof argList[argList.length - 1] === \"object\") {\n    opts = argList[argList.length - 1];\n    args = Array.from(argList).slice(0, argList.length - 1);\n  } else {\n    args = Array.from(argList);\n  }\n  return [opts, args];\n}\n\n/**\n * A DateTime is an immutable data structure representing a specific date and time and accompanying methods. It contains class and instance methods for creating, parsing, interrogating, transforming, and formatting them.\n *\n * A DateTime comprises of:\n * * A timestamp. Each DateTime instance refers to a specific millisecond of the Unix epoch.\n * * A time zone. Each instance is considered in the context of a specific zone (by default the local system's zone).\n * * Configuration properties that effect how output strings are formatted, such as `locale`, `numberingSystem`, and `outputCalendar`.\n *\n * Here is a brief overview of the most commonly used functionality it provides:\n *\n * * **Creation**: To create a DateTime from its components, use one of its factory class methods: {@link DateTime.local}, {@link DateTime.utc}, and (most flexibly) {@link DateTime.fromObject}. To create one from a standard string format, use {@link DateTime.fromISO}, {@link DateTime.fromHTTP}, and {@link DateTime.fromRFC2822}. To create one from a custom string format, use {@link DateTime.fromFormat}. To create one from a native JS date, use {@link DateTime.fromJSDate}.\n * * **Gregorian calendar and time**: To examine the Gregorian properties of a DateTime individually (i.e as opposed to collectively through {@link DateTime#toObject}), use the {@link DateTime#year}, {@link DateTime#month},\n * {@link DateTime#day}, {@link DateTime#hour}, {@link DateTime#minute}, {@link DateTime#second}, {@link DateTime#millisecond} accessors.\n * * **Week calendar**: For ISO week calendar attributes, see the {@link DateTime#weekYear}, {@link DateTime#weekNumber}, and {@link DateTime#weekday} accessors.\n * * **Configuration** See the {@link DateTime#locale} and {@link DateTime#numberingSystem} accessors.\n * * **Transformation**: To transform the DateTime into other DateTimes, use {@link DateTime#set}, {@link DateTime#reconfigure}, {@link DateTime#setZone}, {@link DateTime#setLocale}, {@link DateTime.plus}, {@link DateTime#minus}, {@link DateTime#endOf}, {@link DateTime#startOf}, {@link DateTime#toUTC}, and {@link DateTime#toLocal}.\n * * **Output**: To convert the DateTime to other representations, use the {@link DateTime#toRelative}, {@link DateTime#toRelativeCalendar}, {@link DateTime#toJSON}, {@link DateTime#toISO}, {@link DateTime#toHTTP}, {@link DateTime#toObject}, {@link DateTime#toRFC2822}, {@link DateTime#toString}, {@link DateTime#toLocaleString}, {@link DateTime#toFormat}, {@link DateTime#toMillis} and {@link DateTime#toJSDate}.\n *\n * There's plenty others documented below. In addition, for more information on subtler topics like internationalization, time zones, alternative calendars, validity, and so on, see the external documentation.\n */\nexport default class DateTime {\n  /**\n   * @access private\n   */\n  constructor(config) {\n    const zone = config.zone || Settings.defaultZone;\n\n    let invalid =\n      config.invalid ||\n      (Number.isNaN(config.ts) ? new Invalid(\"invalid input\") : null) ||\n      (!zone.isValid ? unsupportedZone(zone) : null);\n    /**\n     * @access private\n     */\n    this.ts = isUndefined(config.ts) ? Settings.now() : config.ts;\n\n    let c = null,\n      o = null;\n    if (!invalid) {\n      const unchanged = config.old && config.old.ts === this.ts && config.old.zone.equals(zone);\n\n      if (unchanged) {\n        [c, o] = [config.old.c, config.old.o];\n      } else {\n        const ot = zone.offset(this.ts);\n        c = tsToObj(this.ts, ot);\n        invalid = Number.isNaN(c.year) ? new Invalid(\"invalid input\") : null;\n        c = invalid ? null : c;\n        o = invalid ? null : ot;\n      }\n    }\n\n    /**\n     * @access private\n     */\n    this._zone = zone;\n    /**\n     * @access private\n     */\n    this.loc = config.loc || Locale.create();\n    /**\n     * @access private\n     */\n    this.invalid = invalid;\n    /**\n     * @access private\n     */\n    this.weekData = null;\n    /**\n     * @access private\n     */\n    this.c = c;\n    /**\n     * @access private\n     */\n    this.o = o;\n    /**\n     * @access private\n     */\n    this.isLuxonDateTime = true;\n  }\n\n  // CONSTRUCT\n\n  /**\n   * Create a DateTime for the current instant, in the system's time zone.\n   *\n   * Use Settings to override these default values if needed.\n   * @example DateTime.now().toISO() //~> now in the ISO format\n   * @return {DateTime}\n   */\n  static now() {\n    return new DateTime({});\n  }\n\n  /**\n   * Create a local DateTime\n   * @param {number} [year] - The calendar year. If omitted (as in, call `local()` with no arguments), the current time will be used\n   * @param {number} [month=1] - The month, 1-indexed\n   * @param {number} [day=1] - The day of the month, 1-indexed\n   * @param {number} [hour=0] - The hour of the day, in 24-hour time\n   * @param {number} [minute=0] - The minute of the hour, meaning a number between 0 and 59\n   * @param {number} [second=0] - The second of the minute, meaning a number between 0 and 59\n   * @param {number} [millisecond=0] - The millisecond of the second, meaning a number between 0 and 999\n   * @example DateTime.local()                                  //~> now\n   * @example DateTime.local({ zone: \"America/New_York\" })      //~> now, in US east coast time\n   * @example DateTime.local(2017)                              //~> 2017-01-01T00:00:00\n   * @example DateTime.local(2017, 3)                           //~> 2017-03-01T00:00:00\n   * @example DateTime.local(2017, 3, 12, { locale: \"fr\" })     //~> 2017-03-12T00:00:00, with a French locale\n   * @example DateTime.local(2017, 3, 12, 5)                    //~> 2017-03-12T05:00:00\n   * @example DateTime.local(2017, 3, 12, 5, { zone: \"utc\" })   //~> 2017-03-12T05:00:00, in UTC\n   * @example DateTime.local(2017, 3, 12, 5, 45)                //~> 2017-03-12T05:45:00\n   * @example DateTime.local(2017, 3, 12, 5, 45, 10)            //~> 2017-03-12T05:45:10\n   * @example DateTime.local(2017, 3, 12, 5, 45, 10, 765)       //~> 2017-03-12T05:45:10.765\n   * @return {DateTime}\n   */\n  static local() {\n    const [opts, args] = lastOpts(arguments),\n      [year, month, day, hour, minute, second, millisecond] = args;\n    return quickDT({ year, month, day, hour, minute, second, millisecond }, opts);\n  }\n\n  /**\n   * Create a DateTime in UTC\n   * @param {number} [year] - The calendar year. If omitted (as in, call `utc()` with no arguments), the current time will be used\n   * @param {number} [month=1] - The month, 1-indexed\n   * @param {number} [day=1] - The day of the month\n   * @param {number} [hour=0] - The hour of the day, in 24-hour time\n   * @param {number} [minute=0] - The minute of the hour, meaning a number between 0 and 59\n   * @param {number} [second=0] - The second of the minute, meaning a number between 0 and 59\n   * @param {number} [millisecond=0] - The millisecond of the second, meaning a number between 0 and 999\n   * @param {Object} options - configuration options for the DateTime\n   * @param {string} [options.locale] - a locale to set on the resulting DateTime instance\n   * @param {string} [options.outputCalendar] - the output calendar to set on the resulting DateTime instance\n   * @param {string} [options.numberingSystem] - the numbering system to set on the resulting DateTime instance\n   * @example DateTime.utc()                                              //~> now\n   * @example DateTime.utc(2017)                                          //~> 2017-01-01T00:00:00Z\n   * @example DateTime.utc(2017, 3)                                       //~> 2017-03-01T00:00:00Z\n   * @example DateTime.utc(2017, 3, 12)                                   //~> 2017-03-12T00:00:00Z\n   * @example DateTime.utc(2017, 3, 12, 5)                                //~> 2017-03-12T05:00:00Z\n   * @example DateTime.utc(2017, 3, 12, 5, 45)                            //~> 2017-03-12T05:45:00Z\n   * @example DateTime.utc(2017, 3, 12, 5, 45, { locale: \"fr\" })          //~> 2017-03-12T05:45:00Z with a French locale\n   * @example DateTime.utc(2017, 3, 12, 5, 45, 10)                        //~> 2017-03-12T05:45:10Z\n   * @example DateTime.utc(2017, 3, 12, 5, 45, 10, 765, { locale: \"fr\" }) //~> 2017-03-12T05:45:10.765Z with a French locale\n   * @return {DateTime}\n   */\n  static utc() {\n    const [opts, args] = lastOpts(arguments),\n      [year, month, day, hour, minute, second, millisecond] = args;\n\n    opts.zone = FixedOffsetZone.utcInstance;\n    return quickDT({ year, month, day, hour, minute, second, millisecond }, opts);\n  }\n\n  /**\n   * Create a DateTime from a JavaScript Date object. Uses the default zone.\n   * @param {Date} date - a JavaScript Date object\n   * @param {Object} options - configuration options for the DateTime\n   * @param {string|Zone} [options.zone='local'] - the zone to place the DateTime into\n   * @return {DateTime}\n   */\n  static fromJSDate(date, options = {}) {\n    const ts = isDate(date) ? date.valueOf() : NaN;\n    if (Number.isNaN(ts)) {\n      return DateTime.invalid(\"invalid input\");\n    }\n\n    const zoneToUse = normalizeZone(options.zone, Settings.defaultZone);\n    if (!zoneToUse.isValid) {\n      return DateTime.invalid(unsupportedZone(zoneToUse));\n    }\n\n    return new DateTime({\n      ts: ts,\n      zone: zoneToUse,\n      loc: Locale.fromObject(options),\n    });\n  }\n\n  /**\n   * Create a DateTime from a number of milliseconds since the epoch (meaning since 1 January 1970 00:00:00 UTC). Uses the default zone.\n   * @param {number} milliseconds - a number of milliseconds since 1970 UTC\n   * @param {Object} options - configuration options for the DateTime\n   * @param {string|Zone} [options.zone='local'] - the zone to place the DateTime into\n   * @param {string} [options.locale] - a locale to set on the resulting DateTime instance\n   * @param {string} options.outputCalendar - the output calendar to set on the resulting DateTime instance\n   * @param {string} options.numberingSystem - the numbering system to set on the resulting DateTime instance\n   * @return {DateTime}\n   */\n  static fromMillis(milliseconds, options = {}) {\n    if (!isNumber(milliseconds)) {\n      throw new InvalidArgumentError(\n        `fromMillis requires a numerical input, but received a ${typeof milliseconds} with value ${milliseconds}`\n      );\n    } else if (milliseconds < -MAX_DATE || milliseconds > MAX_DATE) {\n      // this isn't perfect because because we can still end up out of range because of additional shifting, but it's a start\n      return DateTime.invalid(\"Timestamp out of range\");\n    } else {\n      return new DateTime({\n        ts: milliseconds,\n        zone: normalizeZone(options.zone, Settings.defaultZone),\n        loc: Locale.fromObject(options),\n      });\n    }\n  }\n\n  /**\n   * Create a DateTime from a number of seconds since the epoch (meaning since 1 January 1970 00:00:00 UTC). Uses the default zone.\n   * @param {number} seconds - a number of seconds since 1970 UTC\n   * @param {Object} options - configuration options for the DateTime\n   * @param {string|Zone} [options.zone='local'] - the zone to place the DateTime into\n   * @param {string} [options.locale] - a locale to set on the resulting DateTime instance\n   * @param {string} options.outputCalendar - the output calendar to set on the resulting DateTime instance\n   * @param {string} options.numberingSystem - the numbering system to set on the resulting DateTime instance\n   * @return {DateTime}\n   */\n  static fromSeconds(seconds, options = {}) {\n    if (!isNumber(seconds)) {\n      throw new InvalidArgumentError(\"fromSeconds requires a numerical input\");\n    } else {\n      return new DateTime({\n        ts: seconds * 1000,\n        zone: normalizeZone(options.zone, Settings.defaultZone),\n        loc: Locale.fromObject(options),\n      });\n    }\n  }\n\n  /**\n   * Create a DateTime from a JavaScript object with keys like 'year' and 'hour' with reasonable defaults.\n   * @param {Object} obj - the object to create the DateTime from\n   * @param {number} obj.year - a year, such as 1987\n   * @param {number} obj.month - a month, 1-12\n   * @param {number} obj.day - a day of the month, 1-31, depending on the month\n   * @param {number} obj.ordinal - day of the year, 1-365 or 366\n   * @param {number} obj.weekYear - an ISO week year\n   * @param {number} obj.weekNumber - an ISO week number, between 1 and 52 or 53, depending on the year\n   * @param {number} obj.weekday - an ISO weekday, 1-7, where 1 is Monday and 7 is Sunday\n   * @param {number} obj.hour - hour of the day, 0-23\n   * @param {number} obj.minute - minute of the hour, 0-59\n   * @param {number} obj.second - second of the minute, 0-59\n   * @param {number} obj.millisecond - millisecond of the second, 0-999\n   * @param {Object} opts - options for creating this DateTime\n   * @param {string|Zone} [opts.zone='local'] - interpret the numbers in the context of a particular zone. Can take any value taken as the first argument to setZone()\n   * @param {string} [opts.locale='system's locale'] - a locale to set on the resulting DateTime instance\n   * @param {string} opts.outputCalendar - the output calendar to set on the resulting DateTime instance\n   * @param {string} opts.numberingSystem - the numbering system to set on the resulting DateTime instance\n   * @example DateTime.fromObject({ year: 1982, month: 5, day: 25}).toISODate() //=> '1982-05-25'\n   * @example DateTime.fromObject({ year: 1982 }).toISODate() //=> '1982-01-01'\n   * @example DateTime.fromObject({ hour: 10, minute: 26, second: 6 }) //~> today at 10:26:06\n   * @example DateTime.fromObject({ hour: 10, minute: 26, second: 6 }, { zone: 'utc' }),\n   * @example DateTime.fromObject({ hour: 10, minute: 26, second: 6 }, { zone: 'local' })\n   * @example DateTime.fromObject({ hour: 10, minute: 26, second: 6 }, { zone: 'America/New_York' })\n   * @example DateTime.fromObject({ weekYear: 2016, weekNumber: 2, weekday: 3 }).toISODate() //=> '2016-01-13'\n   * @return {DateTime}\n   */\n  static fromObject(obj, opts = {}) {\n    obj = obj || {};\n    const zoneToUse = normalizeZone(opts.zone, Settings.defaultZone);\n    if (!zoneToUse.isValid) {\n      return DateTime.invalid(unsupportedZone(zoneToUse));\n    }\n\n    const tsNow = Settings.now(),\n      offsetProvis = !isUndefined(opts.specificOffset)\n        ? opts.specificOffset\n        : zoneToUse.offset(tsNow),\n      normalized = normalizeObject(obj, normalizeUnit),\n      containsOrdinal = !isUndefined(normalized.ordinal),\n      containsGregorYear = !isUndefined(normalized.year),\n      containsGregorMD = !isUndefined(normalized.month) || !isUndefined(normalized.day),\n      containsGregor = containsGregorYear || containsGregorMD,\n      definiteWeekDef = normalized.weekYear || normalized.weekNumber,\n      loc = Locale.fromObject(opts);\n\n    // cases:\n    // just a weekday -> this week's instance of that weekday, no worries\n    // (gregorian data or ordinal) + (weekYear or weekNumber) -> error\n    // (gregorian month or day) + ordinal -> error\n    // otherwise just use weeks or ordinals or gregorian, depending on what's specified\n\n    if ((containsGregor || containsOrdinal) && definiteWeekDef) {\n      throw new ConflictingSpecificationError(\n        \"Can't mix weekYear/weekNumber units with year/month/day or ordinals\"\n      );\n    }\n\n    if (containsGregorMD && containsOrdinal) {\n      throw new ConflictingSpecificationError(\"Can't mix ordinal dates with month/day\");\n    }\n\n    const useWeekData = definiteWeekDef || (normalized.weekday && !containsGregor);\n\n    // configure ourselves to deal with gregorian dates or week stuff\n    let units,\n      defaultValues,\n      objNow = tsToObj(tsNow, offsetProvis);\n    if (useWeekData) {\n      units = orderedWeekUnits;\n      defaultValues = defaultWeekUnitValues;\n      objNow = gregorianToWeek(objNow);\n    } else if (containsOrdinal) {\n      units = orderedOrdinalUnits;\n      defaultValues = defaultOrdinalUnitValues;\n      objNow = gregorianToOrdinal(objNow);\n    } else {\n      units = orderedUnits;\n      defaultValues = defaultUnitValues;\n    }\n\n    // set default values for missing stuff\n    let foundFirst = false;\n    for (const u of units) {\n      const v = normalized[u];\n      if (!isUndefined(v)) {\n        foundFirst = true;\n      } else if (foundFirst) {\n        normalized[u] = defaultValues[u];\n      } else {\n        normalized[u] = objNow[u];\n      }\n    }\n\n    // make sure the values we have are in range\n    const higherOrderInvalid = useWeekData\n        ? hasInvalidWeekData(normalized)\n        : containsOrdinal\n        ? hasInvalidOrdinalData(normalized)\n        : hasInvalidGregorianData(normalized),\n      invalid = higherOrderInvalid || hasInvalidTimeData(normalized);\n\n    if (invalid) {\n      return DateTime.invalid(invalid);\n    }\n\n    // compute the actual time\n    const gregorian = useWeekData\n        ? weekToGregorian(normalized)\n        : containsOrdinal\n        ? ordinalToGregorian(normalized)\n        : normalized,\n      [tsFinal, offsetFinal] = objToTS(gregorian, offsetProvis, zoneToUse),\n      inst = new DateTime({\n        ts: tsFinal,\n        zone: zoneToUse,\n        o: offsetFinal,\n        loc,\n      });\n\n    // gregorian data + weekday serves only to validate\n    if (normalized.weekday && containsGregor && obj.weekday !== inst.weekday) {\n      return DateTime.invalid(\n        \"mismatched weekday\",\n        `you can't specify both a weekday of ${normalized.weekday} and a date of ${inst.toISO()}`\n      );\n    }\n\n    return inst;\n  }\n\n  /**\n   * Create a DateTime from an ISO 8601 string\n   * @param {string} text - the ISO string\n   * @param {Object} opts - options to affect the creation\n   * @param {string|Zone} [opts.zone='local'] - use this zone if no offset is specified in the input string itself. Will also convert the time to this zone\n   * @param {boolean} [opts.setZone=false] - override the zone with a fixed-offset zone specified in the string itself, if it specifies one\n   * @param {string} [opts.locale='system's locale'] - a locale to set on the resulting DateTime instance\n   * @param {string} [opts.outputCalendar] - the output calendar to set on the resulting DateTime instance\n   * @param {string} [opts.numberingSystem] - the numbering system to set on the resulting DateTime instance\n   * @example DateTime.fromISO('2016-05-25T09:08:34.123')\n   * @example DateTime.fromISO('2016-05-25T09:08:34.123+06:00')\n   * @example DateTime.fromISO('2016-05-25T09:08:34.123+06:00', {setZone: true})\n   * @example DateTime.fromISO('2016-05-25T09:08:34.123', {zone: 'utc'})\n   * @example DateTime.fromISO('2016-W05-4')\n   * @return {DateTime}\n   */\n  static fromISO(text, opts = {}) {\n    const [vals, parsedZone] = parseISODate(text);\n    return parseDataToDateTime(vals, parsedZone, opts, \"ISO 8601\", text);\n  }\n\n  /**\n   * Create a DateTime from an RFC 2822 string\n   * @param {string} text - the RFC 2822 string\n   * @param {Object} opts - options to affect the creation\n   * @param {string|Zone} [opts.zone='local'] - convert the time to this zone. Since the offset is always specified in the string itself, this has no effect on the interpretation of string, merely the zone the resulting DateTime is expressed in.\n   * @param {boolean} [opts.setZone=false] - override the zone with a fixed-offset zone specified in the string itself, if it specifies one\n   * @param {string} [opts.locale='system's locale'] - a locale to set on the resulting DateTime instance\n   * @param {string} opts.outputCalendar - the output calendar to set on the resulting DateTime instance\n   * @param {string} opts.numberingSystem - the numbering system to set on the resulting DateTime instance\n   * @example DateTime.fromRFC2822('25 Nov 2016 13:23:12 GMT')\n   * @example DateTime.fromRFC2822('Fri, 25 Nov 2016 13:23:12 +0600')\n   * @example DateTime.fromRFC2822('25 Nov 2016 13:23 Z')\n   * @return {DateTime}\n   */\n  static fromRFC2822(text, opts = {}) {\n    const [vals, parsedZone] = parseRFC2822Date(text);\n    return parseDataToDateTime(vals, parsedZone, opts, \"RFC 2822\", text);\n  }\n\n  /**\n   * Create a DateTime from an HTTP header date\n   * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1\n   * @param {string} text - the HTTP header date\n   * @param {Object} opts - options to affect the creation\n   * @param {string|Zone} [opts.zone='local'] - convert the time to this zone. Since HTTP dates are always in UTC, this has no effect on the interpretation of string, merely the zone the resulting DateTime is expressed in.\n   * @param {boolean} [opts.setZone=false] - override the zone with the fixed-offset zone specified in the string. For HTTP dates, this is always UTC, so this option is equivalent to setting the `zone` option to 'utc', but this option is included for consistency with similar methods.\n   * @param {string} [opts.locale='system's locale'] - a locale to set on the resulting DateTime instance\n   * @param {string} opts.outputCalendar - the output calendar to set on the resulting DateTime instance\n   * @param {string} opts.numberingSystem - the numbering system to set on the resulting DateTime instance\n   * @example DateTime.fromHTTP('Sun, 06 Nov 1994 08:49:37 GMT')\n   * @example DateTime.fromHTTP('Sunday, 06-Nov-94 08:49:37 GMT')\n   * @example DateTime.fromHTTP('Sun Nov  6 08:49:37 1994')\n   * @return {DateTime}\n   */\n  static fromHTTP(text, opts = {}) {\n    const [vals, parsedZone] = parseHTTPDate(text);\n    return parseDataToDateTime(vals, parsedZone, opts, \"HTTP\", opts);\n  }\n\n  /**\n   * Create a DateTime from an input string and format string.\n   * Defaults to en-US if no locale has been specified, regardless of the system's locale. For a table of tokens and their interpretations, see [here](https://moment.github.io/luxon/#/parsing?id=table-of-tokens).\n   * @param {string} text - the string to parse\n   * @param {string} fmt - the format the string is expected to be in (see the link below for the formats)\n   * @param {Object} opts - options to affect the creation\n   * @param {string|Zone} [opts.zone='local'] - use this zone if no offset is specified in the input string itself. Will also convert the DateTime to this zone\n   * @param {boolean} [opts.setZone=false] - override the zone with a zone specified in the string itself, if it specifies one\n   * @param {string} [opts.locale='en-US'] - a locale string to use when parsing. Will also set the DateTime to this locale\n   * @param {string} opts.numberingSystem - the numbering system to use when parsing. Will also set the resulting DateTime to this numbering system\n   * @param {string} opts.outputCalendar - the output calendar to set on the resulting DateTime instance\n   * @return {DateTime}\n   */\n  static fromFormat(text, fmt, opts = {}) {\n    if (isUndefined(text) || isUndefined(fmt)) {\n      throw new InvalidArgumentError(\"fromFormat requires an input string and a format\");\n    }\n\n    const { locale = null, numberingSystem = null } = opts,\n      localeToUse = Locale.fromOpts({\n        locale,\n        numberingSystem,\n        defaultToEN: true,\n      }),\n      [vals, parsedZone, specificOffset, invalid] = parseFromTokens(localeToUse, text, fmt);\n    if (invalid) {\n      return DateTime.invalid(invalid);\n    } else {\n      return parseDataToDateTime(vals, parsedZone, opts, `format ${fmt}`, text, specificOffset);\n    }\n  }\n\n  /**\n   * @deprecated use fromFormat instead\n   */\n  static fromString(text, fmt, opts = {}) {\n    return DateTime.fromFormat(text, fmt, opts);\n  }\n\n  /**\n   * Create a DateTime from a SQL date, time, or datetime\n   * Defaults to en-US if no locale has been specified, regardless of the system's locale\n   * @param {string} text - the string to parse\n   * @param {Object} opts - options to affect the creation\n   * @param {string|Zone} [opts.zone='local'] - use this zone if no offset is specified in the input string itself. Will also convert the DateTime to this zone\n   * @param {boolean} [opts.setZone=false] - override the zone with a zone specified in the string itself, if it specifies one\n   * @param {string} [opts.locale='en-US'] - a locale string to use when parsing. Will also set the DateTime to this locale\n   * @param {string} opts.numberingSystem - the numbering system to use when parsing. Will also set the resulting DateTime to this numbering system\n   * @param {string} opts.outputCalendar - the output calendar to set on the resulting DateTime instance\n   * @example DateTime.fromSQL('2017-05-15')\n   * @example DateTime.fromSQL('2017-05-15 09:12:34')\n   * @example DateTime.fromSQL('2017-05-15 09:12:34.342')\n   * @example DateTime.fromSQL('2017-05-15 09:12:34.342+06:00')\n   * @example DateTime.fromSQL('2017-05-15 09:12:34.342 America/Los_Angeles')\n   * @example DateTime.fromSQL('2017-05-15 09:12:34.342 America/Los_Angeles', { setZone: true })\n   * @example DateTime.fromSQL('2017-05-15 09:12:34.342', { zone: 'America/Los_Angeles' })\n   * @example DateTime.fromSQL('09:12:34.342')\n   * @return {DateTime}\n   */\n  static fromSQL(text, opts = {}) {\n    const [vals, parsedZone] = parseSQL(text);\n    return parseDataToDateTime(vals, parsedZone, opts, \"SQL\", text);\n  }\n\n  /**\n   * Create an invalid DateTime.\n   * @param {DateTime} reason - simple string of why this DateTime is invalid. Should not contain parameters or anything else data-dependent\n   * @param {string} [explanation=null] - longer explanation, may include parameters and other useful debugging information\n   * @return {DateTime}\n   */\n  static invalid(reason, explanation = null) {\n    if (!reason) {\n      throw new InvalidArgumentError(\"need to specify a reason the DateTime is invalid\");\n    }\n\n    const invalid = reason instanceof Invalid ? reason : new Invalid(reason, explanation);\n\n    if (Settings.throwOnInvalid) {\n      throw new InvalidDateTimeError(invalid);\n    } else {\n      return new DateTime({ invalid });\n    }\n  }\n\n  /**\n   * Check if an object is an instance of DateTime. Works across context boundaries\n   * @param {object} o\n   * @return {boolean}\n   */\n  static isDateTime(o) {\n    return (o && o.isLuxonDateTime) || false;\n  }\n\n  /**\n   * Produce the format string for a set of options\n   * @param formatOpts\n   * @param localeOpts\n   * @returns {string}\n   */\n  static parseFormatForOpts(formatOpts, localeOpts = {}) {\n    const tokenList = formatOptsToTokens(formatOpts, Locale.fromObject(localeOpts));\n    return !tokenList ? null : tokenList.map((t) => (t ? t.val : null)).join(\"\");\n  }\n\n  /**\n   * Produce the the fully expanded format token for the locale\n   * Does NOT quote characters, so quoted tokens will not round trip correctly\n   * @param fmt\n   * @param localeOpts\n   * @returns {string}\n   */\n  static expandFormat(fmt, localeOpts = {}) {\n    const expanded = expandMacroTokens(Formatter.parseFormat(fmt), Locale.fromObject(localeOpts));\n    return expanded.map((t) => t.val).join(\"\");\n  }\n\n  // INFO\n\n  /**\n   * Get the value of unit.\n   * @param {string} unit - a unit such as 'minute' or 'day'\n   * @example DateTime.local(2017, 7, 4).get('month'); //=> 7\n   * @example DateTime.local(2017, 7, 4).get('day'); //=> 4\n   * @return {number}\n   */\n  get(unit) {\n    return this[unit];\n  }\n\n  /**\n   * Returns whether the DateTime is valid. Invalid DateTimes occur when:\n   * * The DateTime was created from invalid calendar information, such as the 13th month or February 30\n   * * The DateTime was created by an operation on another invalid date\n   * @type {boolean}\n   */\n  get isValid() {\n    return this.invalid === null;\n  }\n\n  /**\n   * Returns an error code if this DateTime is invalid, or null if the DateTime is valid\n   * @type {string}\n   */\n  get invalidReason() {\n    return this.invalid ? this.invalid.reason : null;\n  }\n\n  /**\n   * Returns an explanation of why this DateTime became invalid, or null if the DateTime is valid\n   * @type {string}\n   */\n  get invalidExplanation() {\n    return this.invalid ? this.invalid.explanation : null;\n  }\n\n  /**\n   * Get the locale of a DateTime, such 'en-GB'. The locale is used when formatting the DateTime\n   *\n   * @type {string}\n   */\n  get locale() {\n    return this.isValid ? this.loc.locale : null;\n  }\n\n  /**\n   * Get the numbering system of a DateTime, such 'beng'. The numbering system is used when formatting the DateTime\n   *\n   * @type {string}\n   */\n  get numberingSystem() {\n    return this.isValid ? this.loc.numberingSystem : null;\n  }\n\n  /**\n   * Get the output calendar of a DateTime, such 'islamic'. The output calendar is used when formatting the DateTime\n   *\n   * @type {string}\n   */\n  get outputCalendar() {\n    return this.isValid ? this.loc.outputCalendar : null;\n  }\n\n  /**\n   * Get the time zone associated with this DateTime.\n   * @type {Zone}\n   */\n  get zone() {\n    return this._zone;\n  }\n\n  /**\n   * Get the name of the time zone.\n   * @type {string}\n   */\n  get zoneName() {\n    return this.isValid ? this.zone.name : null;\n  }\n\n  /**\n   * Get the year\n   * @example DateTime.local(2017, 5, 25).year //=> 2017\n   * @type {number}\n   */\n  get year() {\n    return this.isValid ? this.c.year : NaN;\n  }\n\n  /**\n   * Get the quarter\n   * @example DateTime.local(2017, 5, 25).quarter //=> 2\n   * @type {number}\n   */\n  get quarter() {\n    return this.isValid ? Math.ceil(this.c.month / 3) : NaN;\n  }\n\n  /**\n   * Get the month (1-12).\n   * @example DateTime.local(2017, 5, 25).month //=> 5\n   * @type {number}\n   */\n  get month() {\n    return this.isValid ? this.c.month : NaN;\n  }\n\n  /**\n   * Get the day of the month (1-30ish).\n   * @example DateTime.local(2017, 5, 25).day //=> 25\n   * @type {number}\n   */\n  get day() {\n    return this.isValid ? this.c.day : NaN;\n  }\n\n  /**\n   * Get the hour of the day (0-23).\n   * @example DateTime.local(2017, 5, 25, 9).hour //=> 9\n   * @type {number}\n   */\n  get hour() {\n    return this.isValid ? this.c.hour : NaN;\n  }\n\n  /**\n   * Get the minute of the hour (0-59).\n   * @example DateTime.local(2017, 5, 25, 9, 30).minute //=> 30\n   * @type {number}\n   */\n  get minute() {\n    return this.isValid ? this.c.minute : NaN;\n  }\n\n  /**\n   * Get the second of the minute (0-59).\n   * @example DateTime.local(2017, 5, 25, 9, 30, 52).second //=> 52\n   * @type {number}\n   */\n  get second() {\n    return this.isValid ? this.c.second : NaN;\n  }\n\n  /**\n   * Get the millisecond of the second (0-999).\n   * @example DateTime.local(2017, 5, 25, 9, 30, 52, 654).millisecond //=> 654\n   * @type {number}\n   */\n  get millisecond() {\n    return this.isValid ? this.c.millisecond : NaN;\n  }\n\n  /**\n   * Get the week year\n   * @see https://en.wikipedia.org/wiki/ISO_week_date\n   * @example DateTime.local(2014, 12, 31).weekYear //=> 2015\n   * @type {number}\n   */\n  get weekYear() {\n    return this.isValid ? possiblyCachedWeekData(this).weekYear : NaN;\n  }\n\n  /**\n   * Get the week number of the week year (1-52ish).\n   * @see https://en.wikipedia.org/wiki/ISO_week_date\n   * @example DateTime.local(2017, 5, 25).weekNumber //=> 21\n   * @type {number}\n   */\n  get weekNumber() {\n    return this.isValid ? possiblyCachedWeekData(this).weekNumber : NaN;\n  }\n\n  /**\n   * Get the day of the week.\n   * 1 is Monday and 7 is Sunday\n   * @see https://en.wikipedia.org/wiki/ISO_week_date\n   * @example DateTime.local(2014, 11, 31).weekday //=> 4\n   * @type {number}\n   */\n  get weekday() {\n    return this.isValid ? possiblyCachedWeekData(this).weekday : NaN;\n  }\n\n  /**\n   * Get the ordinal (meaning the day of the year)\n   * @example DateTime.local(2017, 5, 25).ordinal //=> 145\n   * @type {number|DateTime}\n   */\n  get ordinal() {\n    return this.isValid ? gregorianToOrdinal(this.c).ordinal : NaN;\n  }\n\n  /**\n   * Get the human readable short month name, such as 'Oct'.\n   * Defaults to the system's locale if no locale has been specified\n   * @example DateTime.local(2017, 10, 30).monthShort //=> Oct\n   * @type {string}\n   */\n  get monthShort() {\n    return this.isValid ? Info.months(\"short\", { locObj: this.loc })[this.month - 1] : null;\n  }\n\n  /**\n   * Get the human readable long month name, such as 'October'.\n   * Defaults to the system's locale if no locale has been specified\n   * @example DateTime.local(2017, 10, 30).monthLong //=> October\n   * @type {string}\n   */\n  get monthLong() {\n    return this.isValid ? Info.months(\"long\", { locObj: this.loc })[this.month - 1] : null;\n  }\n\n  /**\n   * Get the human readable short weekday, such as 'Mon'.\n   * Defaults to the system's locale if no locale has been specified\n   * @example DateTime.local(2017, 10, 30).weekdayShort //=> Mon\n   * @type {string}\n   */\n  get weekdayShort() {\n    return this.isValid ? Info.weekdays(\"short\", { locObj: this.loc })[this.weekday - 1] : null;\n  }\n\n  /**\n   * Get the human readable long weekday, such as 'Monday'.\n   * Defaults to the system's locale if no locale has been specified\n   * @example DateTime.local(2017, 10, 30).weekdayLong //=> Monday\n   * @type {string}\n   */\n  get weekdayLong() {\n    return this.isValid ? Info.weekdays(\"long\", { locObj: this.loc })[this.weekday - 1] : null;\n  }\n\n  /**\n   * Get the UTC offset of this DateTime in minutes\n   * @example DateTime.now().offset //=> -240\n   * @example DateTime.utc().offset //=> 0\n   * @type {number}\n   */\n  get offset() {\n    return this.isValid ? +this.o : NaN;\n  }\n\n  /**\n   * Get the short human name for the zone's current offset, for example \"EST\" or \"EDT\".\n   * Defaults to the system's locale if no locale has been specified\n   * @type {string}\n   */\n  get offsetNameShort() {\n    if (this.isValid) {\n      return this.zone.offsetName(this.ts, {\n        format: \"short\",\n        locale: this.locale,\n      });\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the long human name for the zone's current offset, for example \"Eastern Standard Time\" or \"Eastern Daylight Time\".\n   * Defaults to the system's locale if no locale has been specified\n   * @type {string}\n   */\n  get offsetNameLong() {\n    if (this.isValid) {\n      return this.zone.offsetName(this.ts, {\n        format: \"long\",\n        locale: this.locale,\n      });\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get whether this zone's offset ever changes, as in a DST.\n   * @type {boolean}\n   */\n  get isOffsetFixed() {\n    return this.isValid ? this.zone.isUniversal : null;\n  }\n\n  /**\n   * Get whether the DateTime is in a DST.\n   * @type {boolean}\n   */\n  get isInDST() {\n    if (this.isOffsetFixed) {\n      return false;\n    } else {\n      return (\n        this.offset > this.set({ month: 1, day: 1 }).offset ||\n        this.offset > this.set({ month: 5 }).offset\n      );\n    }\n  }\n\n  /**\n   * Returns true if this DateTime is in a leap year, false otherwise\n   * @example DateTime.local(2016).isInLeapYear //=> true\n   * @example DateTime.local(2013).isInLeapYear //=> false\n   * @type {boolean}\n   */\n  get isInLeapYear() {\n    return isLeapYear(this.year);\n  }\n\n  /**\n   * Returns the number of days in this DateTime's month\n   * @example DateTime.local(2016, 2).daysInMonth //=> 29\n   * @example DateTime.local(2016, 3).daysInMonth //=> 31\n   * @type {number}\n   */\n  get daysInMonth() {\n    return daysInMonth(this.year, this.month);\n  }\n\n  /**\n   * Returns the number of days in this DateTime's year\n   * @example DateTime.local(2016).daysInYear //=> 366\n   * @example DateTime.local(2013).daysInYear //=> 365\n   * @type {number}\n   */\n  get daysInYear() {\n    return this.isValid ? daysInYear(this.year) : NaN;\n  }\n\n  /**\n   * Returns the number of weeks in this DateTime's year\n   * @see https://en.wikipedia.org/wiki/ISO_week_date\n   * @example DateTime.local(2004).weeksInWeekYear //=> 53\n   * @example DateTime.local(2013).weeksInWeekYear //=> 52\n   * @type {number}\n   */\n  get weeksInWeekYear() {\n    return this.isValid ? weeksInWeekYear(this.weekYear) : NaN;\n  }\n\n  /**\n   * Returns the resolved Intl options for this DateTime.\n   * This is useful in understanding the behavior of formatting methods\n   * @param {Object} opts - the same options as toLocaleString\n   * @return {Object}\n   */\n  resolvedLocaleOptions(opts = {}) {\n    const { locale, numberingSystem, calendar } = Formatter.create(\n      this.loc.clone(opts),\n      opts\n    ).resolvedOptions(this);\n    return { locale, numberingSystem, outputCalendar: calendar };\n  }\n\n  // TRANSFORM\n\n  /**\n   * \"Set\" the DateTime's zone to UTC. Returns a newly-constructed DateTime.\n   *\n   * Equivalent to {@link DateTime#setZone}('utc')\n   * @param {number} [offset=0] - optionally, an offset from UTC in minutes\n   * @param {Object} [opts={}] - options to pass to `setZone()`\n   * @return {DateTime}\n   */\n  toUTC(offset = 0, opts = {}) {\n    return this.setZone(FixedOffsetZone.instance(offset), opts);\n  }\n\n  /**\n   * \"Set\" the DateTime's zone to the host's local zone. Returns a newly-constructed DateTime.\n   *\n   * Equivalent to `setZone('local')`\n   * @return {DateTime}\n   */\n  toLocal() {\n    return this.setZone(Settings.defaultZone);\n  }\n\n  /**\n   * \"Set\" the DateTime's zone to specified zone. Returns a newly-constructed DateTime.\n   *\n   * By default, the setter keeps the underlying time the same (as in, the same timestamp), but the new instance will report different local times and consider DSTs when making computations, as with {@link DateTime#plus}. You may wish to use {@link DateTime#toLocal} and {@link DateTime#toUTC} which provide simple convenience wrappers for commonly used zones.\n   * @param {string|Zone} [zone='local'] - a zone identifier. As a string, that can be any IANA zone supported by the host environment, or a fixed-offset name of the form 'UTC+3', or the strings 'local' or 'utc'. You may also supply an instance of a {@link DateTime#Zone} class.\n   * @param {Object} opts - options\n   * @param {boolean} [opts.keepLocalTime=false] - If true, adjust the underlying time so that the local time stays the same, but in the target zone. You should rarely need this.\n   * @return {DateTime}\n   */\n  setZone(zone, { keepLocalTime = false, keepCalendarTime = false } = {}) {\n    zone = normalizeZone(zone, Settings.defaultZone);\n    if (zone.equals(this.zone)) {\n      return this;\n    } else if (!zone.isValid) {\n      return DateTime.invalid(unsupportedZone(zone));\n    } else {\n      let newTS = this.ts;\n      if (keepLocalTime || keepCalendarTime) {\n        const offsetGuess = zone.offset(this.ts);\n        const asObj = this.toObject();\n        [newTS] = objToTS(asObj, offsetGuess, zone);\n      }\n      return clone(this, { ts: newTS, zone });\n    }\n  }\n\n  /**\n   * \"Set\" the locale, numberingSystem, or outputCalendar. Returns a newly-constructed DateTime.\n   * @param {Object} properties - the properties to set\n   * @example DateTime.local(2017, 5, 25).reconfigure({ locale: 'en-GB' })\n   * @return {DateTime}\n   */\n  reconfigure({ locale, numberingSystem, outputCalendar } = {}) {\n    const loc = this.loc.clone({ locale, numberingSystem, outputCalendar });\n    return clone(this, { loc });\n  }\n\n  /**\n   * \"Set\" the locale. Returns a newly-constructed DateTime.\n   * Just a convenient alias for reconfigure({ locale })\n   * @example DateTime.local(2017, 5, 25).setLocale('en-GB')\n   * @return {DateTime}\n   */\n  setLocale(locale) {\n    return this.reconfigure({ locale });\n  }\n\n  /**\n   * \"Set\" the values of specified units. Returns a newly-constructed DateTime.\n   * You can only set units with this method; for \"setting\" metadata, see {@link DateTime#reconfigure} and {@link DateTime#setZone}.\n   * @param {Object} values - a mapping of units to numbers\n   * @example dt.set({ year: 2017 })\n   * @example dt.set({ hour: 8, minute: 30 })\n   * @example dt.set({ weekday: 5 })\n   * @example dt.set({ year: 2005, ordinal: 234 })\n   * @return {DateTime}\n   */\n  set(values) {\n    if (!this.isValid) return this;\n\n    const normalized = normalizeObject(values, normalizeUnit),\n      settingWeekStuff =\n        !isUndefined(normalized.weekYear) ||\n        !isUndefined(normalized.weekNumber) ||\n        !isUndefined(normalized.weekday),\n      containsOrdinal = !isUndefined(normalized.ordinal),\n      containsGregorYear = !isUndefined(normalized.year),\n      containsGregorMD = !isUndefined(normalized.month) || !isUndefined(normalized.day),\n      containsGregor = containsGregorYear || containsGregorMD,\n      definiteWeekDef = normalized.weekYear || normalized.weekNumber;\n\n    if ((containsGregor || containsOrdinal) && definiteWeekDef) {\n      throw new ConflictingSpecificationError(\n        \"Can't mix weekYear/weekNumber units with year/month/day or ordinals\"\n      );\n    }\n\n    if (containsGregorMD && containsOrdinal) {\n      throw new ConflictingSpecificationError(\"Can't mix ordinal dates with month/day\");\n    }\n\n    let mixed;\n    if (settingWeekStuff) {\n      mixed = weekToGregorian({ ...gregorianToWeek(this.c), ...normalized });\n    } else if (!isUndefined(normalized.ordinal)) {\n      mixed = ordinalToGregorian({ ...gregorianToOrdinal(this.c), ...normalized });\n    } else {\n      mixed = { ...this.toObject(), ...normalized };\n\n      // if we didn't set the day but we ended up on an overflow date,\n      // use the last day of the right month\n      if (isUndefined(normalized.day)) {\n        mixed.day = Math.min(daysInMonth(mixed.year, mixed.month), mixed.day);\n      }\n    }\n\n    const [ts, o] = objToTS(mixed, this.o, this.zone);\n    return clone(this, { ts, o });\n  }\n\n  /**\n   * Add a period of time to this DateTime and return the resulting DateTime\n   *\n   * Adding hours, minutes, seconds, or milliseconds increases the timestamp by the right number of milliseconds. Adding days, months, or years shifts the calendar, accounting for DSTs and leap years along the way. Thus, `dt.plus({ hours: 24 })` may result in a different time than `dt.plus({ days: 1 })` if there's a DST shift in between.\n   * @param {Duration|Object|number} duration - The amount to add. Either a Luxon Duration, a number of milliseconds, the object argument to Duration.fromObject()\n   * @example DateTime.now().plus(123) //~> in 123 milliseconds\n   * @example DateTime.now().plus({ minutes: 15 }) //~> in 15 minutes\n   * @example DateTime.now().plus({ days: 1 }) //~> this time tomorrow\n   * @example DateTime.now().plus({ days: -1 }) //~> this time yesterday\n   * @example DateTime.now().plus({ hours: 3, minutes: 13 }) //~> in 3 hr, 13 min\n   * @example DateTime.now().plus(Duration.fromObject({ hours: 3, minutes: 13 })) //~> in 3 hr, 13 min\n   * @return {DateTime}\n   */\n  plus(duration) {\n    if (!this.isValid) return this;\n    const dur = Duration.fromDurationLike(duration);\n    return clone(this, adjustTime(this, dur));\n  }\n\n  /**\n   * Subtract a period of time to this DateTime and return the resulting DateTime\n   * See {@link DateTime#plus}\n   * @param {Duration|Object|number} duration - The amount to subtract. Either a Luxon Duration, a number of milliseconds, the object argument to Duration.fromObject()\n   @return {DateTime}\n   */\n  minus(duration) {\n    if (!this.isValid) return this;\n    const dur = Duration.fromDurationLike(duration).negate();\n    return clone(this, adjustTime(this, dur));\n  }\n\n  /**\n   * \"Set\" this DateTime to the beginning of a unit of time.\n   * @param {string} unit - The unit to go to the beginning of. Can be 'year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', or 'millisecond'.\n   * @example DateTime.local(2014, 3, 3).startOf('month').toISODate(); //=> '2014-03-01'\n   * @example DateTime.local(2014, 3, 3).startOf('year').toISODate(); //=> '2014-01-01'\n   * @example DateTime.local(2014, 3, 3).startOf('week').toISODate(); //=> '2014-03-03', weeks always start on Mondays\n   * @example DateTime.local(2014, 3, 3, 5, 30).startOf('day').toISOTime(); //=> '00:00.000-05:00'\n   * @example DateTime.local(2014, 3, 3, 5, 30).startOf('hour').toISOTime(); //=> '05:00:00.000-05:00'\n   * @return {DateTime}\n   */\n  startOf(unit) {\n    if (!this.isValid) return this;\n    const o = {},\n      normalizedUnit = Duration.normalizeUnit(unit);\n    switch (normalizedUnit) {\n      case \"years\":\n        o.month = 1;\n      // falls through\n      case \"quarters\":\n      case \"months\":\n        o.day = 1;\n      // falls through\n      case \"weeks\":\n      case \"days\":\n        o.hour = 0;\n      // falls through\n      case \"hours\":\n        o.minute = 0;\n      // falls through\n      case \"minutes\":\n        o.second = 0;\n      // falls through\n      case \"seconds\":\n        o.millisecond = 0;\n        break;\n      case \"milliseconds\":\n        break;\n      // no default, invalid units throw in normalizeUnit()\n    }\n\n    if (normalizedUnit === \"weeks\") {\n      o.weekday = 1;\n    }\n\n    if (normalizedUnit === \"quarters\") {\n      const q = Math.ceil(this.month / 3);\n      o.month = (q - 1) * 3 + 1;\n    }\n\n    return this.set(o);\n  }\n\n  /**\n   * \"Set\" this DateTime to the end (meaning the last millisecond) of a unit of time\n   * @param {string} unit - The unit to go to the end of. Can be 'year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', or 'millisecond'.\n   * @example DateTime.local(2014, 3, 3).endOf('month').toISO(); //=> '2014-03-31T23:59:59.999-05:00'\n   * @example DateTime.local(2014, 3, 3).endOf('year').toISO(); //=> '2014-12-31T23:59:59.999-05:00'\n   * @example DateTime.local(2014, 3, 3).endOf('week').toISO(); // => '2014-03-09T23:59:59.999-05:00', weeks start on Mondays\n   * @example DateTime.local(2014, 3, 3, 5, 30).endOf('day').toISO(); //=> '2014-03-03T23:59:59.999-05:00'\n   * @example DateTime.local(2014, 3, 3, 5, 30).endOf('hour').toISO(); //=> '2014-03-03T05:59:59.999-05:00'\n   * @return {DateTime}\n   */\n  endOf(unit) {\n    return this.isValid\n      ? this.plus({ [unit]: 1 })\n          .startOf(unit)\n          .minus(1)\n      : this;\n  }\n\n  // OUTPUT\n\n  /**\n   * Returns a string representation of this DateTime formatted according to the specified format string.\n   * **You may not want this.** See {@link DateTime#toLocaleString} for a more flexible formatting tool. For a table of tokens and their interpretations, see [here](https://moment.github.io/luxon/#/formatting?id=table-of-tokens).\n   * Defaults to en-US if no locale has been specified, regardless of the system's locale.\n   * @param {string} fmt - the format string\n   * @param {Object} opts - opts to override the configuration options on this DateTime\n   * @example DateTime.now().toFormat('yyyy LLL dd') //=> '2017 Apr 22'\n   * @example DateTime.now().setLocale('fr').toFormat('yyyy LLL dd') //=> '2017 avr. 22'\n   * @example DateTime.now().toFormat('yyyy LLL dd', { locale: \"fr\" }) //=> '2017 avr. 22'\n   * @example DateTime.now().toFormat(\"HH 'hours and' mm 'minutes'\") //=> '20 hours and 55 minutes'\n   * @return {string}\n   */\n  toFormat(fmt, opts = {}) {\n    return this.isValid\n      ? Formatter.create(this.loc.redefaultToEN(opts)).formatDateTimeFromString(this, fmt)\n      : INVALID;\n  }\n\n  /**\n   * Returns a localized string representing this date. Accepts the same options as the Intl.DateTimeFormat constructor and any presets defined by Luxon, such as `DateTime.DATE_FULL` or `DateTime.TIME_SIMPLE`.\n   * The exact behavior of this method is browser-specific, but in general it will return an appropriate representation\n   * of the DateTime in the assigned locale.\n   * Defaults to the system's locale if no locale has been specified\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat\n   * @param formatOpts {Object} - Intl.DateTimeFormat constructor options and configuration options\n   * @param {Object} opts - opts to override the configuration options on this DateTime\n   * @example DateTime.now().toLocaleString(); //=> 4/20/2017\n   * @example DateTime.now().setLocale('en-gb').toLocaleString(); //=> '20/04/2017'\n   * @example DateTime.now().toLocaleString(DateTime.DATE_FULL); //=> 'April 20, 2017'\n   * @example DateTime.now().toLocaleString(DateTime.DATE_FULL, { locale: 'fr' }); //=> '28 ao\u00FBt 2022'\n   * @example DateTime.now().toLocaleString(DateTime.TIME_SIMPLE); //=> '11:32 AM'\n   * @example DateTime.now().toLocaleString(DateTime.DATETIME_SHORT); //=> '4/20/2017, 11:32 AM'\n   * @example DateTime.now().toLocaleString({ weekday: 'long', month: 'long', day: '2-digit' }); //=> 'Thursday, April 20'\n   * @example DateTime.now().toLocaleString({ weekday: 'short', month: 'short', day: '2-digit', hour: '2-digit', minute: '2-digit' }); //=> 'Thu, Apr 20, 11:27 AM'\n   * @example DateTime.now().toLocaleString({ hour: '2-digit', minute: '2-digit', hourCycle: 'h23' }); //=> '11:32'\n   * @return {string}\n   */\n  toLocaleString(formatOpts = Formats.DATE_SHORT, opts = {}) {\n    return this.isValid\n      ? Formatter.create(this.loc.clone(opts), formatOpts).formatDateTime(this)\n      : INVALID;\n  }\n\n  /**\n   * Returns an array of format \"parts\", meaning individual tokens along with metadata. This is allows callers to post-process individual sections of the formatted output.\n   * Defaults to the system's locale if no locale has been specified\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat/formatToParts\n   * @param opts {Object} - Intl.DateTimeFormat constructor options, same as `toLocaleString`.\n   * @example DateTime.now().toLocaleParts(); //=> [\n   *                                   //=>   { type: 'day', value: '25' },\n   *                                   //=>   { type: 'literal', value: '/' },\n   *                                   //=>   { type: 'month', value: '05' },\n   *                                   //=>   { type: 'literal', value: '/' },\n   *                                   //=>   { type: 'year', value: '1982' }\n   *                                   //=> ]\n   */\n  toLocaleParts(opts = {}) {\n    return this.isValid\n      ? Formatter.create(this.loc.clone(opts), opts).formatDateTimeParts(this)\n      : [];\n  }\n\n  /**\n   * Returns an ISO 8601-compliant string representation of this DateTime\n   * @param {Object} opts - options\n   * @param {boolean} [opts.suppressMilliseconds=false] - exclude milliseconds from the format if they're 0\n   * @param {boolean} [opts.suppressSeconds=false] - exclude seconds from the format if they're 0\n   * @param {boolean} [opts.includeOffset=true] - include the offset, such as 'Z' or '-04:00'\n   * @param {boolean} [opts.extendedZone=false] - add the time zone format extension\n   * @param {string} [opts.format='extended'] - choose between the basic and extended format\n   * @example DateTime.utc(1983, 5, 25).toISO() //=> '1982-05-25T00:00:00.000Z'\n   * @example DateTime.now().toISO() //=> '2017-04-22T20:47:05.335-04:00'\n   * @example DateTime.now().toISO({ includeOffset: false }) //=> '2017-04-22T20:47:05.335'\n   * @example DateTime.now().toISO({ format: 'basic' }) //=> '20170422T204705.335-0400'\n   * @return {string}\n   */\n  toISO({\n    format = \"extended\",\n    suppressSeconds = false,\n    suppressMilliseconds = false,\n    includeOffset = true,\n    extendedZone = false,\n  } = {}) {\n    if (!this.isValid) {\n      return null;\n    }\n\n    const ext = format === \"extended\";\n\n    let c = toISODate(this, ext);\n    c += \"T\";\n    c += toISOTime(this, ext, suppressSeconds, suppressMilliseconds, includeOffset, extendedZone);\n    return c;\n  }\n\n  /**\n   * Returns an ISO 8601-compliant string representation of this DateTime's date component\n   * @param {Object} opts - options\n   * @param {string} [opts.format='extended'] - choose between the basic and extended format\n   * @example DateTime.utc(1982, 5, 25).toISODate() //=> '1982-05-25'\n   * @example DateTime.utc(1982, 5, 25).toISODate({ format: 'basic' }) //=> '19820525'\n   * @return {string}\n   */\n  toISODate({ format = \"extended\" } = {}) {\n    if (!this.isValid) {\n      return null;\n    }\n\n    return toISODate(this, format === \"extended\");\n  }\n\n  /**\n   * Returns an ISO 8601-compliant string representation of this DateTime's week date\n   * @example DateTime.utc(1982, 5, 25).toISOWeekDate() //=> '1982-W21-2'\n   * @return {string}\n   */\n  toISOWeekDate() {\n    return toTechFormat(this, \"kkkk-'W'WW-c\");\n  }\n\n  /**\n   * Returns an ISO 8601-compliant string representation of this DateTime's time component\n   * @param {Object} opts - options\n   * @param {boolean} [opts.suppressMilliseconds=false] - exclude milliseconds from the format if they're 0\n   * @param {boolean} [opts.suppressSeconds=false] - exclude seconds from the format if they're 0\n   * @param {boolean} [opts.includeOffset=true] - include the offset, such as 'Z' or '-04:00'\n   * @param {boolean} [opts.extendedZone=true] - add the time zone format extension\n   * @param {boolean} [opts.includePrefix=false] - include the `T` prefix\n   * @param {string} [opts.format='extended'] - choose between the basic and extended format\n   * @example DateTime.utc().set({ hour: 7, minute: 34 }).toISOTime() //=> '07:34:19.361Z'\n   * @example DateTime.utc().set({ hour: 7, minute: 34, seconds: 0, milliseconds: 0 }).toISOTime({ suppressSeconds: true }) //=> '07:34Z'\n   * @example DateTime.utc().set({ hour: 7, minute: 34 }).toISOTime({ format: 'basic' }) //=> '073419.361Z'\n   * @example DateTime.utc().set({ hour: 7, minute: 34 }).toISOTime({ includePrefix: true }) //=> 'T07:34:19.361Z'\n   * @return {string}\n   */\n  toISOTime({\n    suppressMilliseconds = false,\n    suppressSeconds = false,\n    includeOffset = true,\n    includePrefix = false,\n    extendedZone = false,\n    format = \"extended\",\n  } = {}) {\n    if (!this.isValid) {\n      return null;\n    }\n\n    let c = includePrefix ? \"T\" : \"\";\n    return (\n      c +\n      toISOTime(\n        this,\n        format === \"extended\",\n        suppressSeconds,\n        suppressMilliseconds,\n        includeOffset,\n        extendedZone\n      )\n    );\n  }\n\n  /**\n   * Returns an RFC 2822-compatible string representation of this DateTime\n   * @example DateTime.utc(2014, 7, 13).toRFC2822() //=> 'Sun, 13 Jul 2014 00:00:00 +0000'\n   * @example DateTime.local(2014, 7, 13).toRFC2822() //=> 'Sun, 13 Jul 2014 00:00:00 -0400'\n   * @return {string}\n   */\n  toRFC2822() {\n    return toTechFormat(this, \"EEE, dd LLL yyyy HH:mm:ss ZZZ\", false);\n  }\n\n  /**\n   * Returns a string representation of this DateTime appropriate for use in HTTP headers. The output is always expressed in GMT.\n   * Specifically, the string conforms to RFC 1123.\n   * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1\n   * @example DateTime.utc(2014, 7, 13).toHTTP() //=> 'Sun, 13 Jul 2014 00:00:00 GMT'\n   * @example DateTime.utc(2014, 7, 13, 19).toHTTP() //=> 'Sun, 13 Jul 2014 19:00:00 GMT'\n   * @return {string}\n   */\n  toHTTP() {\n    return toTechFormat(this.toUTC(), \"EEE, dd LLL yyyy HH:mm:ss 'GMT'\");\n  }\n\n  /**\n   * Returns a string representation of this DateTime appropriate for use in SQL Date\n   * @example DateTime.utc(2014, 7, 13).toSQLDate() //=> '2014-07-13'\n   * @return {string}\n   */\n  toSQLDate() {\n    if (!this.isValid) {\n      return null;\n    }\n    return toISODate(this, true);\n  }\n\n  /**\n   * Returns a string representation of this DateTime appropriate for use in SQL Time\n   * @param {Object} opts - options\n   * @param {boolean} [opts.includeZone=false] - include the zone, such as 'America/New_York'. Overrides includeOffset.\n   * @param {boolean} [opts.includeOffset=true] - include the offset, such as 'Z' or '-04:00'\n   * @param {boolean} [opts.includeOffsetSpace=true] - include the space between the time and the offset, such as '05:15:16.345 -04:00'\n   * @example DateTime.utc().toSQL() //=> '05:15:16.345'\n   * @example DateTime.now().toSQL() //=> '05:15:16.345 -04:00'\n   * @example DateTime.now().toSQL({ includeOffset: false }) //=> '05:15:16.345'\n   * @example DateTime.now().toSQL({ includeZone: false }) //=> '05:15:16.345 America/New_York'\n   * @return {string}\n   */\n  toSQLTime({ includeOffset = true, includeZone = false, includeOffsetSpace = true } = {}) {\n    let fmt = \"HH:mm:ss.SSS\";\n\n    if (includeZone || includeOffset) {\n      if (includeOffsetSpace) {\n        fmt += \" \";\n      }\n      if (includeZone) {\n        fmt += \"z\";\n      } else if (includeOffset) {\n        fmt += \"ZZ\";\n      }\n    }\n\n    return toTechFormat(this, fmt, true);\n  }\n\n  /**\n   * Returns a string representation of this DateTime appropriate for use in SQL DateTime\n   * @param {Object} opts - options\n   * @param {boolean} [opts.includeZone=false] - include the zone, such as 'America/New_York'. Overrides includeOffset.\n   * @param {boolean} [opts.includeOffset=true] - include the offset, such as 'Z' or '-04:00'\n   * @param {boolean} [opts.includeOffsetSpace=true] - include the space between the time and the offset, such as '05:15:16.345 -04:00'\n   * @example DateTime.utc(2014, 7, 13).toSQL() //=> '2014-07-13 00:00:00.000 Z'\n   * @example DateTime.local(2014, 7, 13).toSQL() //=> '2014-07-13 00:00:00.000 -04:00'\n   * @example DateTime.local(2014, 7, 13).toSQL({ includeOffset: false }) //=> '2014-07-13 00:00:00.000'\n   * @example DateTime.local(2014, 7, 13).toSQL({ includeZone: true }) //=> '2014-07-13 00:00:00.000 America/New_York'\n   * @return {string}\n   */\n  toSQL(opts = {}) {\n    if (!this.isValid) {\n      return null;\n    }\n\n    return `${this.toSQLDate()} ${this.toSQLTime(opts)}`;\n  }\n\n  /**\n   * Returns a string representation of this DateTime appropriate for debugging\n   * @return {string}\n   */\n  toString() {\n    return this.isValid ? this.toISO() : INVALID;\n  }\n\n  /**\n   * Returns the epoch milliseconds of this DateTime. Alias of {@link DateTime#toMillis}\n   * @return {number}\n   */\n  valueOf() {\n    return this.toMillis();\n  }\n\n  /**\n   * Returns the epoch milliseconds of this DateTime.\n   * @return {number}\n   */\n  toMillis() {\n    return this.isValid ? this.ts : NaN;\n  }\n\n  /**\n   * Returns the epoch seconds of this DateTime.\n   * @return {number}\n   */\n  toSeconds() {\n    return this.isValid ? this.ts / 1000 : NaN;\n  }\n\n  /**\n   * Returns the epoch seconds (as a whole number) of this DateTime.\n   * @return {number}\n   */\n  toUnixInteger() {\n    return this.isValid ? Math.floor(this.ts / 1000) : NaN;\n  }\n\n  /**\n   * Returns an ISO 8601 representation of this DateTime appropriate for use in JSON.\n   * @return {string}\n   */\n  toJSON() {\n    return this.toISO();\n  }\n\n  /**\n   * Returns a BSON serializable equivalent to this DateTime.\n   * @return {Date}\n   */\n  toBSON() {\n    return this.toJSDate();\n  }\n\n  /**\n   * Returns a JavaScript object with this DateTime's year, month, day, and so on.\n   * @param opts - options for generating the object\n   * @param {boolean} [opts.includeConfig=false] - include configuration attributes in the output\n   * @example DateTime.now().toObject() //=> { year: 2017, month: 4, day: 22, hour: 20, minute: 49, second: 42, millisecond: 268 }\n   * @return {Object}\n   */\n  toObject(opts = {}) {\n    if (!this.isValid) return {};\n\n    const base = { ...this.c };\n\n    if (opts.includeConfig) {\n      base.outputCalendar = this.outputCalendar;\n      base.numberingSystem = this.loc.numberingSystem;\n      base.locale = this.loc.locale;\n    }\n    return base;\n  }\n\n  /**\n   * Returns a JavaScript Date equivalent to this DateTime.\n   * @return {Date}\n   */\n  toJSDate() {\n    return new Date(this.isValid ? this.ts : NaN);\n  }\n\n  // COMPARE\n\n  /**\n   * Return the difference between two DateTimes as a Duration.\n   * @param {DateTime} otherDateTime - the DateTime to compare this one to\n   * @param {string|string[]} [unit=['milliseconds']] - the unit or array of units (such as 'hours' or 'days') to include in the duration.\n   * @param {Object} opts - options that affect the creation of the Duration\n   * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use\n   * @example\n   * var i1 = DateTime.fromISO('1982-05-25T09:45'),\n   *     i2 = DateTime.fromISO('1983-10-14T10:30');\n   * i2.diff(i1).toObject() //=> { milliseconds: 43807500000 }\n   * i2.diff(i1, 'hours').toObject() //=> { hours: 12168.75 }\n   * i2.diff(i1, ['months', 'days']).toObject() //=> { months: 16, days: 19.03125 }\n   * i2.diff(i1, ['months', 'days', 'hours']).toObject() //=> { months: 16, days: 19, hours: 0.75 }\n   * @return {Duration}\n   */\n  diff(otherDateTime, unit = \"milliseconds\", opts = {}) {\n    if (!this.isValid || !otherDateTime.isValid) {\n      return Duration.invalid(\"created by diffing an invalid DateTime\");\n    }\n\n    const durOpts = { locale: this.locale, numberingSystem: this.numberingSystem, ...opts };\n\n    const units = maybeArray(unit).map(Duration.normalizeUnit),\n      otherIsLater = otherDateTime.valueOf() > this.valueOf(),\n      earlier = otherIsLater ? this : otherDateTime,\n      later = otherIsLater ? otherDateTime : this,\n      diffed = diff(earlier, later, units, durOpts);\n\n    return otherIsLater ? diffed.negate() : diffed;\n  }\n\n  /**\n   * Return the difference between this DateTime and right now.\n   * See {@link DateTime#diff}\n   * @param {string|string[]} [unit=['milliseconds']] - the unit or units units (such as 'hours' or 'days') to include in the duration\n   * @param {Object} opts - options that affect the creation of the Duration\n   * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use\n   * @return {Duration}\n   */\n  diffNow(unit = \"milliseconds\", opts = {}) {\n    return this.diff(DateTime.now(), unit, opts);\n  }\n\n  /**\n   * Return an Interval spanning between this DateTime and another DateTime\n   * @param {DateTime} otherDateTime - the other end point of the Interval\n   * @return {Interval}\n   */\n  until(otherDateTime) {\n    return this.isValid ? Interval.fromDateTimes(this, otherDateTime) : this;\n  }\n\n  /**\n   * Return whether this DateTime is in the same unit of time as another DateTime.\n   * Higher-order units must also be identical for this function to return `true`.\n   * Note that time zones are **ignored** in this comparison, which compares the **local** calendar time. Use {@link DateTime#setZone} to convert one of the dates if needed.\n   * @param {DateTime} otherDateTime - the other DateTime\n   * @param {string} unit - the unit of time to check sameness on\n   * @example DateTime.now().hasSame(otherDT, 'day'); //~> true if otherDT is in the same current calendar day\n   * @return {boolean}\n   */\n  hasSame(otherDateTime, unit) {\n    if (!this.isValid) return false;\n\n    const inputMs = otherDateTime.valueOf();\n    const adjustedToZone = this.setZone(otherDateTime.zone, { keepLocalTime: true });\n    return adjustedToZone.startOf(unit) <= inputMs && inputMs <= adjustedToZone.endOf(unit);\n  }\n\n  /**\n   * Equality check\n   * Two DateTimes are equal if and only if they represent the same millisecond, have the same zone and location, and are both valid.\n   * To compare just the millisecond values, use `+dt1 === +dt2`.\n   * @param {DateTime} other - the other DateTime\n   * @return {boolean}\n   */\n  equals(other) {\n    return (\n      this.isValid &&\n      other.isValid &&\n      this.valueOf() === other.valueOf() &&\n      this.zone.equals(other.zone) &&\n      this.loc.equals(other.loc)\n    );\n  }\n\n  /**\n   * Returns a string representation of a this time relative to now, such as \"in two days\". Can only internationalize if your\n   * platform supports Intl.RelativeTimeFormat. Rounds down by default.\n   * @param {Object} options - options that affect the output\n   * @param {DateTime} [options.base=DateTime.now()] - the DateTime to use as the basis to which this time is compared. Defaults to now.\n   * @param {string} [options.style=\"long\"] - the style of units, must be \"long\", \"short\", or \"narrow\"\n   * @param {string|string[]} options.unit - use a specific unit or array of units; if omitted, or an array, the method will pick the best unit. Use an array or one of \"years\", \"quarters\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", or \"seconds\"\n   * @param {boolean} [options.round=true] - whether to round the numbers in the output.\n   * @param {number} [options.padding=0] - padding in milliseconds. This allows you to round up the result if it fits inside the threshold. Don't use in combination with {round: false} because the decimal output will include the padding.\n   * @param {string} options.locale - override the locale of this DateTime\n   * @param {string} options.numberingSystem - override the numberingSystem of this DateTime. The Intl system may choose not to honor this\n   * @example DateTime.now().plus({ days: 1 }).toRelative() //=> \"in 1 day\"\n   * @example DateTime.now().setLocale(\"es\").toRelative({ days: 1 }) //=> \"dentro de 1 d\u00EDa\"\n   * @example DateTime.now().plus({ days: 1 }).toRelative({ locale: \"fr\" }) //=> \"dans 23 heures\"\n   * @example DateTime.now().minus({ days: 2 }).toRelative() //=> \"2 days ago\"\n   * @example DateTime.now().minus({ days: 2 }).toRelative({ unit: \"hours\" }) //=> \"48 hours ago\"\n   * @example DateTime.now().minus({ hours: 36 }).toRelative({ round: false }) //=> \"1.5 days ago\"\n   */\n  toRelative(options = {}) {\n    if (!this.isValid) return null;\n    const base = options.base || DateTime.fromObject({}, { zone: this.zone }),\n      padding = options.padding ? (this < base ? -options.padding : options.padding) : 0;\n    let units = [\"years\", \"months\", \"days\", \"hours\", \"minutes\", \"seconds\"];\n    let unit = options.unit;\n    if (Array.isArray(options.unit)) {\n      units = options.unit;\n      unit = undefined;\n    }\n    return diffRelative(base, this.plus(padding), {\n      ...options,\n      numeric: \"always\",\n      units,\n      unit,\n    });\n  }\n\n  /**\n   * Returns a string representation of this date relative to today, such as \"yesterday\" or \"next month\".\n   * Only internationalizes on platforms that supports Intl.RelativeTimeFormat.\n   * @param {Object} options - options that affect the output\n   * @param {DateTime} [options.base=DateTime.now()] - the DateTime to use as the basis to which this time is compared. Defaults to now.\n   * @param {string} options.locale - override the locale of this DateTime\n   * @param {string} options.unit - use a specific unit; if omitted, the method will pick the unit. Use one of \"years\", \"quarters\", \"months\", \"weeks\", or \"days\"\n   * @param {string} options.numberingSystem - override the numberingSystem of this DateTime. The Intl system may choose not to honor this\n   * @example DateTime.now().plus({ days: 1 }).toRelativeCalendar() //=> \"tomorrow\"\n   * @example DateTime.now().setLocale(\"es\").plus({ days: 1 }).toRelative() //=> \"\"ma\u00F1ana\"\n   * @example DateTime.now().plus({ days: 1 }).toRelativeCalendar({ locale: \"fr\" }) //=> \"demain\"\n   * @example DateTime.now().minus({ days: 2 }).toRelativeCalendar() //=> \"2 days ago\"\n   */\n  toRelativeCalendar(options = {}) {\n    if (!this.isValid) return null;\n\n    return diffRelative(options.base || DateTime.fromObject({}, { zone: this.zone }), this, {\n      ...options,\n      numeric: \"auto\",\n      units: [\"years\", \"months\", \"days\"],\n      calendary: true,\n    });\n  }\n\n  /**\n   * Return the min of several date times\n   * @param {...DateTime} dateTimes - the DateTimes from which to choose the minimum\n   * @return {DateTime} the min DateTime, or undefined if called with no argument\n   */\n  static min(...dateTimes) {\n    if (!dateTimes.every(DateTime.isDateTime)) {\n      throw new InvalidArgumentError(\"min requires all arguments be DateTimes\");\n    }\n    return bestBy(dateTimes, (i) => i.valueOf(), Math.min);\n  }\n\n  /**\n   * Return the max of several date times\n   * @param {...DateTime} dateTimes - the DateTimes from which to choose the maximum\n   * @return {DateTime} the max DateTime, or undefined if called with no argument\n   */\n  static max(...dateTimes) {\n    if (!dateTimes.every(DateTime.isDateTime)) {\n      throw new InvalidArgumentError(\"max requires all arguments be DateTimes\");\n    }\n    return bestBy(dateTimes, (i) => i.valueOf(), Math.max);\n  }\n\n  // MISC\n\n  /**\n   * Explain how a string would be parsed by fromFormat()\n   * @param {string} text - the string to parse\n   * @param {string} fmt - the format the string is expected to be in (see description)\n   * @param {Object} options - options taken by fromFormat()\n   * @return {Object}\n   */\n  static fromFormatExplain(text, fmt, options = {}) {\n    const { locale = null, numberingSystem = null } = options,\n      localeToUse = Locale.fromOpts({\n        locale,\n        numberingSystem,\n        defaultToEN: true,\n      });\n    return explainFromTokens(localeToUse, text, fmt);\n  }\n\n  /**\n   * @deprecated use fromFormatExplain instead\n   */\n  static fromStringExplain(text, fmt, options = {}) {\n    return DateTime.fromFormatExplain(text, fmt, options);\n  }\n\n  // FORMAT PRESETS\n\n  /**\n   * {@link DateTime#toLocaleString} format like 10/14/1983\n   * @type {Object}\n   */\n  static get DATE_SHORT() {\n    return Formats.DATE_SHORT;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like 'Oct 14, 1983'\n   * @type {Object}\n   */\n  static get DATE_MED() {\n    return Formats.DATE_MED;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like 'Fri, Oct 14, 1983'\n   * @type {Object}\n   */\n  static get DATE_MED_WITH_WEEKDAY() {\n    return Formats.DATE_MED_WITH_WEEKDAY;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like 'October 14, 1983'\n   * @type {Object}\n   */\n  static get DATE_FULL() {\n    return Formats.DATE_FULL;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like 'Tuesday, October 14, 1983'\n   * @type {Object}\n   */\n  static get DATE_HUGE() {\n    return Formats.DATE_HUGE;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like '09:30 AM'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get TIME_SIMPLE() {\n    return Formats.TIME_SIMPLE;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like '09:30:23 AM'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get TIME_WITH_SECONDS() {\n    return Formats.TIME_WITH_SECONDS;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like '09:30:23 AM EDT'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get TIME_WITH_SHORT_OFFSET() {\n    return Formats.TIME_WITH_SHORT_OFFSET;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like '09:30:23 AM Eastern Daylight Time'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get TIME_WITH_LONG_OFFSET() {\n    return Formats.TIME_WITH_LONG_OFFSET;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like '09:30', always 24-hour.\n   * @type {Object}\n   */\n  static get TIME_24_SIMPLE() {\n    return Formats.TIME_24_SIMPLE;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like '09:30:23', always 24-hour.\n   * @type {Object}\n   */\n  static get TIME_24_WITH_SECONDS() {\n    return Formats.TIME_24_WITH_SECONDS;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like '09:30:23 EDT', always 24-hour.\n   * @type {Object}\n   */\n  static get TIME_24_WITH_SHORT_OFFSET() {\n    return Formats.TIME_24_WITH_SHORT_OFFSET;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like '09:30:23 Eastern Daylight Time', always 24-hour.\n   * @type {Object}\n   */\n  static get TIME_24_WITH_LONG_OFFSET() {\n    return Formats.TIME_24_WITH_LONG_OFFSET;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like '10/14/1983, 9:30 AM'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get DATETIME_SHORT() {\n    return Formats.DATETIME_SHORT;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like '10/14/1983, 9:30:33 AM'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get DATETIME_SHORT_WITH_SECONDS() {\n    return Formats.DATETIME_SHORT_WITH_SECONDS;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like 'Oct 14, 1983, 9:30 AM'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get DATETIME_MED() {\n    return Formats.DATETIME_MED;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like 'Oct 14, 1983, 9:30:33 AM'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get DATETIME_MED_WITH_SECONDS() {\n    return Formats.DATETIME_MED_WITH_SECONDS;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like 'Fri, 14 Oct 1983, 9:30 AM'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get DATETIME_MED_WITH_WEEKDAY() {\n    return Formats.DATETIME_MED_WITH_WEEKDAY;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like 'October 14, 1983, 9:30 AM EDT'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get DATETIME_FULL() {\n    return Formats.DATETIME_FULL;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like 'October 14, 1983, 9:30:33 AM EDT'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get DATETIME_FULL_WITH_SECONDS() {\n    return Formats.DATETIME_FULL_WITH_SECONDS;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like 'Friday, October 14, 1983, 9:30 AM Eastern Daylight Time'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get DATETIME_HUGE() {\n    return Formats.DATETIME_HUGE;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like 'Friday, October 14, 1983, 9:30:33 AM Eastern Daylight Time'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get DATETIME_HUGE_WITH_SECONDS() {\n    return Formats.DATETIME_HUGE_WITH_SECONDS;\n  }\n}\n\n/**\n * @private\n */\nexport function friendlyDateTime(dateTimeish) {\n  if (DateTime.isDateTime(dateTimeish)) {\n    return dateTimeish;\n  } else if (dateTimeish && dateTimeish.valueOf && isNumber(dateTimeish.valueOf())) {\n    return DateTime.fromJSDate(dateTimeish);\n  } else if (dateTimeish && typeof dateTimeish === \"object\") {\n    return DateTime.fromObject(dateTimeish);\n  } else {\n    throw new InvalidArgumentError(\n      `Unknown datetime argument: ${dateTimeish}, of type ${typeof dateTimeish}`\n    );\n  }\n}\n", "import { venues } from \"./geocoded.json\";\nimport { DateTime } from \"luxon\";\nimport { Feature, FeatureCollection } from \"geojson\";\nimport { Show, ShowsByDate, DateItem, ParsedData } from \"./interfaces\";\n\nconst isDev = () => window.location.host.includes(\"localhost\");\n\nexport default class Parser {\n  static async getShowJson(): Promise<Show[]> {\n    const list = isDev()\n      ? \"http://localhost:8000/scrape/foopee\"\n      : \"https://metasyn.pw/show-scraper\";\n    try {\n      return await fetch(list).then((r) => r.json());\n    } catch (err) {\n      return err;\n    }\n  }\n\n  static async get19hzJson(): Promise<Show[]> {\n    const list = isDev()\n      ? \"http://localhost:8000/scrape/19hz\"\n      : \"https://metasyn.pw/show-scraper/19hz\";\n    try {\n      return await fetch(list).then((r) => r.json());\n    } catch (err) {\n      return err;\n    }\n  }\n\n  static async parseData(): Promise<ParsedData> {\n    const [dataTheList, data19hz] = await Promise.all([\n      Parser.getShowJson(),\n      Parser.get19hzJson(),\n    ]);\n\n    const data = dataTheList.concat(data19hz);\n\n    const showsByDate: ShowsByDate = Parser.sortByDate(data);\n    return {\n      featureCollection: Parser.geojsonify(showsByDate),\n      dates: Parser.getDates(showsByDate),\n    };\n  }\n\n  static getDates(organized: ShowsByDate): DateItem[] {\n    return Object.keys(organized).map((x) => {\n      return { date: x, checked: true };\n    });\n  }\n\n  static sortByDate(data: Show[]): ShowsByDate {\n    const organized = {};\n    for (let i = 0; i < data.length; i += 1) {\n      if (!organized[data[i].date]) {\n        organized[data[i].date] = [];\n      }\n      organized[data[i].date].push(data[i]);\n    }\n    return organized;\n  }\n\n  static geojsonify(data: ShowsByDate): FeatureCollection {\n    const features: Feature[] = [];\n    const dateKeys = Object.keys(data);\n\n    // loop through dates\n    for (let i = 0; i < dateKeys.length; i += 1) {\n      // loop through shows\n      for (let j = 0; j < data[dateKeys[i]].length; j += 1) {\n        const item = data[dateKeys[i]][j];\n        const venueList = Object.keys(venues);\n\n        // check for misspellings\n        if (!venues[item.venue]) {\n          try {\n            for (let v = 0; v < venueList.length; v += 1) {\n              const misspelled = item.venue.replace(/\\W/g, \"\").toLowerCase();\n              const spelledCorrect = venueList[v]\n                .replace(/\\W/g, \"\")\n                .toLowerCase();\n              const editDistance = Parser.getEditDistance(\n                misspelled,\n                spelledCorrect\n              );\n              if (editDistance <= 2) {\n                console.log(\n                  `'${item.venue}' has been replaced with '${venueList[v]}'`\n                );\n                item.venue = venueList[v];\n              }\n            }\n          } catch (e) {\n            console.log(\"Missing Venue?\", e);\n          }\n        }\n\n        const coordinates = venues[item.venue]\n          ? venues[item.venue].coordinates\n          : [-122.42296, 37.826524]; // alcatraz\n\n        const show: Feature = {\n          type: \"Feature\",\n          geometry: {\n            type: \"Point\",\n            coordinates,\n          },\n          properties: {\n            sid: `${i}-${j}`,\n            date: dateKeys[i],\n            venue: item.venue,\n            artists: item.artists,\n            details: item.details\n              .replace(/ ,/g, \"\") // too many commas\n              .replace(\"***\", \"\"), // unuseful\n          },\n        };\n\n        // add show to features array\n        features.push(show);\n      }\n    }\n\n    // format for valid geojson\n    const output: FeatureCollection = {\n      type: \"FeatureCollection\",\n      features,\n    };\n    return output;\n  }\n\n  // Compute the edit distance between the two given strings\n  static getEditDistance(a: string, b: string): number {\n    if (a.length === 0) return b.length;\n    if (b.length === 0) return a.length;\n\n    const matrix: number[][] = [];\n\n    // increment along the first column of each row\n    let i: number;\n    for (i = 0; i <= b.length; i += 1) {\n      matrix[i] = [i];\n    }\n\n    // increment each column in the first row\n    let j: number;\n    for (j = 0; j <= a.length; j += 1) {\n      matrix[0][j] = j;\n    }\n\n    // Fill in the rest of the matrix\n    for (i = 1; i <= b.length; i += 1) {\n      for (j = 1; j <= a.length; j += 1) {\n        if (b.charAt(i - 1) === a.charAt(j - 1)) {\n          matrix[i][j] = matrix[i - 1][j - 1];\n        } else {\n          matrix[i][j] = Math.min(\n            matrix[i - 1][j - 1] + 1, // substitution\n            Math.min(\n              matrix[i][j - 1] + 1, // insertion\n              matrix[i - 1][j] + 1\n            )\n          ); // deletion\n        }\n      }\n    }\n\n    return matrix[b.length][a.length];\n  }\n\n  static formatDate(dateString: string): string {\n    const date = DateTime.fromISO(dateString); // force pacific timezone\n    date.setZone(\"America/Los_Angeles\");\n    return `${date.month}-${date.day} ${date.weekdayShort} `;\n  }\n}\n"],
  "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",
  "names": ["maplibregl", "hasOwnProperty", "arr", "self", "require_suggestions", "now", "result", "ReflectApply", "ReflectOwnKeys", "NumberIsNaN", "n", "once", "xhr", "l", "url", "self", "clone", "key", "oneOf", "date", "pick", "pick", "require_events", "nanoid", "match", "pattern", "require_lib", "MapboxGeocoder", "container", "self", "config", "s", "singleton", "offset", "s", "defaultZone", "offset", "n", "n", "offset", "s", "n", "formatOffset", "s", "match", "offset", "n", "l", "s", "INVALID", "start", "s", "e", "s", "INVALID", "clone", "offset", "orderedUnits", "start", "maplibregl", "f", "s", "MapboxGeocoder", "now"]
}
